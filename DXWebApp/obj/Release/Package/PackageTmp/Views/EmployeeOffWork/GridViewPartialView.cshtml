
@using ExpertWebLib;
@using DXWebApp.Helpers;
@Html.DevExpress().GridView(y =>
{
    KeyValuePair<STFieldsInfo, List<BusinessObject>> objitem = Model;
    string strDocStatus = Request.Url.Query.Split('=').LastOrDefault();
    if (objitem.Key != null)
    {
        y.Name = "gv" + objitem.Key.STFieldName;
        y.KeyFieldName = GMCDbUtil.GetTablePrimaryColumn(objitem.Value.Cast<STGridColumnsInfo>().FirstOrDefault().STGridColumnTableName);
        y.CallbackRouteValues = new { Controller = "EmployeeOffWork", Action = "GridViewPartialView", iFieldID = objitem.Key.STFieldID, sType = y.KeyFieldName.Replace("ItemID","").Replace("AD",""), sDocType = strDocStatus, sStatus = objitem.Key.STFieldGroup };
        y.Width = Unit.Percentage(100);
        y.SettingsPager.PageSize = 50;
        y.ControlStyle.Paddings.Padding = Unit.Pixel(0);
        y.ControlStyle.BorderBottom.BorderWidth = Unit.Pixel(1);
        y.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
        y.SettingsBehavior.AllowFocusedRow = true;
        //y.SettingsResizing.ColumnResizeMode = ColumnResizeMode.Control;
        y.Settings.UseFixedTableLayout = true;
        y.Settings.ShowFilterRow = true;
        y.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        y.SettingsLoadingPanel.Mode = GridViewLoadingPanelMode.Disabled;
        if (strDocStatus == "Register" || strDocStatus == "Approval")
        {
            if (Request.Browser.IsMobileDevice)
            {
                y.CommandColumn.Visible = true;
                y.CommandColumn.Width = 50;
                y.CommandColumn.ButtonRenderMode = GridCommandButtonRenderMode.Default;
                y.CommandColumn.CustomButtons.Add(new GridViewCommandColumnCustomButton() { ID = "btnDetail", Text = "Details" });
                y.ClientSideEvents.CustomButtonClick = "OnGridFocusedRowButtonClick";
            }
            y.Columns.Add(c =>
            {
                c.Caption = "#";
                c.SortIndex = 0;
                c.VisibleIndex = 0;
                c.Width = Unit.Pixel(120);
                c.CellStyle.CssClass = "action_link";
                c.SetDataItemTemplateContent(v =>
                {
                    string strTblName = objitem.Value.Cast<STGridColumnsInfo>().FirstOrDefault().STGridColumnTableName;
                    if (strDocStatus == "Register")
                    {
                        ViewContext.Writer.Write(string.Format("<a class=\"btnSubmit btn-sm btn-xs\" data-id=\"{0}\">Gửi phê duyệt</a>", DataBinder.Eval(v.DataItem, y.KeyFieldName)));
                        ViewContext.Writer.Write(string.Format("<a class=\"btnDelete btn-sm btn-xs\" data-id=\"{0}\">Xóa</a>", DataBinder.Eval(v.DataItem, y.KeyFieldName)));
                    }
                    else if (strDocStatus == "Approval" && Convert.ToString(DataBinder.Eval(v.DataItem, "StatusCombo")) == "Reject")
                    {
                        ViewContext.Writer.Write(string.Format("<a class=\"btnCancel btn-sm btn-xs\" data-id=\"{0}\">Hủy</a>", DataBinder.Eval(v.DataItem, y.KeyFieldName)));
                    //    ViewContext.Writer.Write(string.Format("<a class=\"btnReject btn-sm btn-xs\" data-id=\"{0}\">Reject</a>", DataBinder.Eval(v.DataItem, y.KeyFieldName)));
                    }
                });
            });
            //y.ClientSideEvents.RowDblClick = "OnGridFocusedRowOffWorkClick";
        }
        y.SettingsBehavior.AllowSort = true;
        y.Settings.ShowHeaderFilterButton = true;
        y.Settings.ShowFilterBar = GridViewStatusBarMode.Auto;
        foreach (STGridColumnsInfo col in objitem.Value)
        {
            y.Columns.Add(c =>
            {
                c.Name = col.STGridColumnName;
                c.FieldName = col.STGridColumnName;
                c.Caption = col.STGridColumnCaption;
                c.Width = col.STGridColumnW + 20;
                c.VisibleIndex = col.STGridColumnTabIndex;
                c.Visible = col.STGridColumnVisible;
                c.SortIndex = col.STGridColumnTabIndex;
                c.UnSort();
                c.SettingsHeaderFilter.Mode = GridHeaderFilterMode.List;
                if (c.FieldName == "ADInboxItemDate")
                {
                    c.SortDescending();
                }
                if (GMCDbUtil.GetColumnDataType(col.STGridColumnTableName, col.STGridColumnName) == "datetime")
                {
                    c.ColumnType = MVCxGridViewColumnType.DateEdit;
                    c.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
                }
                else if (GMCDbUtil.GetColumnDataType(col.STGridColumnTableName, col.STGridColumnName) == "float")
                {
                    c.ColumnType = MVCxGridViewColumnType.SpinEdit;
                    c.PropertiesEdit.DisplayFormatString = "n1";
                }
                else if (GMCDbUtil.IsForeignKey(col.STGridColumnTableName, col.STGridColumnName))
                {
                    c.ColumnType = MVCxGridViewColumnType.ComboBox;
                    HtmlControls.InitColumnLookupEdit((ComboBoxProperties)c.PropertiesEdit, col);
                }
            });
            y.FormatConditions.AddHighlight(col.STGridColumnName, string.Format("({0}Protocol = 'Approval' and {0}Action = '') or (ADMailReadUsers like '{1}')", col.STGridColumnTableName.TrimEnd('s'), DXWebApp.AuthConfig.GetSession("CurrentUser")), GridConditionHighlightFormat.BoldText);
        }
    }
}).GetHtml()

