<script type="text/javascript">
    //$(function () {
    //    $('.groupSplitter').height(206).split({ orientation: 'vertical' });
    //});
    //var counter = 0;
    //$(document.documentElement).on('mousedown', function (e) {
    //    console.log('x');
    //    var $target = $(e.target);
    //    console.log($target);
    //    if ($target.is('.vsplitter, .hsplitter')) {
    //        console.log('splitter');
    //        if (++counter == 2) {
    //            console.log('double click');
    //            $target.parents('.splitter_panel').eq(0).data('splitter').position(20);
    //            counter = 0;
    //        }
    //    } else {
    //        counter = 0;
    //    }
    //});
</script>
@using DXWebApp.Helpers;
@using ExpertWebLib;
@using ExpertERP.BusinessEntities;
@using System.Data;
@{ 
    ADUsersController UserCtrl = new ADUsersController();
    ADApprovalProcsController ApprovalProcCtrl = new ADApprovalProcsController();
    ADApprovalProcStepsController ApprovalProcStepCtrl = new ADApprovalProcStepsController();
    ADInboxItemsInfo inboxInfo = (ADInboxItemsInfo)ViewData["InboxInfo"];
    DataTable dt = (DataTable)ViewData["resultDetail"];
    List<STGridColumnsInfo> lstData = ((List<STGridColumnsInfo>)ViewData["listCol"]);
    var grid = Html.DevExpress().GridView(s =>
    {
        s.Name = "fld_gvResultDetail";
        s.Width = Unit.Percentage(100);
        s.SettingsPager.PageSize = 50;
        s.ControlStyle.Paddings.Padding = Unit.Pixel(0);
        s.ControlStyle.BorderBottom.BorderWidth = Unit.Pixel(1);
        s.SettingsBehavior.AllowFocusedRow = true;
        s.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
        s.SettingsResizing.ColumnResizeMode = ColumnResizeMode.Control;
        s.SettingsBehavior.AllowSort = false;
        if (lstData.Count > 0)
        {
            s.KeyFieldName = GMCDbUtil.GetTablePrimaryColumn(lstData.FirstOrDefault().STGridColumnTableName);
            foreach (STGridColumnsInfo item in lstData)
            {
                s.Columns.Add(col =>
                {
                    col.FieldName = item.STGridColumnName;
                    col.Caption = item.STGridColumnCaption;
                    col.Width = item.STGridColumnW;
                    col.VisibleIndex = item.STGridColumnTabIndex;
                    col.Visible = item.STGridColumnVisible;
                    col.SortIndex = item.STGridColumnTabIndex;
                    if (GMCDbUtil.GetColumnDataType(item.STGridColumnTableName, item.STGridColumnName) == "datetime")
                    {
                        col.ColumnType = MVCxGridViewColumnType.DateEdit;
                        col.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
                    }
                    else if (GMCDbUtil.GetColumnDataType(item.STGridColumnTableName, item.STGridColumnName) == "float")
                    {
                        col.ColumnType = MVCxGridViewColumnType.SpinEdit;
                        col.PropertiesEdit.DisplayFormatString = "n1";
                    }
                    else if (GMCDbUtil.IsForeignKey(item.STGridColumnTableName, item.STGridColumnName))
                    {
                        col.ColumnType = MVCxGridViewColumnType.ComboBox;
                        HtmlControls.InitColumnLookupEdit((ComboBoxProperties)col.PropertiesEdit, item);
                    }
                });
            }
        }
    });
    if (grid != null && dt.Rows.Count > 0 && lstData.Count > 0)
    {
        grid.Bind(dt);
    }
}
@Html.DevExpress().Panel(s =>
{
    s.Name = "fld_subGuiApproved";
    s.ControlStyle.CssClass = "modal-dialog modal-lg";
    s.SetContent(() =>
    {
        ViewContext.Writer.Write(Html.ModalPanelStartTag(Convert.ToString(ViewData["ModalTitle"])).ToHtmlString() +

            Html.GroupPanel("Information",
                Html.FormPanel(
                Html.FormGroupControlPanel(
                    Html.FormControlPanel(
                        Html.Label("lblFormUser", "Form User", new { @class = "col-sm-2 control-label" }).ToString(),
                        Html.TextBox("txtFormUser", UserCtrl.GetObjectNameByID(inboxInfo.FK_ADFromUserID), new { @class = "form-control", @readonly = "readonly" }).ToString()
                    ).ToString() +
                    Html.FormControlPanel(
                        Html.Label("lblUserCreate", "Người tạo", new { @class = "col-sm-2 control-label" }).ToString(),
                        Html.TextBox("txtUserCreate", Convert.ToString(ViewData["createUser"]), new { @class = "form-control", @readonly = "readonly" }).ToString()
                    ).ToString()
                ).ToString() +

                Html.FormGroupControlPanel(
                    Html.FormControlPanel(
                        Html.Label("lblDocNo", "Document No", new { @class = "col-sm-2 control-label" }).ToString(),
                        Html.TextBox("txtDocNo", inboxInfo.ADInboxItemDocNo, new { @class = "form-control", @readonly = "readonly" }).ToString()
                    ).ToString() +
                    Html.FormControlPanel(
                        Html.Label("lblDate", "Date", new { @class = "col-sm-2 control-label" }).ToString(),
                        Html.TextBox("dteDate", inboxInfo.ADInboxItemDate.Value.ToString("yyyy-MM-dd"), new { @class = "form-control", @readonly = "readonly", @type = "date" }).ToString()
                    ).ToString()
                ).ToString() +

                Html.FormGroupControlPanel(
                    Html.FormControlPanel(
                        Html.Label("lblDocType", "Document Type", new { @class = "col-sm-2 control-label" }).ToString(),
                        Html.TextBox("txtDocType", inboxInfo.ADInboxItemDocType, new { @class = "form-control", @readonly = "readonly" }).ToString()
                    ).ToString() +
                    Html.FormControlPanel(
                        Html.Label("lblStatus", "Status", new { @class = "col-sm-2 control-label" }).ToString(),
                        Html.TextBox("txtStatus", inboxInfo.ADInboxItemDocApprovalStatusCombo, new { @class = "form-control", @readonly = "readonly" }).ToString()
                    ).ToString()
                ).ToString() +

                Html.FormGroupControlPanel(
                    Html.FormControlPanel(
                        Html.Label("lblPriority", "Priority", new { @class = "col-sm-2 control-label" }).ToString(),
                        Html.TextBox("txtPriority", inboxInfo.ADInboxItemPriorityCombo, new { @class = "form-control", @readonly = "readonly" }).ToString()
                    ).ToString() +
                    Html.FormControlPanel(
                        Html.Label("lblPriority", "Deadline", new { @class = "col-sm-2 control-label" }).ToString(),
                        Html.TextBox("txtDeadline", inboxInfo.ADInboxItemDeadline.Value.ToString("yyyy-MM-dd"), new { @class = "form-control", @readonly = "readonly", @type = "date" }).ToString()
                    ).ToString()
                ).ToString() +

                Html.FormGroupControlPanel(
                    Html.FormControlPanel(
                        Html.Label("lblPriority", "Approval Process", new { @class = "col-sm-2 control-label" }).ToString(),
                        Html.TextBox("txtApprovalProcess", ApprovalProcCtrl.GetObjectNoByID(inboxInfo.FK_ADApprovalProcID), new { @class = "form-control", @readonly = "readonly" }).ToString()
                    ).ToString() +
                    Html.FormControlPanel(
                        Html.Label("lblPriority", "Approval Step", new { @class = "col-sm-2 control-label" }).ToString(),
                        Html.TextBox("txtApprovalStep", ViewData["sApprovalStep"], new { @class = "form-control", @readonly = "readonly" }).ToString()
                    ).ToString()
                ).ToString() +

                Html.FormGroupControlPanel(
                    Html.FormGroupControlPanel(
                        Html.GroupPanel("Remark",
                            Html.TextArea("fldRemark", inboxInfo.ADInboxItemRemark, new { @class = "form-control no-resize fldRemark", @rows = "6" }).ToString()
                        ).ToString()
                    , "col-sm-6").ToString() +

                    Html.FormGroupControlPanel(
                        Html.GroupPanel("Message",
                            Html.TextArea("fldMessage", inboxInfo.ADInboxItemMessage, new { @class = "form-control no-resize fldMessage", @rows = "6" }).ToString()
                        ).ToString()
                    , "col-sm-6").ToString()
                , "groupSplitter row").ToString()
                ).ToString()
            ).ToString()
        );

        ViewContext.Writer.Write(Html.GroupPanelStartTag("Thông tin phép").ToString());

        grid.GetHtml();
        ViewContext.Writer.Write(Html.GroupPanelEndTag().ToHtmlString());
        ViewContext.Writer.Write(Html.ModalPanelEndTag(string.Format("<input type=\"button\" class=\"btnApproval btn btn-sm btn-info\" data-id=\"{0}\" value=\"Phê duyệt\" {1} />", Convert.ToInt32(ViewData["inboxID"]), Convert.ToString(ViewData["approvalDisable"])) +
            string.Format("<input type=\"button\" class=\"btnReject btn btn-sm btn-danger\" data-id=\"{0}\" value=\"Từ chối\" {1} />", Convert.ToInt32(ViewData["inboxID"]), Convert.ToString(ViewData["rejectDisable"]))).ToHtmlString());
    });
}).GetHtml();
