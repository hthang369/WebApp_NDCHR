using System;
using System.Data;
using System.Text;
using System.Collections.Generic;

namespace ExpertWebLib
{
    #region STModuleToUserGroupSections
    //-----------------------------------------------------------
    //Generated By: SQLDBTools.Net ♫ Hồռ؏ ₤ĩռᶋ (v2.0.96)
    //Class: STModuleToUserGroupSectionsController
    //Created Date: Monday, 06 Aug 2018
    //-----------------------------------------------------------

    public class STModuleToUserGroupSectionsController : BaseBusinessController
    {
        private readonly string spGetSTModuleToUserGroupSectionsBySTUserGroupSectionID = "STModuleToUserGroupSections_SelectBySTUserGroupSectionID";
        private readonly string spGetModulesBySTUserGroupID = "STModuleToUserGroupSections_SelectModulesBySTUserGroupID";
        private readonly string spGetSTModuleToUserGroupSectionsBySTUserGroupSectionIDAndSTModuleName = "STModuleToUserGroupSections_SelectBySTUserGroupSectionIDAndSTModuleName";
        private static readonly string spGetMaxSTModuleToUserGroupSectionSortOrderBySTUserGroupSectionID = "STModuleToUserGroupSections_SelectMaxSTModuleToUserGroupSectionSortOrderBySTUserGroupSectionID";
        private readonly string spDeleteSTModuleToUserGroupSectionsBySTUserGroupSectionID = "STModuleToUserGroupSections_DeleteBySTUserGroupSectionID";
        public STModuleToUserGroupSectionsController()
        {
            dal = new DALBaseProvider("STModuleToUserGroupSections",typeof(STModuleToUserGroupSectionsInfo));
        }
        public void DeleteAllModuleToUserGroupSectionByUserGroupSectionID(int iUserGroupSectionID)
        {
            object[] paramValues = new object[] { iUserGroupSectionID };
            base.dal.GetDataSet(this.spDeleteSTModuleToUserGroupSectionsBySTUserGroupSectionID, paramValues);
        }

        public DataSet GetAllModuleToUserGroupSectionByUserGroupSectionID(int iUserGroupSectionID)
        {
            object[] paramValues = new object[] { iUserGroupSectionID };
            return base.dal.GetDataSet(this.spGetSTModuleToUserGroupSectionsBySTUserGroupSectionID, paramValues);
        }

        public int GetMaxSortOrderModuleToUserGroupByUserGroupSectionID(int iUserGroupSectionID)
        {
            int num = 0;
            try
            {
                object[] paramValues = new object[] { iUserGroupSectionID };
                DataSet dataSet = base.dal.GetDataSet(spGetMaxSTModuleToUserGroupSectionSortOrderBySTUserGroupSectionID, paramValues);
                if ((dataSet.Tables.Count > 0) && (dataSet.Tables[0].Rows[0][0] != null))
                {
                    num = Convert.ToInt32(dataSet.Tables[0].Rows[0][0]);
                }
            }
            catch (Exception)
            {
                num = 0;
            }
            return num;
        }

        public STModuleToUserGroupSectionsInfo GetModuleToUserGroupSectionByUserGroupSectionIDAndModuleName(int iUserGroupSectionID, string strModuleName)
        {
            object[] paramValues = new object[] { iUserGroupSectionID, strModuleName };
            return (STModuleToUserGroupSectionsInfo)base.dal.GetDataObject(this.spGetSTModuleToUserGroupSectionsBySTUserGroupSectionIDAndSTModuleName, paramValues);
        }

        public int GetModuleToUserGroupSectionIDByUserGroupSectionIDAndModuleName(int iUserGroupSectionID, string strModuleName)
        {
            int sTModuleToUserGroupSectionID = 0;
            STModuleToUserGroupSectionsInfo moduleToUserGroupSectionByUserGroupSectionIDAndModuleName = this.GetModuleToUserGroupSectionByUserGroupSectionIDAndModuleName(iUserGroupSectionID, strModuleName);
            if (moduleToUserGroupSectionByUserGroupSectionIDAndModuleName != null)
            {
                sTModuleToUserGroupSectionID = moduleToUserGroupSectionByUserGroupSectionIDAndModuleName.STModuleToUserGroupSectionID;
            }
            return sTModuleToUserGroupSectionID;
        }

        public DataSet GetSectionsAndModulesByUserGroupID(int iUserGroupID)
        {
            object[] paramValues = new object[] { iUserGroupID };
            return base.dal.GetDataSet(this.spGetModulesBySTUserGroupID, paramValues);
        }

        public bool IsAccessable(int iUserGroupID, string sModule)
        {
            DataSet dataSet = base.dal.GetDataSet(string.Format("\r\nSELECT TOP 1 1 \r\nFROM STModuleToUserGroupSections(NOLOCK) a\r\nINNER JOIN STModules(NOLOCK) b ON a.STModuleID = b.STModuleID\r\n    AND b.STModuleName = '{0}'\r\nINNER JOIN ADUserGroupSections(NOLOCK) c ON c.ADUserGroupSectionID = a.STUserGroupSectionID\r\n    AND ADUserGroupID = {1}\r\n", sModule, iUserGroupID));
            return (((dataSet != null) && (dataSet.Tables.Count > 0)) && (dataSet.Tables[0].Rows.Count > 0));
        }

        public bool IsExist(int iUserGroupSectionID, string strModuleName)
        {
            bool flag = false;
            if (this.GetModuleToUserGroupSectionByUserGroupSectionIDAndModuleName(iUserGroupSectionID, strModuleName) != null)
            {
                flag = true;
            }
            return flag;
        }
    }
    #endregion
}