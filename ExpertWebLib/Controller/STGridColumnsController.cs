using System;
using System.Data;
using System.Text;
using System.Collections.Generic;

namespace ExpertWebLib
{
    #region STGridColumns
    //-----------------------------------------------------------
    //Generated By: SQLDBTools.Net ♫ Hồռ؏ ₤ĩռᶋ (v2.0.96)
    //Class: STGridColumnsController
    //Created Date: Friday, 03 Aug 2018
    //-----------------------------------------------------------
    
    public class STGridColumnsController : BaseBusinessController
    {
        public STGridColumnsController()
        {
            dal = new DALBaseProvider("STGridColumns",typeof(STGridColumnsInfo));
        }
        public DataSet GetAllByFieldIDAndGridColumnNameAndTableName(int iFieldID, string strGridColumnName, string strTableName)
        {
            object[] paramValues = new object[] { iFieldID, strGridColumnName, strTableName };
            return base.dal.GetDataSet("STGridColumns_SelectByFieldIDAndGridColumnNameAndTableName", paramValues);
        }

        public DataSet GetAllByIDAndTableName(int iSTFieldID, string strTableName)
        {
            object[] paramValues = new object[] { iSTFieldID, strTableName };
            return base.dal.GetDataSet("STGridColumns_SelectBySTFieldIDAndTableName", paramValues);
        }

        public DataSet GetAllDataByGridColumnAndUserIDOrderByTabIndex(int iGridID, int iUserID)
        {
            string strQuery = string.Format("\r\nSELECT *\r\nINTO #tKQ\r\nFROM STGridColumns (NOLOCK)\r\nWHERE FK_STFieldID = {0}\r\nORDER BY STGridColumnTabIndex\r\n\r\nUPDATE #tKQ\r\n    SET STGridColumnTabIndex = ADUserGridColumnTabIndex\r\n        ,STGridColumnW = ADUserGridColumnW\r\n        ,STGridColumnVisible = ADUserGridColumnVisible\r\n        ,STGridColumnEnable = ADUserGridColumnEnable\r\n        ,STGridColumnFieldGroup = STGridColumnFieldGroup + CASE WHEN b.ADUserGridColumnGroupIndex >= 0 AND CHARINDEX('#GROUP#',STGridColumnFieldGroup) = 0 THEN '#GROUP#' ELSE '' END  \r\nFROM #tKQ a\r\n    INNER JOIN ADUserGridControls(NOLOCK) b ON a.STGridColumnID = b.FK_STGridColumnID\r\n        AND b.FK_ADUserID = {1}\r\n        AND b.FK_STFieldID = {0}\r\nSELECT * FROM #tKQ\r\nWHERE STGridColumnW >= 0\r\nORDER BY STGridColumnFieldGroup, STGridColumnTabIndex\r\nDROP TABLE #tKQ\r\n", iGridID, iUserID);
            return base.dal.GetDataSet(strQuery);
        }

        public DataSet GetAllDataByGridColumnOrderByTabIndex(int iGridColumnID)
        {
            string strQuery = string.Format("\r\nSELECT *\r\nFROM STGridColumns(NOLOCK) \r\nWHERE FK_STFieldID= {0}\r\nORDER BY STGridColumnTabIndex\r\n", iGridColumnID);
            return base.dal.GetDataSet(strQuery);
        }

        public STGridColumnsInfo GetGridColumnByFieldIDAndGridColumnNameAndTableName(int iFieldID, string strGridColumnName, string strTableName)
        {
            DataSet set = this.GetAllByFieldIDAndGridColumnNameAndTableName(iFieldID, strGridColumnName, strTableName);
            if ((set.Tables[0] != null) && (set.Tables[0].Rows.Count > 0))
            {
                return (STGridColumnsInfo)this.GetObjectFromDataRow(set.Tables[0].Rows[0]);
            }
            return null;
        }
    }
    #endregion
}