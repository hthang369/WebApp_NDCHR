using System;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region GEExpressions
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:GEExpressionsInfo
	//Created Date:Monday, April 03, 2017
	//-----------------------------------------------------------
	
	public class GEExpressionsInfo:BusinessObject
	{
		public GEExpressionsInfo()
		{
		}
		#region Variables
		protected int _gEExpressionID;
		protected DateTime _aACreatedDate=DateTime.Now;
		protected String _aACreatedUser=String.Empty;
		protected DateTime _aAUpdatedDate=DateTime.Now;
		protected String _aAUpdatedUser=String.Empty;
		protected String _aAStatus=DefaultAAStatus;
		protected bool _aASelected=true;
		protected String _gEExpressionNo=String.Empty;
		protected String _gEExpressionName=String.Empty;
		protected String _gEExpressionDesc=String.Empty;
		protected bool _gEExpressionIsActiveCheck=true;
		protected String _gEExpressionSyntax=String.Empty;
		#endregion

		#region Public properties
		public int GEExpressionID
		{
			get{return _gEExpressionID;}
			set
			{
				if (value != this._gEExpressionID)
				{
				_gEExpressionID=value;
				NotifyChanged("GEExpressionID");
				}
			}
		}
		public DateTime AACreatedDate
		{
			get{return _aACreatedDate;}
			set
			{
				if (value != this._aACreatedDate)
				{
				_aACreatedDate=value;
				NotifyChanged("AACreatedDate");
				}
			}
		}
		public String AACreatedUser
		{
			get{return _aACreatedUser;}
			set
			{
				if (value != this._aACreatedUser)
				{
				_aACreatedUser=value;
				NotifyChanged("AACreatedUser");
				}
			}
		}
		public DateTime AAUpdatedDate
		{
			get{return _aAUpdatedDate;}
			set
			{
				if (value != this._aAUpdatedDate)
				{
				_aAUpdatedDate=value;
				NotifyChanged("AAUpdatedDate");
				}
			}
		}
		public String AAUpdatedUser
		{
			get{return _aAUpdatedUser;}
			set
			{
				if (value != this._aAUpdatedUser)
				{
				_aAUpdatedUser=value;
				NotifyChanged("AAUpdatedUser");
				}
			}
		}
		public String AAStatus
		{
			get{return _aAStatus;}
			set
			{
				if (value != this._aAStatus)
				{
				_aAStatus=value;
				NotifyChanged("AAStatus");
				}
			}
		}
		public bool AASelected
		{
			get{return _aASelected;}
			set
			{
				if (value != this._aASelected)
				{
				_aASelected=value;
				NotifyChanged("AASelected");
				}
			}
		}
		public String GEExpressionNo
		{
			get{return _gEExpressionNo;}
			set
			{
				if (value != this._gEExpressionNo)
				{
				_gEExpressionNo=value;
				NotifyChanged("GEExpressionNo");
				}
			}
		}
		public String GEExpressionName
		{
			get{return _gEExpressionName;}
			set
			{
				if (value != this._gEExpressionName)
				{
				_gEExpressionName=value;
				NotifyChanged("GEExpressionName");
				}
			}
		}
		public String GEExpressionDesc
		{
			get{return _gEExpressionDesc;}
			set
			{
				if (value != this._gEExpressionDesc)
				{
				_gEExpressionDesc=value;
				NotifyChanged("GEExpressionDesc");
				}
			}
		}
		public bool GEExpressionIsActiveCheck
		{
			get{return _gEExpressionIsActiveCheck;}
			set
			{
				if (value != this._gEExpressionIsActiveCheck)
				{
				_gEExpressionIsActiveCheck=value;
				NotifyChanged("GEExpressionIsActiveCheck");
				}
			}
		}
		public String GEExpressionSyntax
		{
			get{return _gEExpressionSyntax;}
			set
			{
				if (value != this._gEExpressionSyntax)
				{
				_gEExpressionSyntax=value;
				NotifyChanged("GEExpressionSyntax");
				}
			}
		}
		#endregion
	}
	#endregion
}