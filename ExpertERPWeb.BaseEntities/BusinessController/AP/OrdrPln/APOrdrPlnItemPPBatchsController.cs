using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region APOrdrPlnItemPPBatchs
	//-----------------------------------------------------------
	//Generated By: Expert Studio
	//Class:APOrdrPlnItemPPBatchsController
	//Created Date:19 September 2012
	//-----------------------------------------------------------
	
	public class APOrdrPlnItemPPBatchsController:BaseBusinessController
	{
		public APOrdrPlnItemPPBatchsController()
		{
			dal= new DALBaseProvider("APOrdrPlnItemPPBatchs",typeof(APOrdrPlnItemPPBatchsInfo));
		}
        public DataSet GetAllDataByOrdrPlnID(int iOrdrPlnID)
        {
            string strQuery = string.Format(@"Select * from APOrdrPlnItemPPBatchs where AAStatus='Alive' and FK_APOrdrPlnID={0}", iOrdrPlnID);
            return dal.GetDataSet(strQuery);
        }

        public Object GetItemByProductAndOrderPlan(int iProductID, int iOrderPlnID)
        {
            String strQuery = String.Format(@"SELECT * FROM APOrdrPlnItemPPBatchs WHERE AAStatus='Alive' AND FK_ICProductID= {0} AND FK_APOrdrPlnID = {1}", iProductID, iOrderPlnID);

            DataSet ds = GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }

            return null;
        }

        public DataSet GetAllDataByOrdrPlnInRange(DateTime dteFromDate, DateTime dteToDate)
        {
            string strQuery = string.Format(@"Select * from APOrdrPlnItemPPBatchs where AAStatus='Alive' and
                                                         FK_APOrdrPlnID in (Select APOrdrPlnID from APOrdrPlns where AAStatus='Alive' 
                                                        AND (CONVERT(VARCHAR(10), [APOrdrPlnDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112))
                                                        AND (CONVERT(VARCHAR(10), [APOrdrPlnDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112))
                                                      )"
                                                        , dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"));
            return dal.GetDataSet(strQuery);
        }
        
	}
	#endregion
}