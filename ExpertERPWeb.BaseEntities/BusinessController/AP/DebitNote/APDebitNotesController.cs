using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region APDebitNotes
	//-----------------------------------------------------------
	//Generated By: VTD Studio
	//Class:APDebitNotesController
	//Created Date:Monday, April 12, 2010
	//-----------------------------------------------------------
	
	public class APDebitNotesController:BaseBusinessController
	{
		public APDebitNotesController()
		{
			dal= new DALBaseProvider("APDebitNotes",typeof(APDebitNotesInfo));
		}

        public DataSet GetAllDebit_InPeriod(int iPeriod, int iYear,string status)
        {
            DateTime fromDate = new DateTime(iYear, iPeriod, 1);
            DateTime toDate = new DateTime(iYear, iPeriod, DateTime.DaysInMonth(iYear, iPeriod));
            string query = "SELECT * FROM APDebitNotes WHERE AAStatus = 'Alive' AND 0 = 0 ";
            if (fromDate.Year != 1)
                query += String.Format("AND APDebitNoteDate >= '{0}' ", String.Format("{0:yyyy/M/d HH:mm:ss}", fromDate));
            if (toDate.Year != 1)
                query += string.Format("AND APDebitNoteDate <= '{0}' ", String.Format("{0:yyyy/M/d HH:mm:ss}", toDate));
            DataSet ds = dal.GetDataSet(query + string.Format(" and (AAPostStatus is Null or AAPostStatus = N'{0}')", status));
            return ds;
        }

        public double GetDebitNoteAmtTotByYearMonthAndFK_SupplierID(int year, int month, int FK_APSupplierID)
        {
            String strQuery = String.Format(@"SELECT SUM(APDebitNoteAmtTot)
                                            FROM APDebitNotes
                                            WHERE AAStatus='Alive' AND Month(APDebitNoteDate) = {0} AND Year(APDebitNoteDate) = {1} AND FK_APSupplierID = {2}", month, year, FK_APSupplierID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                if (!String.IsNullOrEmpty(ds.Tables[0].Rows[0][0].ToString()))
                {
                    double result = double.Parse(ds.Tables[0].Rows[0][0].ToString());
                    return result;
                }
            }
            return 0;
        }

        public DataSet GetDatasetDebitNotesByYearMonthAndFK_SupplierID(int year, int month, int FK_APSupplierID)
        {
            String strQuery = String.Format(@"SELECT *
                                            FROM APDebitNotes
                                            WHERE AAStatus='Alive' AND Month(APDebitNoteDate) = {0} AND Year(APDebitNoteDate) = {1} AND FK_APSupplierID = {2}", month, year, FK_APSupplierID);
         return dal.GetDataSet(strQuery);
            
                
        }
        /// <summary> 
        /// Get Total Amt by Supplier Status and Less than Year.
        /// Status=Empty Get All
        /// Viet Nguyen 12/04/17
        /// </summary>
        public double GetAmtTotalBySupplierLessThanYearMonth(int iSupplierID, int iYear, int iMonth)
        {
            string strQuery = string.Format(@"select SUM(APDebitNoteAmtTot) from APDebitNotes where AAStatus = 'Alive' and FK_APSupplierID ={0} and month(APDebitNoteDate) + year(APDebitNoteDate)*12 <={1}", iSupplierID, iMonth + iYear * 12);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return double.Parse(ds.Tables[0].Rows[0][0].ToString());
            return 0;
        }

        /// <summary> 
        /// Count by Supplier Status and Less than Year, Month.
        /// Status=Empty Count All
        /// Viet Nguyen 12/04/17
        /// </summary>
        public int CountBySupplierLessThanYearMonth(int iSupplierID, int iYear, int iMonth)
        {
            string strQuery = string.Format(@"select count(*) from APDebitNotes where AAStatus = 'Alive' and FK_APSupplierID ={0} and month(APDebitNoteDate) + year(APDebitNoteDate)*12 <={1}", iSupplierID, iMonth + iYear * 12);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return int.Parse(ds.Tables[0].Rows[0][0].ToString());
            return 0;
        }

        /// <summary> 
        /// Get Last By Supplier.
        /// Viet Nguyen 12/04/17
        /// </summary>
        public APDebitNotesInfo GetLastBySupplier(int iSupplierID)
        {
            string strQuery = string.Format(@"select top 1 * from APDebitNotes where AAStatus = 'Alive' and FK_APSupplierID = {0} 
                                         order by APDebitNoteDate desc", iSupplierID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (APDebitNotesInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            return null;
        }

        /// <summary> Get All DebitNote Before Date
        ///Created By Huu Vinh
        /// Created Date 18.04.12
        /// </summary>
        /// 
        public DataSet GetAllDebitNoteBeforeDate(int iSupplierID, DateTime date)
        {
            String query = string.Format(@"SELECT * FROM APDebitNotes WHERE AAStatus = 'Alive' AND FK_APSupplierID={0} AND (CONVERT(VARCHAR(10), [APDebitNoteDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112))", iSupplierID, date.ToString("yyyyMMdd"));
            return dal.GetDataSet(query);
        }

        #region Get All DebitNote By Product And DebitNoteItemType

        public DataSet GetAllDebitNoteByProductAndItemType(int iProductID, String strType)
        {
            String str = String.Format(@"SELECT * FROM APDebitNotes WHERE AAStatus='Alive' AND APDebitNoteID IN (SELECT FK_APDebitNoteID FROM APDebitNoteItems WHERE AAStatus='Alive' AND FK_ICProductID={0} AND APDebitNoteItemTypeCombo='{1}')", iProductID, strType);
            return dal.GetDataSet(str);
        }

        #endregion
	}
	#endregion
}