using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;


namespace ExpertERP.BusinessEntities
{
	#region APSuppliers
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:APSuppliersController
	//Created Date:Friday, March 14, 2008
	//-----------------------------------------------------------
	
	public class APSuppliersController:BaseBusinessController
	{
		public APSuppliersController()
		{
			dal= new DALBaseProvider("APSuppliers",typeof(APSuppliersInfo));
		}
        public DataSet GetAllSupplierDept()
        {
            String strQuery = String.Format("Select * from [dbo].[APSuppliers] WHERE AAStatus = 'Alive' AND [APSupplierOutstandingBalance] >0");
            return (DataSet)dal.GetDataSet(strQuery);
        }

        public DataSet GetAllSupplierHasJournal(DateTime dtFrom, DateTime dtTo)
        {
            String strQuery = String.Format(@"  SELECT * FROM APSuppliers
                                                WHERE AAStatus = 'Alive' 
                                                AND APSupplierID IN (
                                                                        SELECT FK_APSupplierID FROM GLJournals WHERE GLJournalDate >= '{0}' AND GLJournalDate <= '{1}'
                                                                        UNION
                                                                        SELECT FK_APSupplierIDCredit AS FK_APSupplierID FROM GLJournals WHERE GLJournalDate >= '{0}' AND GLJournalDate <= '{1}'
                                                                    )"
                , String.Format("{0:yyyy/M/d HH:mm:ss}", dtFrom), String.Format("{0:yyyy/M/d HH:mm:ss}", dtTo));

            return (DataSet)dal.GetDataSet(strQuery);
        }

        public DataSet GetAllSupplierIDs()
        {
            String strQuery = String.Format(@"  SELECT APSupplierID FROM APSuppliers
                                                WHERE AAStatus = 'Alive' 
                                                AND APSupplierID IN (
                                                                        SELECT APSupplierID FROM GLJournals
                                                                        UNION
                                                                        SELECT FK_APSupplierIDCredit AS FK_APSupplierID FROM GLJournals
                                                                    )");
            return (DataSet)dal.GetDataSet(strQuery);
        }

        public DateTime CheckAPSupplierOpeningBalance(APSuppliersInfo SupplierInfo)
        {
            String strQuery = "";
            DataSet ds = new DataSet();

            #region Kiểm tra trong APPOs
            strQuery = String.Format(@"Select MIN(APPODate) from [dbo].[APPOs] 
                                            WHERE AAStatus = 'Alive' 
                                            AND FK_APSupplierID='{0}'
                                            AND APPODate < '{1}'", SupplierInfo.APSupplierID, String.Format("{0:yyyy/M/d HH:mm:ss}", SupplierInfo.APSupplierOpeningBalanceDate));
            ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0].ToString() != "")
            {
                return (DateTime)ds.Tables[0].Rows[0][0];
            }
            #endregion

            #region Kiểm tra trong GLVouchers
            strQuery = String.Format(@"Select MIN(GLVoucherDate) from [dbo].[GLVouchers] 
                                            WHERE AAStatus = 'Alive' 
                                            AND FK_APSupplierID='{0}'
                                            AND GLVoucherDate < '{1}'", SupplierInfo.APSupplierID, String.Format("{0:yyyy/M/d HH:mm:ss}", SupplierInfo.APSupplierOpeningBalanceDate));
            ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0].ToString() != "")
            {
                return (DateTime)ds.Tables[0].Rows[0][0];
            }
            #endregion

            #region Kiểm tra trong APPInvoices
            strQuery = String.Format(@"Select MIN(APPInvoiceDate) from [dbo].[APPInvoices] 
                                            WHERE AAStatus = 'Alive' 
                                            AND FK_APSupplierID='{0}'
                                            AND APPInvoiceDate < '{1}'", SupplierInfo.APSupplierID, String.Format("{0:yyyy/M/d HH:mm:ss}", SupplierInfo.APSupplierOpeningBalanceDate));
            ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0].ToString() != "")
            {
                return (DateTime)ds.Tables[0].Rows[0][0];
            }
            #endregion

            #region Kiểm tra trong APDebitNotes
            strQuery = String.Format(@"Select MIN(APDebitNoteDate) from [dbo].[APDebitNotes] 
                                            WHERE AAStatus = 'Alive' 
                                            AND FK_APSupplierID='{0}'
                                            AND APDebitNoteDate < '{1}'", SupplierInfo.APSupplierID, String.Format("{0:yyyy/M/d HH:mm:ss}", SupplierInfo.APSupplierOpeningBalanceDate));
            ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0].ToString() != "")
            {
                return (DateTime)ds.Tables[0].Rows[0][0];
            }
            #endregion

            return (DateTime)SupplierInfo.APSupplierOpeningBalanceDate;
        }
        public int GetMaxExtentionNumber(String StrStart, int ExtentionLength)
        {
            String strQuery = String.Format(@"
                                                drop table Temp1
                                                drop table Temp2
                                                select RIGHT(APSupplierNo, 6) AS ProductNo INTO Temp1
                                                FROM APSuppliers WHERE AAStatus = 'Alive'

                                                select ISNUMERIC( RIGHT(ProductNo, {0})) AS isNumber,  RIGHT(ProductNo, {0}) AS No
                                                            into Temp2
                                                FROM Temp1 WHERE ProductNo Like '{1}%'

                                                select MAX(CAST(No AS FLOAT)) from Temp2
                                                WHERE isNumber = 1
                                                ", ExtentionLength, StrStart);
            DataSet ds = GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0
                    && ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                try
                {
                    return Convert.ToInt32(ds.Tables[0].Rows[0][0]);
                }
                catch (Exception ex)
                {
                    return 0;
                }
            }

            return 0;
        }

        public void UpdateOpeningBalance(double dAmt, DateTime dtDate, int iCustomerID)
        {
            string strQuery = String.Format(@"UPDATE APSuppliers SET APSupplierOpeningBalance={1},APSupplierOpeningBalanceDate='{2}' WHERE APSupplierID={0}", iCustomerID, dAmt, String.Format("{0:yyyy/M/d HH:mm:ss}", dtDate));
            GetDataSet(strQuery);
        }

        public DataSet GetAllDataNeedReminder()
        {
            string strQuery = String.Format(@"SELECT  *
                                                FROM    dbo.APSuppliers
                                                WHERE   APSupplierReminderCheck = 1");
            return GetDataSet(strQuery);
        }
        //Thang add - lấy tài khoản phai trả (tạm) ncc trong bộ định khoản ncc
        public int GetPayableAccountBySupplierID(int iSupplierID, string fieldName = "FK_GLPayableClearingAccountID")
        {
            string strQuery = string.Format(@"SELECT {1}
                                                FROM APSuppliers AS a
                                                JOIN APAccountSets AS b ON FK_APAccountSetID = APAccountSetID
                                                WHERE APSupplierID = {0}", iSupplierID, fieldName);
            DataSet ds = GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                try
                {
                    return Convert.ToInt32(ds.Tables[0].Rows[0][0]);
                }
                catch (Exception ex) { }
            }
            return 0;
        }
    }
	#endregion
}