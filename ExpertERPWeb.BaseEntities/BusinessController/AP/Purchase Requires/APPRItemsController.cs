using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region APPRItems
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:APPRItemsController
	//Created Date:Monday, January 25, 2010
	//-----------------------------------------------------------
	
	public class APPRItemsController:BaseBusinessController
	{
		public APPRItemsController()
		{
			dal= new DALBaseProvider("APPRItems",typeof(APPRItemsInfo));
		}
        //Summary
        //add Trung
        //28-11-2012
        //Tổng hợp yêu cầu vật tư theo phiếu đề nghị đặt hàng
        public DataSet GetAllPRItemsByCritical(int iBranchID, int iProductGroupID, int iProductID, DateTime dtFrom, DateTime dtTo)
        {
            String strBranch = String.Empty;
            if (iBranchID > 0)
                strBranch = String.Format(@" AND FK_BRBranchID = {0}", iBranchID);

            String strProductGroup = String.Empty;
            if (iProductGroupID > 0)
                strProductGroup = String.Format(@" AND FK_ICProductGroupID = {0}", iProductGroupID);

            String strProduct = String.Empty;
            if (iProductID > 0)
                strProduct = String.Format(@" AND FK_ICProductID = {0}", iProductID);

            String strTimeRange = DALUtil.GenerateBeetween("APPRDate", dtFrom, dtTo);

            String strQuery = String.Format(@"SELECT * FROM APPRItems 
                                                WHERE AAStatus = 'Alive'
                                                AND APPRItemRQty > 0
                                                AND FK_ICProductID IN (SELECT ICProductID FROM ICProducts WHERE AAStatus = 'Alive'
                                                                        {0} {1} )
                                                AND FK_APPRID IN (SELECT APPRID FROM APPRs WHERE APPRs.AAStatus = 'Alive'
                                                                    {2} AND {3})", strProductGroup, strProduct, strBranch, strTimeRange);

            return GetDataSet(strQuery);
        }

        /// <summary>
        /// Viet Nguyen 2014.08.04
        /// Tính tổng RQty trong PRItem
        /// </summary>
        /// <param name="iProductID"></param>
        /// <param name="dtFrom"></param>
        /// <param name="dtTo"></param>
        /// <returns></returns>
        public double GetTotalRQtyByProductArrivalDateInRange(int iProductID, DateTime dtFrom, DateTime dtTo)
        {
            String strQuery = GenerateQueryRQtyArrivalDateInRange(dtFrom, dtTo, iProductID, "SUM(APPRItemRQty)");
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
                    return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }

            return 0;
        }

        /// <summary>
        /// Viet Nguyen 2014.08.05
        /// Tạo Query select PRItem có RQty>0 theo sản phẩm và ArrivalDate InRange
        /// </summary>
        /// <param name="dtFrom"></param>
        /// <param name="dtTo"></param>
        /// <param name="iProductID"></param>
        /// <param name="strSelect"></param>
        /// <returns></returns>
        private string GenerateQueryRQtyArrivalDateInRange(DateTime dtFrom, DateTime dtTo, int iProductID, string strSelect)
        {
            string strDate = DALUtil.GenerateBeetween("APPRItemArrivalDate", dtFrom, dtTo);
            string strQuery = String.Format(@"SELECT {2} FROM APPRItems 
                                    WHERE AAStatus='Alive' 
                                    AND APPRItemRQty > 0
                                    AND FK_ICProductID = {0} AND {1}
                                    AND FK_APPRID IN (SELECT APPRID 
                                                        FROM APPRs 
                                                        WHERE AAStatus = 'Alive'
                                                        )", iProductID, strDate, strSelect);
            return strQuery;
        }

        /// <summary>
        /// Viet Nguyen 2014.08.04
        /// Lấy danh sách PRItem có RQty>0, sản phẩm, Ngày yêu cầu giao trong Range
        /// </summary>
        /// <param name="iProductID"></param>
        /// <param name="dtFrom"></param>
        /// <param name="dtTo"></param>
        /// <returns></returns>
        public DataSet GetAllDataRQtyArrivalDateInRange(int iProductID, DateTime dtFrom, DateTime dtTo)
        {
            String strQuery = GenerateQueryRQtyArrivalDateInRange(dtFrom, dtTo, iProductID, "*");
            DataSet ds = dal.GetDataSet(strQuery);
            return dal.GetDataSet(strQuery);
        }

        #region GetPRItem By Product SO ArrivalDate

        /// <summary>
        /// Viet Nguyen 2014.11.20
        /// Tính tổng RQty trong PRItem theo Sản phẩm, đơn hàng, có ngày giao trong khoảng.
        /// </summary>
        /// <param name="iProductID"></param>
        /// <param name="dtFrom"></param>
        /// <param name="dtTo"></param>
        /// <returns></returns>
        public double GetTotalRQtyByProductSOAndArrivalDateInRange(int iProductID,int iARSOID, DateTime dtFrom, DateTime dtTo)
        {
            String strQuery = GenerateQueryRQtyByProductSOAndArrivalDateInRange(dtFrom, dtTo, iProductID, iARSOID, "SUM(APPRItemRQty)");
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
                    return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }

            return 0;
        }

        /// <summary>
        /// Viet Nguyen 2014.11.20
        /// Tạo Query select PRItem có RQty>0 theo sản phẩm, đơn hàng và ArrivalDate InRange
        /// </summary>
        /// <param name="dtFrom"></param>
        /// <param name="dtTo"></param>
        /// <param name="iProductID"></param>
        /// <param name="strSelect"></param>
        /// <returns></returns>
        private string GenerateQueryRQtyByProductSOAndArrivalDateInRange(DateTime dtFrom, DateTime dtTo, int iProductID,int iARSOID, string strSelect)
        {
            string strDate = DALUtil.GenerateBeetween("APPRItemArrivalDate", dtFrom, dtTo);
            string strQuery = String.Format(@"SELECT {2} FROM APPRItems 
                                    WHERE AAStatus='Alive' 
                                    AND (FK_ARSOID={3} or {3}=0)
                                    AND APPRItemRQty > 0
                                    AND FK_ICProductID = {0} AND {1}
                                    AND FK_APPRID IN (SELECT APPRID 
                                                        FROM APPRs 
                                                        WHERE AAStatus = 'Alive'
                                                        )", iProductID, strDate, strSelect, iARSOID);
            return strQuery;
        }
        #endregion

        public String GetPRNoByPOItem(int iAPPOItemID)
        {
            String str = String.Format(@"SELECT DISTINCT APPRNo FROM (

                                                SELECT DISTINCT APPRNo FROM dbo.APPRs
                                                                                        INNER JOIN dbo.APPRItems ON (APPRItems.FK_APPRID = APPRs.APPRID
                                                                                        AND APPRItems.AAStatus = APPRs.AAStatus
                                                                                        AND APPRs.AAStatus = 'Alive')
                                                                                        INNER JOIN dbo.APPRItemPOItems ON (APPRItemPOItems.FK_APPRItemID = APPRItems.APPRItemID
                                                                                        AND APPRItemPOItems.AAStatus = APPRItems.AAStatus)
                                                                                        WHERE FK_APPOItemID = {0}
										                                                UNION
                                                SELECT DISTINCT APPRNo FROM dbo.APPRs
                                                                                        INNER JOIN dbo.APPRItems ON (APPRItems.FK_APPRID = APPRs.APPRID
                                                                                        AND APPRItems.AAStatus = APPRs.AAStatus
                                                                                        AND APPRs.AAStatus = 'Alive')
										                                                INNER JOIN dbo.APPRItemRFQs ON (APPRItemRFQs.FK_APPRItemID = APPRItems.APPRItemID AND APPRItemRFQs.AAStatus = APPRItems.AAStatus)
                                                                                        INNER JOIN dbo.APPRItemRFQPOItems ON (APPRItemRFQPOItems.FK_APPRItemRFQID = APPRItemRFQs.APPRItemRFQID
                                                                                        AND APPRItemRFQPOItems.AAStatus = APPRItems.AAStatus)
                                                                                        WHERE FK_APPOItemID = {0}

                                                ) AS TB",
                                        iAPPOItemID);
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToString(ds.Tables[0].Rows[0][0]);
            }
            return String.Empty;
        }

        public DataSet GetRQtyAPPRItems()
        {
            String strQuery = String.Format(@"SELECT 
		                                                APPRItems.FK_ICProductID,
		                                                SUM(APPRItems.APPRItemRQty) AS  APPRItemRQty,
		                                                SUM(APPRItems.APPRItemRStkQty) AS  APPRItemRStkQty
                                                FROM dbo.APPRItems
                                                INNER JOIN dbo.APPRs ON APPRs.APPRID = APPRItems.FK_APPRID AND APPRs.AAStatus = APPRItems.AAStatus
                                                WHERE dbo.APPRs.AAStatus = 'Alive'
                                                AND (APPRItems.APPRItemRQty > 0 OR APPRItems.APPRItemRStkQty > 0)
                                                GROUP BY APPRItems.FK_ICProductID");
            return dal.GetDataSet(strQuery);
        }
        // NhamNDH -09/2017- Lấy danh sách PRItem còn RQty từ ngày đến ngày ShpDate
        public DataSet GetDataByProductAndDate(int iProductID, DateTime dtFrom, DateTime dtTo)
        {
            string strQuery = GenerateQueryRQtyAPPRShpDate(dtFrom, dtTo, iProductID, "*");
            return dal.GetDataSet(strQuery);
        }
        private string GenerateQueryRQtyAPPRShpDate(DateTime dtFrom, DateTime dtTo, int iProductID, string strSelect)
        {
            string strDate = DALUtil.GenerateBeetween("APPRShpDate", dtFrom, dtTo);
            string strQuery = String.Format(@"SELECT {2} FROM APPRItems 
                                    WHERE AAStatus='Alive' 
                                    AND APPRItemRQty > 0
                                    AND (FK_ICProductID = {0}
                                          OR FK_ICProductID IN (SELECT FK_ICProductID
                                                                FROM   ICProductIntermediates
                                                                WHERE  ICProductIntermediateFactorNumber > 0
                                                                       AND FK_ICIntermediateProductID = {0} )
                                         )
                                    AND FK_APPRID IN (SELECT APPRID 
                                                      FROM   APPRs 
                                                      WHERE  AAStatus = 'Alive' AND {1}
                                                        )", iProductID, strDate, strSelect);
            return strQuery;
        }
        //
    }
	#endregion
}