using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region APPRItemRFQs
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:APPRItemRFQsController
	//Created Date:Tuesday, January 27, 2015
	//-----------------------------------------------------------
	
	public class APPRItemRFQsController:BaseBusinessController
	{
		public APPRItemRFQsController()
		{
			dal= new DALBaseProvider("APPRItemRFQs",typeof(APPRItemRFQsInfo));
		}

        public APPRItemRFQsInfo GetDataByPRItemANDRFQANDApprovedPrice(int iAPPRItemID, int iAPRFQID, int iAPApprovedPriceID)
        {
            String str = String.Format(@"SELECT * FROM dbo.APPRItemRFQs
                                        WHERE AAStatus = 'Alive'
                                        AND FK_APPRItemID = {0}
                                        AND FK_APRFQID = {1}
                                        AND FK_APApprovedPriceID = {2}"
                                        , iAPPRItemID, iAPRFQID, iAPApprovedPriceID);

            DataSet ds = dal.GetDataSet(str);
            if(ds!= null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return (APPRItemRFQsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }

        public DataSet GetAllDataByPRItemANDApprovedPrice(int iAPPRItemID, int iAPApprovedPriceID)
        {
            String str = String.Format(@"SELECT * FROM dbo.APPRItemRFQs
                                        WHERE AAStatus = 'Alive'
                                        AND FK_APPRItemID = {0}
                                        AND FK_APApprovedPriceID = {1}"
                                        , iAPPRItemID, iAPApprovedPriceID);

            return dal.GetDataSet(str);
        }

        public void GetQtyANDPriceByPRItemANDRFQ(int iAPPRItemID, int iAPRFQID, String strApproved, ref double dbQty, ref double dbPrice)
        {
            String str = String.Format(@"SELECT SUM(APPRItemRFQQty), SUM(APPRItemRFQPrice) FROM dbo.APPRItemRFQs
                                        WHERE AAStatus = 'Alive'
                                        AND FK_APPRItemID = {0}
                                        AND FK_APRFQID = {1}
                                        AND FK_APApprovedPriceID IN (
                                                                    SELECT  APApprovedPriceID
                                                                    FROM    dbo.APApprovedPrices
                                                                    WHERE   AAStatus = 'Alive'
                                                                            AND ApprovalStatusCombo = '{2}' )"
                                        , iAPPRItemID, iAPRFQID, strApproved);

            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value && ds.Tables[0].Rows[0][1] != DBNull.Value)
            {
                dbQty = Convert.ToDouble(ds.Tables[0].Rows[0][0]);
                dbPrice = Convert.ToDouble(ds.Tables[0].Rows[0][1]);
            }
        }

        public double LaySoLuongPRItemDaRaPRItemRFQ(int iAPPRItemID, int iAPApprovedPriceID)
        {
            String str = String.Format(@"SELECT  SUM(APPRItemRFQQty)
                                        FROM    dbo.APPRItemRFQs
                                        WHERE   AAStatus = 'Alive'
                                                AND FK_APPRItemID = {0}
                                                AND FK_APApprovedPriceID IN ( SELECT    APApprovedPriceID
                                                                              FROM      dbo.APApprovedPrices
                                                                              WHERE     AAStatus = 'Alive'
                                                                                        AND APApprovedPriceID != {1} )"
                                        , iAPPRItemID, iAPApprovedPriceID);

            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return 0;
        }
	}
	#endregion
}