using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region GEGenerateNos
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:GEGenerateNosController
	//Created Date:14 Tháng Năm 2014
	//-----------------------------------------------------------
	
	public class GEGenerateNosController:BaseBusinessController
	{
		public GEGenerateNosController()
		{
            dal = new DALBaseProvider("GEGenerateNos", typeof(GEGenerateNosInfo));
		}

        public GEGenerateNosInfo GetGEGenerateNoByModuleName(string strModuleName)
        {
            String str = String.Format(@"   SELECT GenNo.* FROM dbo.GEGenerateNos GenNo
                                            INNER JOIN dbo.STModuleDescriptions ModuleDesc ON GenNo.FK_STModuleDescriptionID = ModuleDesc.STModuleDescriptionID
                                            INNER JOIN dbo.STModules Module ON ModuleDesc.STModuleID = Module.STModuleID
                                            WHERE Module.STModuleName LIKE '{0}'
                                            ", strModuleName);
            DataSet ds=dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return (GEGenerateNosInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }
        public object GetLastBusinessObjectByTableANDColumnANDValue(string strTableName, string strColumnName,string strValue, int ilength)
        {
            //(LINHCLH - 06/11/2015 - Xu ly SQL Wildcard cho truong hop cau hinh gen ma co _ hoac %. Bo sung AAStatus, Bo sung iLength de tinh dung cho truong hop thay doi length
            strValue = strValue.Replace("_","[_]");
            strValue = strValue.Replace("%","[%]");
            string str = String.Format(@"   SELECT TOP 1 {0} FROM {1}
                                            WHERE {0} LIKE '{2}%'
                                        ", strColumnName, strTableName, strValue);
            
            if (GMCDbUtil.ColumnIsExist(strTableName,"AAStatus"))
                str += String.Format(@"
AND AAStatus = 'Alive'");

            if (ilength > 0)
                str += String.Format(@"
AND LEN({0}) = {1}", strColumnName, ilength);

            str += String.Format(@"
ORDER BY {0} DESC", strColumnName);
            //)
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return ds.Tables[0].Rows[0][0];
            }

            return null;
        }

        public DataSet GetAllModuleDescByModuleObject()
        {
            String str = String.Format(@"SELECT  STModuleDescriptions.*
                                        FROM    dbo.STModuleDescriptions
                                                INNER JOIN dbo.STModules ON ( STModules.STModuleID = STModuleDescriptions.STModuleID
                                                                              --AND STModules.STModuleType = 'Master'
                                                                            )");
            return dal.GetDataSet(str);
        }
        
	}
	#endregion
}