using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region ICProductSuppliers
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:ICProductSuppliersController
	//Created Date:13 Tháng Bảy 2012
	//-----------------------------------------------------------
	
	public class ICProductSuppliersController:BaseBusinessController
	{
		public ICProductSuppliersController()
		{
			dal= new DALBaseProvider("ICProductSuppliers",typeof(ICProductSuppliersInfo));
		}

        public ICProductSuppliersInfo GetObjectByProductIDAndSupplierID(int iProductID, int iSupplierID)
        {
            String strQuery = String.Format(@"SELECT * FROM ICProductSuppliers WHERE AAStatus = 'Alive' AND FK_ICProductID = {0} AND FK_APSupplierID = {1}", iProductID, iSupplierID);
            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (ICProductSuppliersInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);

            return null;
        }

        public ICProductSuppliersInfo GetObjectByProductWithLowestPrice(int iProductID)
        {
            String strQuery = String.Format(@"SELECT TOP(1) FROM ICProductSuppliers WHERE AAStatus = 'Alive' AND ICProductLowestUnitPrice > 0 AND FK_ICProductID = {0} ORDER BY ICProductLowestUnitPrice ", iProductID);
            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (ICProductSuppliersInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);

            return null;
        }

        public ICProductSuppliersInfo GetObjectByProductWithHightPerfomance(int iProductID)
        {
            String strQuery = String.Format(@"SELECT TOP(1) FROM ICProductSuppliers WHERE AAStatus = 'Alive' AND ICProductLowestUnitPrice > 0 AND FK_ICProductID = {0} ORDER BY ICProductLowestUnitPrice ", iProductID);
            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (ICProductSuppliersInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);

            return null;
        }



        public ICProductSuppliersInfo GetLast(int iProductID)
        {
            String strQuery = String.Format(@"SELECT TOP(1) * FROM ICProductSuppliers WHERE AAStatus = 'Alive' AND FK_ICProductID = {0} ORDER BY ICProductLastDate DESC", iProductID);
            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (ICProductSuppliersInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);

            return null;
        }

        public ICProductSuppliersInfo GetHighest(int iProductID)
        {
            String strQuery = String.Format(@"SELECT TOP(1) * FROM ICProductSuppliers WHERE AAStatus = 'Alive' AND FK_ICProductID = {0} ORDER BY ICProductHighestUnitPrice DESC", iProductID);
            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (ICProductSuppliersInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);

            return null;
        }

        public ICProductSuppliersInfo GetLowest(int iProductID)
        {
            String strQuery = String.Format(@"SELECT TOP(1) * FROM ICProductSuppliers WHERE AAStatus = 'Alive' AND ICProductLowestUnitPrice > 0 AND FK_ICProductID = {0} ORDER BY ICProductLowestUnitPrice", iProductID);
            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (ICProductSuppliersInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);

            return null;
        }
	}
	#endregion
}