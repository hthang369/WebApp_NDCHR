using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region ICItemSaleStatistics
	//-----------------------------------------------------------
	//Generated By: Expert Studio
	//Class:ICItemSaleStatisticsController
	//Created Date:Friday, April 27, 2012
	//-----------------------------------------------------------
	
	public class ICItemSaleStatisticsController:BaseBusinessController
	{
		public ICItemSaleStatisticsController()
		{
			dal= new DALBaseProvider("ICItemSaleStatistics",typeof(ICItemSaleStatisticsInfo));
		}
        public List<ICItemSaleStatisticsInfo> GetListTopProductBestSellerBySellerIDInPeriodYear(int iHREmployeeID, int iPeriod, int iYear,int iTop)
        {
            string str = string.Format(@"SELECT top {0} FK_ICProductID,SUM(ARInvoiceItemQty) AS SUMQty,SUM(ARInvoiceItemAmtTot) FROM dbo.ARInvoiceItems INNER JOIN dbo.ARInvoices 
                                                ON dbo.ARInvoiceItems.FK_ARInvoiceID = dbo.ARInvoices.ARInvoiceID 
                                                WHERE dbo.ARInvoiceItems.AAStatus='Alive' AND dbo.ARInvoices.AAStatus='Alive'
                                                    AND FK_HREmployeeID={1} AND MONTH(ARInvoiceDate)={2} AND YEAR(ARInvoiceDate)={3}
                                                    GROUP BY FK_ICProductID ORDER BY SUMQty DESC"
                                                , iTop, iHREmployeeID, iPeriod, iYear);
            DataSet ds = dal.GetDataSet(str);
            List<ICItemSaleStatisticsInfo> lst = new List<ICItemSaleStatisticsInfo>();
            if(ds!=null&&ds.Tables.Count>0)
            {
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    if (dr[0] != DBNull.Value && dr[1] != DBNull.Value)
                    {
                        ICItemSaleStatisticsInfo ItemInfo = new ICItemSaleStatisticsInfo();
                        ItemInfo.FK_ICProductID = Convert.ToInt32(dr[0]);
                        ItemInfo.ICItemSaleStatisticProductQty = Convert.ToDouble(dr[1]);
                        if (dr[2] != DBNull.Value && !string.IsNullOrEmpty(dr[2].ToString()))
                            ItemInfo.ICItemSaleStatisticAmt = Convert.ToDouble(dr[2]);
                        lst.Add(ItemInfo);
                    }
                }
            }
            return lst;
        }

        public List<ICItemSaleStatisticsInfo> GetListTopProductBestSellerBySellerIDInRange(int iHREmployeeID, int iFromPeriod, int iFromYear, int iToPeriod, int iToYear, int iTop)
        {
            string str = string.Format(@"SELECT top {0} FK_ICProductID,SUM(ARInvoiceItemQty) AS SUMQty,SUM(ARInvoiceItemAmtTot) FROM dbo.ARInvoiceItems INNER JOIN dbo.ARInvoices 
                                                ON dbo.ARInvoiceItems.FK_ARInvoiceID = dbo.ARInvoices.ARInvoiceID 
                                                WHERE dbo.ARInvoiceItems.AAStatus='Alive' AND dbo.ARInvoices.AAStatus='Alive'
                                                    AND FK_HREmployeeID={1}
                                                AND MONTH(ARInvoiceDate) + YEAR(ARInvoiceDate)*12 >= {2}
                                                AND MONTH(ARInvoiceDate) + YEAR(ARInvoiceDate)*12 <= {3}
                                                    GROUP BY FK_ICProductID ORDER BY SUMQty DESC"
                                                , iTop, iHREmployeeID, iFromPeriod + iFromYear * 12, iToPeriod + iToYear * 12);
            DataSet ds = dal.GetDataSet(str);
            List<ICItemSaleStatisticsInfo> lst = new List<ICItemSaleStatisticsInfo>();
            if (ds != null && ds.Tables.Count > 0)
            {
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    if (dr[0] != DBNull.Value && dr[1] != DBNull.Value)
                    {
                        ICItemSaleStatisticsInfo ItemInfo = new ICItemSaleStatisticsInfo();
                        ItemInfo.FK_ICProductID = Convert.ToInt32(dr[0]);
                        ItemInfo.ICItemSaleStatisticProductQty = Convert.ToDouble(dr[1]);
                        if (dr[2] != DBNull.Value && !string.IsNullOrEmpty(dr[2].ToString()))
                            ItemInfo.ICItemSaleStatisticAmt = Convert.ToDouble(dr[2]);
                        lst.Add(ItemInfo);
                    }
                }
            }
            return lst;
        }
        
	}
	#endregion
}