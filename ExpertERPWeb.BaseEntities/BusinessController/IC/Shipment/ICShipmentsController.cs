using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;


namespace ExpertERP.BusinessEntities
{
	#region ICShipments
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:ICShipmentsController
	//Created Date:Monday, April 14, 2008
	//-----------------------------------------------------------
	
	public class ICShipmentsController:BaseBusinessController
	{
		public ICShipmentsController()
		{
			dal= new DALBaseProvider("ICShipments",typeof(ICShipmentsInfo));
		}
        public DataSet GetDataSetICShipmentsByICProductIDAndFDateTDate(int iCProductID, DateTime dteFDate, DateTime dteTDate)
        {
            DataSet dsICShipments = new DataSet();
            String strQuery = String.Format("SELECT * FROM [dbo].[ICShipments]WHERE [ICShipmentID] in(SELECT FK_ICShipmentID FROM [dbo].ICShipmentItems WHERE [FK_ICProductID]={0} AND [AAStatus]='{3}')AND CONVERT(VARCHAR(10), [ICShipmentDate], 112)>= CONVERT(VARCHAR(10), '{1}', 112) AND CONVERT(VARCHAR(10), [ICShipmentDate], 112)<= CONVERT(VARCHAR(10), '{2}', 112) AND [AAStatus]='{3}'", iCProductID, dteFDate.ToString("yyyyMMdd"), dteTDate.ToString("yyyyMMdd"), BusinessObject.DefaultAAStatus);
            dsICShipments = dal.GetDataSet(strQuery);
            if (dsICShipments != null)
                return dsICShipments;
            return dsICShipments;
        }
        public DataSet GetDataSetARSOsByYearMonthAndFK_CustomerID(int year, int month, int FK_CustomerID)
        {
            return dal.GetDataSet("ICShipments_SelectByYearMonthAndFK_CustomerID", year, month, FK_CustomerID);
        }

        public double GetTotalShipmentAmtInPeriod(int iCustomerID, int iPeriod, int iYear)
        {
            String strQuery = String.Format("Select SUM(ICShipmentAmt) From [ICShipments] WHERE FK_ARCustomerID = {0} AND Month(ICShipmentDate) = {1} AND Year(ICShipmentDate) = {2} AND AAStatus='Alive'", iCustomerID, iPeriod, iYear);
            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
                {
                    return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
                }
            }

            return 0;
        }

        public DataSet GetAllShipmentForWorkOrderInPeriod(int iPeriod, int iYear)
        {
            String strQuery = String.Format("SELECT * FROM ICShipments WHERE AAStatus = 'Alive' AND FK_PPWOID > 0");
            return dal.GetDataSet(strQuery);
        }

        public double GetTotalCostWithWO_InPeriod(int iPeriod, int iYear)
        {
            double result = 0.0;
            DateTime fromDate = new DateTime(iYear, iPeriod, 1);
            DateTime toDate = new DateTime(iYear, iPeriod, DateTime.DaysInMonth(iYear, iPeriod));
            string query = "SELECT sum(ICShipmentItmAmtTot) FROM ICShipments WHERE AAStatus = 'Alive' AND 0 = 0 ";
            if (fromDate.Year != 1)
                query += String.Format("AND ICShipmentDate >= '{0}' ", String.Format("{0:yyyy/M/d HH:mm:ss}", fromDate));
            if (toDate.Year != 1)
                query += string.Format("AND ICShipmentDate <= '{0}' ", String.Format("{0:yyyy/M/d HH:mm:ss}", toDate));
            query += String.Format("AND FK_PPWOID > 0");
            DataSet ds = dal.GetDataSet(query);
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0].ToString().Length > 0)
            {
                result = (double)ds.Tables[0].Rows[0][0];
            }
            return result;
        }

        public DataSet GetAllReceiptGroupByWO_InPeriod(int iPeriod, int iYear)
        {
            DateTime fromDate = new DateTime(iYear, iPeriod, 1);
            DateTime toDate = new DateTime(iYear, iPeriod, DateTime.DaysInMonth(iYear, iPeriod));
            string query = "SELECT sum(ICShipmentItmAmtTot),FK_PPWOID  FROM ICShipments WHERE AAStatus = 'Alive' AND 0 = 0 ";
            if (fromDate.Year != 1)
                query += String.Format("AND ICShipmentDate >= '{0}' ", String.Format("{0:yyyy/M/d HH:mm:ss}", fromDate));
            if (toDate.Year != 1)
                query += string.Format("AND ICShipmentDate <= '{0}' ", String.Format("{0:yyyy/M/d HH:mm:ss}", toDate));
            query += String.Format("AND FK_PPWOID > 0 group by FK_PPWOID");
            DataSet ds = dal.GetDataSet(query);
            return ds;
        }

        public DataSet GetAllShipmentInPeriod(int iPeriod, int iYear,string status)
        {
            String strQuery = String.Format("SELECT * FROM ICShipments WHERE AAStatus = 'Alive' AND MONTH(ICShipmentDate) = {0} and Year(ICShipmentDate) = {1} and (AAPostStatus is Null or AAPostStatus = N'{2}')", iPeriod, iYear,status);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetShipmentsByFromDateToDate(DateTime fromDate, DateTime toDate)
        {
            string query = "SELECT * FROM ICShipments WHERE AAStatus = 'Alive' ";
            if (fromDate.Year != 1)
                query += String.Format("AND ICShipmentDate >= '{0}' ", String.Format("{0:yyyy/M/d HH:mm:ss}", fromDate));
            if (toDate.Year != 1)
                query += string.Format("AND ICShipmentDate <= '{0}' ", String.Format("{0:yyyy/M/d HH:mm:ss}", toDate));
            DataSet ds = dal.GetDataSet(query);
            return ds;
        }
        public DataSet GetShipmentsByFromDateToDate(DateTime fromDate, DateTime toDate, String strSubType)
        {
            string query = "SELECT * FROM ICShipments WHERE AAStatus = 'Alive' ";
            if (fromDate.Year != 1)
                query += String.Format("AND ICShipmentDate >= '{0}' ", String.Format("{0:yyyy/M/d HH:mm:ss}", fromDate));
            if (toDate.Year != 1)
                query += string.Format("AND ICShipmentDate <= '{0}' ", String.Format("{0:yyyy/M/d HH:mm:ss}", toDate));
            query += String.Format(" AND ICShipmentSubType = '{0}' ", strSubType);
            DataSet ds = dal.GetDataSet(query);
            return ds;
        }

        public DataSet GetShipmentsByFromDateToDateAndProduct(DateTime fromDate, DateTime toDate, String strSubType,ICProductsInfo Product)
        {
            string query = "SELECT * FROM ICShipments WHERE AAStatus = 'Alive' ";
            if (fromDate.Year != 1)
                query += String.Format("AND ICShipmentDate >= '{0}' ", String.Format("{0:yyyy/M/d HH:mm:ss}", fromDate));
            if (toDate.Year != 1)
                query += string.Format("AND ICShipmentDate <= '{0}' ", String.Format("{0:yyyy/M/d HH:mm:ss}", toDate));
            query += String.Format(" AND ICShipmentSubType = '{0}' ", strSubType);
            query += " and ICShipmentID in (Select FK_ICShipmentID from ICshipmentItems where AAStatus='Alive' And fk_ICProductID=" + Product.ICProductID + ")";
            DataSet ds = dal.GetDataSet(query);
            return ds;
        }

        public DataSet GetAllShipmentInPeriod(int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"SELECT * FROM ICShipments 
                                                    WHERE AAStatus = 'Alive'
                                                    AND MONTH(ICShipmentDate) = {0} 
                                                    AND YEAR(ICShipmentDate) = {1}", iPeriod, iYear);
            return dal.GetDataSet(strQuery);
        }
		
		 public DataSet GetAllShipmentInPeriodNotInCostCenterActive(int iYear, int iPeriod)
        {
            String strQuery = String.Format(@"SELECT  ICShipments.*
                                                FROM    dbo.ICShipments
                                                        INNER JOIN dbo.ICShipmentItems ON ( ICShipmentItems.FK_ICShipmentID = ICShipments.ICShipmentID
                                                                                            AND ICShipmentItems.AAStatus = ICShipments.AAStatus
                                                                                            AND ICShipments.AAStatus = 'Alive'
                                                                                            AND YEAR(ICShipmentDate) = {0}
                                                                                            AND MONTH(ICShipmentDate) = {1}
                                                                                            AND ICShipmentItems.FK_PPCostCenterID NOT IN (
																							                                                SELECT  FK_PPCostCenterID
																							                                                FROM    dbo.PPProductionCostCenterActives
																							                                                WHERE   PPYear = {0}
																									                                                AND PPPeriod = {1} )
                                                                                          )"
                                            , iYear, iPeriod);
                        
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllShipmentProductionInPeriod(int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"SELECT ICShipments.* FROM ICShipments, ICShipmentItems, ICStocks
                                                    WHERE ICShipments.AAStatus = 'Alive'
                                                    AND ICShipmentItems.AAStatus = 'Alive'
                                                    AND ICStocks.AAStatus = 'Alive'
                                                    AND ICShipmentItems.FK_ICShipmentID = ICShipmentID
                                                    AND ICShipmentItems.FK_ICStockID = ICStockID
                                                    AND ICStocks.FK_GLInventoryAccountID > 0
                                                    AND MONTH(ICShipmentDate) = {0} 
                                                    AND YEAR(ICShipmentDate) = {1}", iPeriod, iYear);
            return dal.GetDataSet(strQuery);
        }


        public DataSet GetAllShipmentInPeriod(int iStockID, int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"SELECT * FROM ICShipments, ICShipmentItems 
                                                    WHERE AAStatus = 'Alive' AND ICShipmentItems.AAStatus = 'Alive'
                                                    AND ICShipmentItems.FK_ICShipmentID = ICShipments.ICShipmentID
                                                    AND ICShipmentItems.FK_ICStockID = {0}
                                                    AND MONTH(ICShipmentDate) = {1} 
                                                    AND YEAR(ICShipmentDate) = {2}", iStockID, iPeriod, iYear);
            return dal.GetDataSet(strQuery);
        }

        public void UpdateShipmentCostTotFromItems(int iYear, int iPeriod)
        {
            String strQuery = String.Format(@"UPDATE ICShipments 
                                                SET ICShipmentCostTot = (SELECT SUM(ICShipmentItemCostTot) 
                                                                            FROM ICShipmentItems WHERE FK_ICShipmentID = ICShipmentID AND ICShipmentItems.AAStatus = 'Alive')
                                                WHERE ICShipments.AAStatus = 'Alive' 
                                                AND Month(ICShipmentDate) = {0}
                                                AND Year(ICShipmentDate) = {1}", iPeriod, iYear);

            GetDataSet(strQuery);
        }

        #region Get All Price Cost By From Date To Date AND Customer --Vinh -- 16/08/2012
        
        public DataSet GetAllPriceCostByFromDateToDateANDCustomer(int iCustomerID, DateTime FromDate, DateTime ToDate)
        {
            String str = String.Format(@"SELECT YEAR(ICShipmentDate) AS Year, MONTH(ICShipmentDate) AS Month, ARCustomerGroupID, SUM(dbo.ICShipmentItems.ICShipmentItemCostTot) AS CostTot
                                        FROM dbo.ICShipments INNER JOIN dbo.ICShipmentItems ON ICShipmentID = FK_ICShipmentID INNER JOIN dbo.ARCustomers ON dbo.ICShipments.FK_ARCustomerID=dbo.ARCustomers.ARCustomerID INNER JOIN dbo.ARCustomerGroups ON dbo.ARCustomers.FK_ARCustomerGroupID=dbo.ARCustomerGroups.ARCustomerGroupID
                                        WHERE dbo.ICShipments.AAStatus='Alive' AND dbo.ICShipmentItems.AAStatus='Alive' AND dbo.ARCustomers.AAStatus='Alive' AND dbo.ARCustomerGroups.AAStatus='Alive'
                                        AND (YEAR(ICShipmentDate) * 12 +MONTH(ICShipmentDate))  >= ({0} * 12 + {1})
                                        AND (YEAR(ICShipmentDate) * 12 +MONTH(ICShipmentDate))  <= ({2} * 12 + {3})", FromDate.Year, FromDate.Month, ToDate.Year, ToDate.Month);
            if (iCustomerID != 0)
            {
                str += String.Format(@" AND dbo.ICShipments.FK_ARCustomerID={0}", iCustomerID);
            }
            str += String.Format(@"GROUP BY YEAR(ICShipmentDate), MONTH(ICShipmentDate), ARCustomerGroupID");
            return dal.GetDataSet(str);
        }

        #endregion

        #region Get All Price Cost By From Date To Date AND Product --Vinh -- 23/08/2012

        public DataSet GetAllPriceCostByFromDateToDateANDProduct(int iProductID, DateTime FromDate, DateTime ToDate)
        {
            String str = String.Format(@"SELECT YEAR(ICShipmentDate) AS Year, MONTH(ICShipmentDate) AS Month, ICProductGroupID, SUM(dbo.ICShipmentItems.ICShipmentItemCostTot) AS CostTot
                                        FROM dbo.ICShipments INNER JOIN dbo.ICShipmentItems ON ICShipmentID = FK_ICShipmentID INNER JOIN dbo.ICProducts ON dbo.ICShipmentItems.FK_ICProductID=dbo.ICProducts.ICProductID INNER JOIN dbo.ICProductGroups ON dbo.ICProducts.FK_ICProductGroupID=dbo.ICProductGroups.ICProductGroupID
                                        WHERE dbo.ICShipments.AAStatus='Alive' AND dbo.ICShipmentItems.AAStatus='Alive' AND dbo.ICProducts.AAStatus='Alive' AND dbo.ICProductGroups.AAStatus='Alive'
                                        AND (YEAR(ICShipmentDate) * 12 +MONTH(ICShipmentDate))  >= ({0} * 12 + {1})
                                        AND (YEAR(ICShipmentDate) * 12 +MONTH(ICShipmentDate))  <= ({2} * 12 + {3})", FromDate.Year, FromDate.Month, ToDate.Year, ToDate.Month);
            if (iProductID != 0)
            {
                str += String.Format(@" AND dbo.ICShipmentItems.FK_ICProductID={0}", iProductID);
            }
            str += String.Format(@"GROUP BY YEAR(ICShipmentDate), MONTH(ICShipmentDate), ICProductGroupID");
            return dal.GetDataSet(str);
        }

        #endregion

        public DataSet GetAllDataByPurchaseOrder(int iPOID)
        {
            string strQuery = String.Format(@"SELECT * FROM dbo.ICShipments WHERE ICShipmentID IN (
                                                SELECT ICShipmentID FROM dbo.ICShipmentItems WHERE ICShipmentItemID IN (
                                                SELECT ICShipmentItemID FROM dbo.ICShipmentItemROItems WHERE FK_ICROItemID IN (
                                                SELECT ICROItemID FROM dbo.ICROItems WHERE FK_ICROID IN (
                                                SELECT ICROID FROM dbo.ICROs WHERE FK_APPOID={0}) AND dbo.ICROItems.AAStatus='Alive')
                                                AND dbo.ICShipmentItemROItems.AAStatus='Alive') AND dbo.ICShipmentItems.AAStatus='Alive') 
                                                AND dbo.ICShipments.AAStatus='Alive'", iPOID);
            return dal.GetDataSet(strQuery);                                   
        }
        public string CheckShipmentByLotNo(int iProductID, string lotNo, int iStockID = 0)
        {
            if (string.IsNullOrEmpty(lotNo)) return string.Empty;
            string strSub = string.Empty;
            if (iStockID != 0) strSub = string.Format("AND FK_ICStockID = {0}", iStockID);
            string strQuery = string.Format(@"SELECT a.* FROM ICShipments a JOIN ICShipmentItems b ON ICShipmentID = FK_ICShipmentID AND a.AAStatus = 'Alive' AND b.AAStatus = 'Alive'
                AND FK_ICProductID = {0} AND ICShipmentItemLotNo = '{1}' {2}", iProductID, lotNo, strSub);
            DataSet ds = GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return Convert.ToString(ds.Tables[0].Rows[0]["ICShipmentNo"]);
            return string.Empty;
        }
        public void DeleteAllObjectByAAModule (String strAAModule, DateTime dtTo)
        {
            String strQuery = string.Format(@"  
UPDATE ICShipmentItems
    SET AAStatus = 'Delete'
FROM ICShipmentItems a
INNER JOIN ICShipments b ON b.ICShipmentID = a.FK_ICShipmentID
    AND b.AAStatus = 'Alive' 
    AND b.AAModule = '{0}'
    AND ICShipmentDate = '{1}'

UPDATE ICShipments
    SET AAStatus = 'Delete'
WHERE AAStatus = 'Alive' 
    AND AAModule = '{0}'
    AND ICShipmentDate = '{1}'


UPDATE ICReceiptItems
    SET AAStatus = 'Delete'
FROM ICReceiptItems a
INNER JOIN ICReceipts b ON b.ICReceiptID = a.FK_ICReceiptID
    AND b.AAStatus = 'Alive'
    AND b.AAModule = '{0}'
    AND ICReceiptDate = '{1}'

UPDATE ICReceipts
    SET AAStatus = 'Delete'
WHERE AAStatus = 'Alive'
    AND AAModule = '{0}'
    AND ICReceiptDate = '{1}'"
                , strAAModule,dtTo.ToString("yyyyMMdd"));
            GetDataSet(strQuery);

        }
        public DataSet GetAllDataByQuery(string strSubQuery)
        {
            string strQuery = string.Format(@"{0} AND ICROID IN(SELECT FK_ICROID FROM ICShipmentROs a 
                                                        JOIN ICShipments b ON a.FK_ICShipmentID = b.ICShipmentID AND a.AAStatus = 'Alive' AND b.AAStatus = 'Alive'
	                                                    JOIN ICShipmentItems c ON b.ICShipmentID = c.FK_ICShipmentID AND c.AAStatus = 'Alive'
	                                                WHERE ICShipmentItemRQty > 0)", strSubQuery.Replace("FROM", "INTO #View FROM"));
            strQuery += string.Format(@"{0} UPDATE #View SET AASelected = 0 {0} SELECT * FROM #View {0} IF OBJECT_ID('tempdb..#View') IS NOT NULL DROP TABLE #View", Environment.NewLine);
            return GetDataSet(strQuery);
        }
        public DataSet GetAllDataByROID(int iROID)
        {
            string strQuery = string.Format(@"SELECT * FROM {0} WHERE AAStatus = 'Alive' 
AND ICShipmentID IN(SELECT FK_ICShipmentID FROM ICShipmentROs WHERE AAStatus = 'Alive' AND FK_ICROID = {1})", dal.TableName, iROID);
            return GetDataSet(strQuery);
        }

        public void UpdateShipmentCosting(DateTime dtime, string pModuleName)
        {
            SqlDatabaseHelper.RunStoredProcedure("spl_UpdateShipmentCosting", dtime, pModuleName);
        }

    }
	#endregion
}