using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
    #region ICVals
    //-----------------------------------------------------------
    //Generated By: Expert Studio
    //Class:ICValsController
    //Created Date:Wednesday, December 15, 2010
    //-----------------------------------------------------------

    public class ICValsController : BaseBusinessController
    {
        public ICValsController()
        {
            dal = new DALBaseProvider("ICVals", typeof(ICValsInfo));
        }

        public object GetObject_ByProductID_AndStockID_AndBrandID(int iICProductID, int iICStockID, int iICBrandID)
        {
            String strQuery = String.Format("SELECT * FROM ICVals WHERE FK_ICProductID = {0} AND FK_ICStockID = {1} AND FK_ICBrandID = {2}", iICProductID, iICStockID, iICBrandID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }

        public ICValsInfo GetPreValuation(int iStockID, int iProductID, int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"SELECT TOP(1) *
                                                FROM dbo.ICVals
                                                WHERE 
                                                ICVals.FK_ICProductID = {0}
                                                AND ICVals.FK_ICStockID = {1}
                                                AND ICYear * 12 + ICPeriod < {2}*12 + {3}
                                                ORDER BY (ICYear * 12 + ICPeriod) DESC", iProductID, iStockID, iYear, iPeriod
                                            );

            DataSet ds = GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (ICValsInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            //            else
            //            {
            //                strQuery = String.Format(@"SELECT TOP(1) *
            //                                                FROM dbo.ICVals
            //                                                WHERE 
            //                                                ICVals.FK_ICProductID = {0}
            //                                                AND ICVals.FK_ICStockID = 0
            //                                                AND ICYear * 13 + ICPeriod < {1}*13 + {2}
            //                                                ORDER BY (ICYear * 13 + ICPeriod) DESC", iProductID, iYear, iPeriod
            //                                            );

            //                ds = GetDataSet(strQuery);
            //                if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            //                    return (ICValsInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            //            }
            return null;
        }

        public ICValsInfo GetValuation(int iStockID, int iProductID, int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"
                                            SELECT TOP(1) *
                                            FROM dbo.ICVals
                                            WHERE 
                                            ICVals.FK_ICProductID = {0}
                                            AND ICVals.FK_ICStockID = {1}
                                            AND ICYear * 12 + ICPeriod <= {2}*12 + {3}
                                            ORDER BY (ICYear * 13 + ICPeriod) DESC", iProductID, iStockID, iYear, iPeriod);

            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (ICValsInfo)this.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            else
            {
                strQuery = String.Format(@"
                                            SELECT TOP(1) *
                                            FROM dbo.ICVals
                                            WHERE 
                                            ICVals.FK_ICProductID = {0}
                                            AND ICVals.FK_ICStockID = 0
                                            AND ICYear * 12 + ICPeriod <= {1}*12 + {2}
                                            ORDER BY (ICYear * 13 + ICPeriod) DESC", iProductID, iYear, iPeriod);

                ds = dal.GetDataSet(strQuery);

                if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                    return (ICValsInfo)this.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }

            return null;
        }

        public ICValsInfo GetValuecationByProductIDAndPeriodAndYear(int iICProductID, int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"SELECT * FROM ICVals WHERE FK_ICProductID = {0} AND ICPeriod = {1} AND ICYear = {2}", iICProductID, iPeriod, iYear);
            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (ICValsInfo)this.GetObjectFromDataRow(ds.Tables[0].Rows[0]);

            return null;
        }

        public DataSet GetValuecationByStockIDProductIDAndPeriodAndYear(int iPeriod, int iYear)
        {
            string strQuery = string.Format(@"Select * from ICVals where ICPeriod={0} 
                                                            and ICYear={1} 
                                                            AND FK_ICProductID in (Select ICProductID from ICProducts where AAStatus='Alive')
                                                            AND FK_ICStockID in (Select ICStockID from ICStocks where AAStatus='Alive')
                                                            order by FK_ICStockID,FK_ICProductID",
                                                       iPeriod, iYear);

            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables[0].Rows.Count > 0)
                return ds;

            return null;
        }

        //public void DeleteValuationInPeriod(int iPeriod, int iYear)
        //{
        //    DataSet ds = dal.GetDataSet("ICVals_DeleteByPeriod_Year", iPeriod, iYear);
        //}
        //public void DeleteValuationInPeriod(int iPeriod, int iYear,int iProductID)
        //{
        //    DataSet ds = dal.GetDataSet("Delete from ICVals where ICPeriod = " + iPeriod + " and ICYear = " + iYear + " and FK_ICProductID = " + iProductID);
        //}
        public void DeleteVal(int iPeriod, int iYear, int iProductID, int iStockID)
        {
            String strQuery = String.Format(@"DELETE ICVals WHERE ICPeriod = {0} AND ICYear = {1} AND FK_ICProductID = {2} AND FK_ICStockID = {3}", iPeriod, iYear, iProductID, iStockID);
            GetDataSet(strQuery);
        }
        //public void DeleteVal(int iPeriod, int iYear, int iStockID)
        //{
        //    String strQuery = String.Format(@"DELETE ICVals WHERE ICPeriod = {0} AND ICYear = {1} AND FK_ICStockID = {2}", iPeriod, iYear, iStockID);
        //    GetDataSet(strQuery);
        //}
        public DataSet GetValuecationByStockIDAndPeriodAndYear(int iICStockID, int iPeriod, int iYear)
        {
            return dal.GetDataSet("ICVals_SelectByStockID_Period_Year", iICStockID, iPeriod, iYear);
        }

        public bool isExistTransaction(int iProductID, int iStockID)
        {
            String strQuery = String.Empty;
            if (iStockID > 0)
                strQuery = String.Format(@"SELECT TOP(1) ICShipmentItemID as ID FROM ICShipmentItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0} AND FK_ICStockID = {1}
                                                AND 
                                                (
                                                    FK_ICShipmentID IN (SELECT ICShipmentID FROM ICShipments WHERE AAStatus = 'ALive')
                                                    OR
                                                    FK_PPPRoductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus = 'ALive')
                                                )

                                                UNION ALL
	
                                                SELECT TOP(1) ICReceiptItemID as ID FROM ICReceiptItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0} AND FK_ICStockID = {1}
                                                AND 
                                                (
                                                    FK_ICReceiptID IN (SELECT ICReceiptID FROM ICReceipts WHERE AAStatus = 'ALive')
                                                    OR
                                                    FK_PPPRoductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus = 'ALive')
                                                )
	
                                                UNION ALL

                                                SELECT TOP(1) ICTransferItemID as ID 
                                                FROM ICTransferItems WHERE 
                                                AAStatus = 'Alive'  AND FK_ICProductID = {0} AND (FK_ICFromStockID = {1} OR FK_ICToStockID = {1})
                                                AND FK_ICTransferID IN (SELECT ICTransferID FROM ICTransfers WHERE AAStatus = 'ALive')", iProductID, iStockID);
            else
                strQuery = String.Format(@"SELECT TOP(1) ICShipmentItemID as ID FROM ICShipmentItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0}
                                                AND 
                                                (
                                                    FK_ICShipmentID IN (SELECT ICShipmentID FROM ICShipments WHERE AAStatus = 'ALive')
                                                    OR
                                                    FK_PPPRoductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus = 'ALive')
                                                )

                                                UNION ALL
	
                                                SELECT TOP(1) ICReceiptItemID as ID FROM ICReceiptItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0}
                                                AND 
                                                (
                                                    FK_ICReceiptID IN (SELECT ICReceiptID FROM ICReceipts WHERE AAStatus = 'ALive')
                                                    OR
                                                    FK_PPPRoductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus = 'ALive')
                                                )
	
                                                UNION ALL

                                                SELECT TOP(1) ICTransferItemID as ID 
                                                FROM ICTransferItems WHERE 
                                                AAStatus = 'Alive'  AND FK_ICProductID = {0}
                                                AND FK_ICTransferID IN (SELECT ICTransferID FROM ICTransfers WHERE AAStatus = 'ALive')", iProductID);

            DataSet ds = GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return true;

            return false;
        }

        public bool isExistTransaction(int iProductID, int iStockID, DateTime dtFrom, DateTime dtTo)
        {
            String strShipmentDateCond = DALUtil.GenerateBeetween("ICShipmentDate", dtFrom, dtTo);
            String strReceiptDateCond = DALUtil.GenerateBeetween("ICReceiptDate", dtFrom, dtTo);
            String strProductionOrdrDateCond = DALUtil.GenerateBeetween("PPProductionOrdrDate", dtFrom, dtTo);
            String strTransferDateCond = DALUtil.GenerateBeetween("ICTransferDate", dtFrom, dtTo);

            String strQuery = String.Empty;
            if (iStockID > 0)
            {
                strQuery = String.Format(@"SELECT TOP(1) ICShipmentItemID as ID FROM ICShipmentItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0} AND FK_ICStockID = {1}
                                                AND 
                                                (
                                                    FK_ICShipmentID IN (SELECT ICShipmentID FROM ICShipments WHERE AAStatus = 'ALive' AND {2})
                                                    OR
                                                    FK_PPPRoductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus = 'ALive' AND {4})
                                                )

                                                UNION ALL
	
                                                SELECT TOP(1) ICReceiptItemID as ID FROM ICReceiptItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0} AND FK_ICStockID = {1}
                                                AND 
                                                (
                                                    FK_ICReceiptID IN (SELECT ICReceiptID FROM ICReceipts WHERE AAStatus = 'ALive' AND {3})
                                                    OR
                                                    FK_PPPRoductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus = 'ALive'  AND {4})
                                                )
	
                                                UNION ALL

                                                SELECT TOP(1) ICTransferItemID as ID 
                                                FROM ICTransferItems WHERE 
                                                AAStatus = 'Alive'  AND FK_ICProductID = {0} AND (FK_ICFromStockID = {1} OR FK_ICToStockID = {1})
                                                AND FK_ICTransferID IN (SELECT ICTransferID FROM ICTransfers WHERE AAStatus = 'ALive' AND {5})", iProductID, iStockID, strShipmentDateCond, strReceiptDateCond, strProductionOrdrDateCond, strTransferDateCond);
            }
            else
            {
                strQuery = String.Format(@"SELECT TOP(1) ICShipmentItemID as ID FROM ICShipmentItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0} 
                                                AND 
                                                (
                                                    FK_ICShipmentID IN (SELECT ICShipmentID FROM ICShipments WHERE AAStatus = 'ALive' AND {1})
                                                    OR
                                                    FK_PPPRoductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus = 'ALive' AND {3})
                                                )

                                                UNION ALL
	
                                                SELECT TOP(1) ICReceiptItemID as ID FROM ICReceiptItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0}
                                                AND 
                                                (
                                                    FK_ICReceiptID IN (SELECT ICReceiptID FROM ICReceipts WHERE AAStatus = 'ALive' AND {2})
                                                    OR
                                                    FK_PPPRoductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus = 'ALive'  AND {3})
                                                )
	
                                                UNION ALL

                                                SELECT TOP(1) ICTransferItemID as ID 
                                                FROM ICTransferItems WHERE 
                                                AAStatus = 'Alive'  AND FK_ICProductID = {0}
                                                AND FK_ICTransferID IN (SELECT ICTransferID FROM ICTransfers WHERE AAStatus = 'ALive' AND {4})", iProductID, strShipmentDateCond, strReceiptDateCond, strProductionOrdrDateCond, strTransferDateCond);
            }

            DataSet ds = GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return true;

            return false;
        }

        public DataSet GetAllProductIDInPeriod(int iStockID, int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"
                                            SELECT DISTINCT ICReceiptItems.FK_ICProductID AS ProductID
                                            FROM dbo.ICReceiptItems, dbo.ICReceipts
                                            WHERE ICReceiptItems.FK_ICReceiptID = ICReceiptID
                                            AND ICReceiptItems.AAStatus = 'Alive'
                                            AND ICReceipts.AAStatus = 'Alive'
                                            AND ICReceiptItems.FK_ICStockID = {0}
                                            AND MONTH(ICReceiptDate) = {1}
                                            AND Year(ICReceiptDate) = {2}
                                            UNION
                                            SELECT DISTINCT ICReceiptItems.FK_ICProductID AS ProductID
                                            FROM dbo.ICReceiptItems, dbo.PPProductionOrdrs
                                            WHERE ICReceiptItems.FK_PPProductionOrdrID = PPProductionOrdrID
                                            AND ICReceiptItems.AAStatus = 'Alive'
                                            AND PPProductionOrdrs.AAStatus = 'Alive'
                                            AND ICReceiptItems.FK_ICStockID ={0}
                                            AND MONTH(PPProductionOrdrDate) = {1}
                                            AND Year(PPProductionOrdrDate) = {2}
                                            UNION
                                            SELECT DISTINCT ICShipmentItems.FK_ICProductID AS ProductID
                                            FROM dbo.ICShipmentItems, dbo.PPProductionOrdrs
                                            WHERE ICShipmentItems.FK_PPProductionOrdrID = PPProductionOrdrID
                                            AND ICShipmentItems.AAStatus = 'Alive'
                                            AND PPProductionOrdrs.AAStatus = 'Alive'
                                            AND ICShipmentItems.FK_ICStockID = {0}
                                            AND MONTH(PPProductionOrdrDate) = {1}
                                            AND Year(PPProductionOrdrDate) = {2}
                                            UNION
                                            SELECT DISTINCT ICShipmentItems.FK_ICProductID AS ProductID
                                            FROM dbo.ICShipmentItems, dbo.ICShipments
                                            WHERE ICShipmentItems.FK_ICShipmentID = ICShipments.ICShipmentID
                                            AND ICShipmentItems.AAStatus = 'Alive'
                                            AND ICShipments.AAStatus = 'Alive'
                                            AND ICShipmentItems.FK_ICStockID = {0}
                                            AND MONTH(ICShipmentDate) = {1}
                                            AND Year(ICShipmentDate) = {2}
                                            UNION
                                            SELECT DISTINCT ICTransferItems.FK_ICProductID AS ProductID
                                            FROM dbo.ICTransferItems, dbo.ICTransfers
                                            WHERE ICTransferItems.FK_ICTransferID = ICTransferID
                                            AND ICTransferItems.AAStatus = 'Alive'
                                            AND ICTransfers.AAStatus = 'Alive'
                                            AND ICTransferItems.FK_ICToStockID = {0}
                                            AND MONTH(ICTransferDate) = {1}
                                            AND Year(ICTransferDate) = {2}
                                            UNION
                                            SELECT DISTINCT ICTransferItems.FK_ICProductID AS ProductID
                                            FROM dbo.ICTransferItems, dbo.ICTransfers
                                            WHERE ICTransferItems.FK_ICTransferID = ICTransferID
                                            AND ICTransferItems.AAStatus = 'Alive'
                                            AND ICTransfers.AAStatus = 'Alive'
                                            AND ICTransferItems.FK_ICFromStockID = {0}
                                            AND MONTH(ICTransferDate) = {1}
                                            AND Year(ICTransferDate) = {2}
                                            UNION
                                            SELECT DISTINCT ICAdjInvItems.FK_ICProductID AS ProductID
                                            FROM dbo.ICAdjInvItems, dbo.ICAdjInvs
                                            WHERE ICAdjInvItems.FK_ICAdjInvID = ICAdjInvID
                                            AND ICAdjInvItems.AAStatus = 'Alive'
                                            AND ICAdjInvs.AAStatus = 'Alive'
                                            AND ICAdjInvItems.FK_ICStockID = {0}
                                            AND MONTH(ICAdjInvDate) = {1}
                                            AND Year(ICAdjInvDate) = {2}", iStockID, iPeriod, iYear);

            return GetDataSet(strQuery);
        }

        public DataSet CalcVal(int iProductID, int iPeriod, int iYear)
        {
            DateTime dt = DateTime.Now;
            long longNow = dt.Ticks;
            String strQuery = String.Format(@"  IF OBJECT_ID('Val_{3}') IS NOT NULL
                                                BEGIN
                                                DROP TABLE Val_{3}
                                                END

                                            SELECT * INTO Val_{3}
                                            FROM 
                                            (
                                                select FK_ICProductID AS ProductID,
                                                FK_ICStockID AS StockID,
                                                SUM(ICShipmentItemQty) As ShpQty,
                                                0 as TransferOutQty,
                                                0 AS RcpQty,
                                                0 AS RcpCost,
                                                0 AS TransferInQty,
                                                0 AS TransferInCost
                                                FROM ICShipmentItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0}
                                                AND (FK_ICShipmentID IN (SELECT ICShipmentID FROM ICShipments WHERE AAStatus = 'ALive' AND MONTH(ICShipmentDate) = {1} AND YEAR(ICShipmentDate) = {2})
		                                                OR
	                                                 FK_PPProductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus = 'ALive' AND MONTH(PPProductionOrdrDate) = {1} AND YEAR(PPProductionOrdrDate) = {2})
	                                                 )
                                                GROUP BY FK_ICProductID	, FK_ICStockID

	 
                                                UNION ALL

                                                select FK_ICProductID AS ProductID,
                                                FK_ICFromStockID AS StockID,
                                                0 As ShpQty,
                                                SUM(ICTransferItemQty) as TransferOutQty,
                                                0 AS RcpQty,
                                                0 AS RcpCost,
                                                0 AS TransferInQty,
                                                0 AS TransferInCost
                                                FROM ICTransferItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0}
                                                AND FK_ICTransferID IN (SELECT ICTransferID FROM ICTransfers WHERE AAStatus = 'ALive' AND MONTH(ICTransferDate) = {1} AND YEAR(ICTransferDate) = {2})
                                                GROUP BY FK_ICProductID	, FK_ICFromStockID

                                                UNION ALL

                                                select FK_ICProductID AS ProductID,
                                                FK_ICStockID AS StockID,
                                                0 As ShpQty,
                                                0 as TransferOutQty,
                                                SUM(ICReceiptItemQty) AS RcpQty,
                                                SUM(ICReceiptItemCostTot) AS RcpCost,
                                                0 AS TransferInQty,
                                                0 AS TransferInCost
                                                FROM ICReceiptItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0}
                                                AND (FK_ICReceiptID IN (SELECT ICReceiptID FROM ICReceipts WHERE AAStatus = 'ALive' AND MONTH(ICReceiptDate) = {1} AND YEAR(ICReceiptDate) = {2})
		                                                OR
	                                                 FK_PPProductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus = 'ALive' AND MONTH(PPProductionOrdrDate) = {1} AND YEAR(PPProductionOrdrDate) = {2})
	                                                 )
                                                GROUP BY FK_ICProductID	, FK_ICStockID
	
                                                UNION ALL

                                                select FK_ICProductID AS ProductID,
                                                FK_ICToStockID AS StockID,
                                                0 As ShpQty,
                                                0 as TransferOutQty,
                                                0 AS RcpQty,
                                                0 AS RcpCost,
                                                SUM(ICTransferItemQty) AS TransferInQty,
                                                SUM(ICTransferItemCostTot) AS TransferInCost
                                                FROM ICTransferItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0}
                                                AND FK_ICTransferID IN (SELECT ICTransferID FROM ICTransfers WHERE AAStatus = 'ALive' AND MONTH(ICTransferDate) = {1} AND YEAR(ICTransferDate) = {2})
                                                GROUP BY FK_ICProductID	, FK_ICToStockID

                                                ) AS Temp

                                                SELECT ProductID, StockID,
                                                SUM(RcpQty + TransferInQty) AS RcptQty,
                                                SUM(ShpQty + TransferOutQty) AS ShpQty,
                                                SUM(RcpQty + TransferInQty - ShpQty - TransferOutQty) AS EndQty,
                                                SUM(RcpCost + TransferInCost) AS RcptCost
                                                FROM VAl_{3} GROUP BY ProductID, StockID

                                                IF OBJECT_ID('Val_{3}') IS NOT NULL
                                                BEGIN
                                                DROP TABLE Val_{3}
                                                END

                                             ", iProductID, iPeriod, iYear, longNow.ToString());

            return GetDataSet(strQuery);
        }

        public DataSet CalcVal_Company(int iProductID, int iPeriod, int iYear)
        {
            String strQuery = String.Format(@" 

                                            SELECT ProductID,
                                            0 AS StockID,
                                            SUM(RcpQty) AS RcptQty,
                                            SUM(ShpQty) AS ShpQty,
                                            SUM(RcpQty - ShpQty) AS EndQty,
                                            SUM(RcpCost) AS RcptCost
                                            FROM 
                                            (
                                                select FK_ICProductID AS ProductID,
                                                SUM(ICShipmentItemQty) As ShpQty,
                                                0 AS RcpQty,
                                                0 AS RcpCost
                                                FROM ICShipmentItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0}
                                                AND (FK_ICShipmentID IN (SELECT ICShipmentID FROM ICShipments WHERE AAStatus = 'ALive' AND MONTH(ICShipmentDate) = {1} AND YEAR(ICShipmentDate) = {2})
		                                                OR
	                                                 FK_PPProductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus = 'ALive' AND MONTH(PPProductionOrdrDate) = {1} AND YEAR(PPProductionOrdrDate) = {2})
	                                                 )
                                                GROUP BY FK_ICProductID
	 
                                                UNION ALL

                                                select FK_ICProductID AS ProductID,
                                                0 As ShpQty,
                                                SUM(ICReceiptItemQty) AS RcpQty,
                                                SUM(ICReceiptItemCostTot) AS RcpCost
                                                FROM ICReceiptItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0}
                                                AND (FK_ICReceiptID IN (SELECT ICReceiptID FROM ICReceipts WHERE AAStatus = 'ALive' AND MONTH(ICReceiptDate) = {1} AND YEAR(ICReceiptDate) = {2})
		                                                OR
	                                                 FK_PPProductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus = 'ALive' AND MONTH(PPProductionOrdrDate) = {1} AND YEAR(PPProductionOrdrDate) = {2})
	                                                 )
                                                GROUP BY FK_ICProductID	

                                                ) AS Temp
                                                GROUP BY ProductID
                                             ", iProductID, iPeriod, iYear);

            return GetDataSet(strQuery);
        }

        public DataSet CalcVal(int iProductID, int iStockID, int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"SELECT ProductID, StockID,
                                                SUM(RcpQty + TransferInQty) AS RcptQty,
                                                SUM(ShpQty + TransferOutQty) AS ShpQty,
                                                SUM(RcpQty + TransferInQty - ShpQty - TransferOutQty) AS EndQty,
                                                SUM(RcpCost + TransferInCost) AS RcptCost
                                            FROM 
                                            (
                                                select FK_ICProductID AS ProductID,
                                                FK_ICStockID AS StockID,
                                                SUM(ICShipmentItemQty) As ShpQty,
                                                0 as TransferOutQty,
                                                0 AS RcpQty,
                                                0 AS RcpCost,
                                                0 AS TransferInQty,
                                                0 AS TransferInCost
                                                FROM ICShipmentItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0}
                                                AND FK_ICStockID = {3}
                                                AND (FK_ICShipmentID IN (SELECT ICShipmentID FROM ICShipments WHERE AAStatus = 'ALive' AND MONTH(ICShipmentDate) = {1} AND YEAR(ICShipmentDate) = {2})
		                                                OR
	                                                 FK_PPProductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus = 'ALive' AND MONTH(PPProductionOrdrDate) = {1} AND YEAR(PPProductionOrdrDate) = {2})
	                                                 )
                                                GROUP BY FK_ICProductID	, FK_ICStockID

	 
                                                UNION ALL

                                                select FK_ICProductID AS ProductID,
                                                FK_ICFromStockID AS StockID,
                                                0 As ShpQty,
                                                SUM(ICTransferItemQty) as TransferOutQty,
                                                0 AS RcpQty,
                                                0 AS RcpCost,
                                                0 AS TransferInQty,
                                                0 AS TransferInCost
                                                FROM ICTransferItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0}
                                                AND FK_ICFromStockID = {3}
                                                AND FK_ICTransferID IN (SELECT ICTransferID FROM ICTransfers WHERE AAStatus = 'ALive' AND MONTH(ICTransferDate) = {1} AND YEAR(ICTransferDate) = {2})
                                                GROUP BY FK_ICProductID	, FK_ICFromStockID

                                                UNION ALL

                                                SELECT FK_ICProductID AS ProductID,
                                                FK_ICStockID AS StockID,
                                                0 As ShpQty,
                                                0 as TransferOutQty,
                                                SUM(ICReceiptItemQty) AS RcpQty,
                                                SUM(ICReceiptItemCostTot) AS RcpCost,
                                                0 AS TransferInQty,
                                                0 AS TransferInCost
                                                FROM ICReceiptItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0}
                                                AND FK_ICStockID = {3}
                                                AND (FK_ICReceiptID IN (SELECT ICReceiptID FROM ICReceipts WHERE AAStatus = 'ALive' AND MONTH(ICReceiptDate) = {1} AND YEAR(ICReceiptDate) = {2})
		                                                OR
	                                                 FK_PPProductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus = 'ALive' AND MONTH(PPProductionOrdrDate) = {1} AND YEAR(PPProductionOrdrDate) = {2})
	                                                 )
                                                GROUP BY FK_ICProductID	, FK_ICStockID

                                                UNION ALL

                                                SELECT FK_ICProductID AS ProductID,
                                                FK_ICStockID AS StockID,
                                                0 As ShpQty,
                                                0 as TransferOutQty,
                                                SUM(ICAdjInvItemQty) AS RcpQty,
                                                SUM(ICAdjInvItemCostTot) AS RcpCost,
                                                0 AS TransferInQty,
                                                0 AS TransferInCost
                                                FROM ICAdjInvItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0}
                                                AND FK_ICStockID = {3}
                                                AND ICAdjInvItemTypeCombo = 'IncQty'
                                                AND FK_ICAdjInvID IN (SELECT ICAdjInvID FROM ICAdjInvs WHERE AAStatus = 'ALive' AND MONTH(ICAdjInvDate) = {1} AND YEAR(ICAdjInvDate) = {2})
                                                GROUP BY FK_ICProductID	, FK_ICStockID

                                                UNION ALL

                                                SELECT FK_ICProductID AS ProductID,
                                                FK_ICStockID AS StockID,
                                                SUM(ICAdjInvItemQty) As ShpQty,
                                                0 as TransferOutQty,
                                                0 AS RcpQty,
                                                0 AS RcpCost,
                                                0 AS TransferInQty,
                                                0 AS TransferInCost
                                                FROM ICAdjInvItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0}
                                                AND FK_ICStockID = {3}
                                                AND ICAdjInvItemTypeCombo = 'DecQty'
                                                AND FK_ICAdjInvID IN (SELECT ICAdjInvID FROM ICAdjInvs WHERE AAStatus = 'ALive' AND MONTH(ICAdjInvDate) = {1} AND YEAR(ICAdjInvDate) = {2})
                                                GROUP BY FK_ICProductID	, FK_ICStockID
	
                                                UNION ALL

                                                select FK_ICProductID AS ProductID,
                                                FK_ICToStockID AS StockID,
                                                0 As ShpQty,
                                                0 as TransferOutQty,
                                                0 AS RcpQty,
                                                0 AS RcpCost,
                                                SUM(ICTransferItemQty) AS TransferInQty,
                                                SUM(ICTransferItemCostTot) AS TransferInCost
                                                FROM ICTransferItems WHERE AAStatus = 'Alive'
                                                AND FK_ICProductID = {0}
                                                AND FK_ICToStockID = {3}
                                                AND FK_ICTransferID IN (SELECT ICTransferID FROM ICTransfers WHERE AAStatus = 'ALive' AND MONTH(ICTransferDate) = {1} AND YEAR(ICTransferDate) = {2})
                                                GROUP BY FK_ICProductID	, FK_ICToStockID

                                                ) AS Temp
                                                GROUP BY ProductID, StockID
                                             ", iProductID, iPeriod, iYear, iStockID);

            return GetDataSet(strQuery);
        }

        public DataSet GetSumCBMByProductInStock(int iYear, int iPeriod, int iStockID, bool isFirstStock)
        {
            String strQueryProductionOrdr = String.Format(@"SELECT 
                                                ICReceiptItems.FK_ICProductID AS ProductID,
                                                SUM(ICReceiptItems.ICReceiptItemVolume) AS CBM
                                                FROM ICReceiptItems, PPProductionOrdrs, ICProducts
                                                WHERE ICProducts.AAStatus = 'Alive'
                                                AND ICReceiptItems.AAStatus = 'Alive'
                                                AND PPProductionOrdrs.AAStatus = 'Alive'
                                                AND ICReceiptItems.FK_PPProductionOrdrID = PPProductionOrdrs.PPProductionOrdrID
                                                AND ICReceiptItems.FK_ICProductID = ICProducts.ICProductID
                                                AND ICReceiptItems.FK_ICStockID = {0}
                                                AND PPProductionOrdrs.PPProductionOrdrTypeCombo <> 'ConvertProduct'
                                                AND Month(PPProductionOrdrs.PPProductionOrdrDate) = {1} 
                                                AND Year(PPProductionOrdrs.PPProductionOrdrDate) = {2} 
                                                GROUP BY ICReceiptItems.FK_ICProductID", iStockID, iPeriod, iYear);

            String strQueryReceipt = String.Format(@"SELECT 
                                                ICReceiptItems.FK_ICProductID AS ProductID,
                                                SUM(ICReceiptItems.ICReceiptItemVolume) AS CBM
                                                FROM ICReceiptItems, ICReceipts, ICProducts
                                                WHERE ICProducts.AAStatus = 'Alive'
                                                AND ICReceiptItems.AAStatus = 'Alive'
                                                AND ICReceipts.AAStatus = 'Alive'
                                                AND ICReceiptItems.FK_ICReceiptID = ICReceipts.ICReceiptID
                                                AND ICReceiptItems.FK_ICProductID = ICProducts.ICProductID
                                                AND ICReceiptItems.FK_ICStockID = {0}
                                                AND Month(ICReceipts.ICReceiptDate) = {1} 
                                                AND Year(ICReceipts.ICReceiptDate) = {2} 
                                                GROUP BY ICReceiptItems.FK_ICProductID", iStockID, iPeriod, iYear);


            //            String strQueryTransfer = String.Format(@"SELECT 
            //                                                        ICTransferItems.FK_ICProductID AS ProductID,
            //                                                        SUM(ICTransferItems.ICTransferItemVolume) AS CBM
            //                                                        FROM ICTransferItems, ICTransfers, ICProducts
            //                                                        WHERE ICProducts.AAStatus = 'Alive'
            //                                                        AND ICTransferItems.AAStatus = 'Alive'
            //                                                        AND ICTransfers.AAStatus = 'Alive'
            //                                                        AND ICTransferItems.FK_ICTransferID = ICTransfers.ICTransferID
            //                                                        AND ICTransferItems.FK_ICProductID = ICProducts.ICProductID
            //                                                        AND ICTransferItems.FK_ICToStockID = {0}
            //                                                        AND Month(ICTransfers.ICTransferDate) = {1} 
            //                                                        AND Year(ICTransfers.ICTransferDate) = {2} 
            //                                                        GROUP BY ICTransferItems.FK_ICProductID", iStockID, iPeriod, iYear);

            String strQuery = String.Empty;
            if (isFirstStock)
                strQuery = String.Format(@"SELECT 
                                            ProductID,
                                            SUM(CBM) AS CBM
                                            FROM
                                            (
                                                {0}
                                                UNION ALL
                                                {1}
                                            ) AS Temp
                                            Group By ProductID  
                                            ", strQueryReceipt, strQueryProductionOrdr);
            else
                strQuery = String.Format(@"SELECT 
                                            ProductID,
                                            SUM(CBM) AS CBM
                                            FROM
                                            (
                                                {0}
                                            ) AS Temp
                                            Group By ProductID
                                            ", strQueryProductionOrdr);
            return GetDataSet(strQuery);

        }

        public DataSet GetAllProductInStock(int iStockID, int iYear, int iPeriod)
        {
            String strQuery = String.Format(@"
                                            
                                            SELECT *
                                            FROM
                                            (

                                            --Các sản phẩm không nằm trong Norm
                                            SELECT DISTINCT ICReceiptItems.FK_ICProductID AS ProductID,
                                            0 AS Ordr
                                            FROM dbo.ICReceiptItems, ICReceipts
                                            WHERE dbo.ICReceiptItems.AAStatus = 'Alive'
                                            AND ICReceipts.AAStatus = 'Alive'
                                            AND ICReceiptItems.FK_ICReceiptID = ICReceipts.ICReceiptID
                                            AND ICReceiptItems.FK_ICProductID  NOT IN (SELECT FK_ICProductID FROM dbo.PPNorms WHERE AAStatus = 'ALive')
                                            AND ICReceiptItems.FK_ICStockID = {0}
                                            AND Month(ICReceipts.ICReceiptDate) = {1}
                                            AND Year(ICReceipts.ICReceiptDate) = {2}
                                            UNION ALL
                                            SELECT DISTINCT ICReceiptItems.FK_ICProductID AS ProductID,
                                            0 AS Ordr
                                            FROM dbo.ICReceiptItems, PPProductionOrdrs
                                            WHERE dbo.ICReceiptItems.AAStatus = 'Alive'
                                            AND PPProductionOrdrs.AAStatus = 'Alive'
                                            AND ICReceiptItems.FK_PPProductionOrdrID = PPProductionOrdrs.PPProductionOrdrID
                                            AND ICReceiptItems.FK_ICProductID  NOT IN (SELECT FK_ICProductID FROM dbo.PPNorms WHERE AAStatus = 'ALive')
                                            AND ICReceiptItems.FK_ICStockID = {0}
                                            AND Month(PPProductionOrdrs.PPProductionOrdrDate) = {1}
                                            AND Year(PPProductionOrdrs.PPProductionOrdrDate) = {2}

                                            UNION ALL

                                            SELECT DISTINCT ICTRansferItems.FK_ICProductID AS ProductID,
                                            0 AS Ordr
                                            FROM dbo.ICTRansferItems, ICTRansfers
                                            WHERE dbo.ICTRansferItems.AAStatus = 'Alive'
                                            AND ICTRansfers.AAStatus = 'Alive'
                                            AND ICTRansferItems.FK_ICTransferID = ICTRansfers.ICTRansferID
                                            AND ICTRansferItems.FK_ICProductID  NOT IN (SELECT FK_ICProductID FROM dbo.PPNorms WHERE AAStatus = 'ALive')
                                            AND ICTRansferItems.FK_ICToStockID = {0}
                                            AND Month(ICTRansfers.ICTRansferDate) = {1}
                                            AND Year(ICTRansfers.ICTRansferDate) = {2}

                                            UNION ALL


                                            --Các sản phẩm nằm trong Norm
                                            SELECT DISTINCT ICReceiptItems.FK_ICProductID AS ProductID,
                                            1 AS Ordr
                                            FROM dbo.ICReceiptItems, ICReceipts
                                            WHERE dbo.ICReceiptItems.AAStatus = 'Alive'
                                            AND ICReceipts.AAStatus = 'Alive'
                                            AND ICReceiptItems.FK_ICReceiptID = ICReceipts.ICReceiptID
                                            AND ICReceiptItems.FK_ICProductID  IN (SELECT FK_ICProductID FROM dbo.PPNorms WHERE AAStatus = 'ALive')
                                            AND ICReceiptItems.FK_ICStockID = {0}
                                            AND Month(ICReceipts.ICReceiptDate) = {1}
                                            AND Year(ICReceipts.ICReceiptDate) = {2}
                                            UNION ALL
                                            SELECT DISTINCT ICReceiptItems.FK_ICProductID AS ProductID,
                                            1 AS Ordr
                                            FROM dbo.ICReceiptItems, PPProductionOrdrs
                                            WHERE dbo.ICReceiptItems.AAStatus = 'Alive'
                                            AND PPProductionOrdrs.AAStatus = 'Alive'
                                            AND ICReceiptItems.FK_PPProductionOrdrID = PPProductionOrdrs.PPProductionOrdrID
                                            AND ICReceiptItems.FK_ICProductID IN (SELECT FK_ICProductID FROM dbo.PPNorms WHERE AAStatus = 'ALive')
                                            AND ICReceiptItems.FK_ICStockID = {0}
                                            AND Month(PPProductionOrdrs.PPProductionOrdrDate) = {1}
                                            AND Year(PPProductionOrdrs.PPProductionOrdrDate) = {2}
                                            UNION ALL
                                            SELECT DISTINCT ICTRansferItems.FK_ICProductID AS ProductID,
                                            0 AS Ordr
                                            FROM dbo.ICTRansferItems, ICTRansfers
                                            WHERE dbo.ICTRansferItems.AAStatus = 'Alive'
                                            AND ICTRansfers.AAStatus = 'Alive'
                                            AND ICTRansferItems.FK_ICTransferID = ICTRansfers.ICTRansferID
                                            AND ICTRansferItems.FK_ICProductID IN (SELECT FK_ICProductID FROM dbo.PPNorms WHERE AAStatus = 'ALive')
                                            AND ICTRansferItems.FK_ICToStockID = {0}
                                            AND Month(ICTRansfers.ICTRansferDate) = {1}
                                            AND Year(ICTRansfers.ICTRansferDate) = {2}

                                            ) AS TEMP
                                            ORDER BY Ordr

                                            ", iStockID, iPeriod, iYear);

            return GetDataSet(strQuery);
        }

        public DataSet GetAllStockIDHasTransactionInPeriod(int iProductID, int iYear, int iPeriod)
        {
            String strQuery = String.Format(@"
                                            SELECT DISTINCT ICReceiptItems.FK_ICStockID AS StockID
                                                FROM dbo.ICReceiptItems, dbo.ICReceipts
                                                WHERE ICReceiptItems.AAStatus = 'Alive'
                                                AND ICReceipts.AAStatus = 'ALive'
                                                AND ICReceiptItems.FK_ICReceiptID = ICReceipts.ICReceiptID
                                                AND MONTH(ICReceiptDate) = {0}
                                                AND YEAR(ICReceiptDate) = {1}
                                                AND ICReceiptItems.FK_ICProductID = {2}
                                                UNION ALL
                                                SELECT DISTINCT ICReceiptItems.FK_ICStockID AS StockID
                                                FROM dbo.ICReceiptItems, dbo.PPProductionOrdrs
                                                WHERE ICReceiptItems.AAStatus = 'Alive'
                                                AND PPProductionOrdrs.AAStatus = 'ALive'
                                                AND ICReceiptItems.FK_PPProductionOrdrID = PPProductionOrdrs.PPProductionOrdrID
                                                AND MONTH(PPProductionOrdrDate) = {0}
                                                AND YEAR(PPProductionOrdrDate) = {1}
                                                AND ICReceiptItems.FK_ICProductID = {2}

                                                UNION ALL

                                                SELECT DISTINCT ICShipmentItems.FK_ICStockID AS StockID
                                                FROM dbo.ICShipmentItems, dbo.ICShipments
                                                WHERE ICShipmentItems.AAStatus = 'Alive'
                                                AND ICShipments.AAStatus = 'ALive'
                                                AND ICShipmentItems.FK_ICShipmentID = ICShipments.ICShipmentID
                                                AND MONTH(ICShipmentDate) = {0}
                                                AND YEAR(ICShipmentDate) = {1} 
                                                AND ICShipmentItems.FK_ICProductID = {2}
                                                UNION ALL
                                                SELECT DISTINCT ICShipmentItems.FK_ICStockID AS StockID
                                                FROM dbo.ICShipmentItems, dbo.PPProductionOrdrs
                                                WHERE ICShipmentItems.AAStatus = 'Alive'
                                                AND PPProductionOrdrs.AAStatus = 'ALive'
                                                AND ICShipmentItems.FK_PPProductionOrdrID = PPProductionOrdrs.PPProductionOrdrID
                                                AND MONTH(PPProductionOrdrDate) = {0}
                                                AND YEAR(PPProductionOrdrDate) = {1}
                                                AND ICShipmentItems.FK_ICProductID = {2}

                                                UNION ALL
                                                SELECT DISTINCT dbo.ICTransferItems.FK_ICFromStockID AS StockID
                                                FROM dbo.ICTransferItems, dbo.ICTransfers
                                                WHERE ICTransferItems.AAStatus = 'Alive'
                                                AND ICTransfers.AAStatus = 'ALive'
                                                AND ICTransferItems.FK_ICTransferID = ICTransfers.ICTransferID
                                                AND MONTH(ICTransferDate) = {0}
                                                AND YEAR(ICTransferDate) = {1}
                                                AND ICTransferItems.FK_ICProductID = {2}
                                                UNION ALL
                                                SELECT DISTINCT dbo.ICTransferItems.FK_ICToStockID AS StockID
                                                FROM dbo.ICTransferItems, dbo.ICTransfers
                                                WHERE ICTransferItems.AAStatus = 'Alive'
                                                AND ICTransfers.AAStatus = 'ALive'
                                                AND ICTransferItems.FK_ICTransferID = ICTransfers.ICTransferID
                                                AND MONTH(ICTransferDate) = {0}
                                                AND YEAR(ICTransferDate) = {1}
                                                AND ICTransferItems.FK_ICProductID = {2}", iPeriod, iYear, iProductID);

            return GetDataSet(strQuery);
        }

        public double GetUnitCostByProductAndStockAndPeriod(string strProductNo, string strStockNo, int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"SELECT ICValProductUnitCost 
                                                        FROM dbo.ICVals 
                                                        WHERE FK_ICProductID IN (SELECT ICProductID FROM ICProducts WHERE AAStatus='Alive' AND ICProductNo='{0}')
                                                            AND dbo.ICVals.FK_ICStockID IN (SELECT ICStockID FROM ICStocks WHERE AAStatus='Alive' AND ICStockNo='{1}')
                                                            AND ICPeriod={2} AND ICYear={3}", strProductNo, strStockNo, iPeriod, iYear);
            DataSet ds = GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0
                    && ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                try
                {
                    return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
                }
                catch (Exception ex)
                {
                    return 0;
                }
            }

            return 0;
        }

        public DataSet LayTatCaValSaiLechCuoiKy(int iStockID, int iProductID, int iYear, int iPeriod)
        {
            String str = String.Format(@"   SELECT * FROM dbo.ICVals
                                            WHERE ICYear = {0} AND ICPeriod = {1}
                                            AND (FK_ICProductID = {2} OR {2} = 0)
                                            AND (FK_ICStockID = {3} OR {3} = 0)
                                            AND ICValEndQty = 0
                                            AND ICValProductCostAmtTot <> 0", iYear, iPeriod, iProductID, iStockID);
            return dal.GetDataSet(str);
        }

        public ICValsInfo GetVal(int iStockID, int iProductID, int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"  SELECT * FROM dbo.ICVals
                                                WHERE ICVals.FK_ICProductID = {0}
                                                AND ICVals.FK_ICStockID = {1}
                                                AND ICYear = {2}
                                                AND ICPeriod = {3}", iProductID, iStockID, iYear, iPeriod);

            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (ICValsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            return null;
        }

        public DataSet GetAllICValByStockANDProductANDDate(int iStockID, int iProductID, int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"  SELECT * FROM dbo.ICVals
                                                WHERE (FK_ICProductID = {0} OR {0} = 0)
                                                AND (FK_ICStockID = {1} OR {1} = 0)
                                                AND ICYear = {2}
                                                AND ICPeriod = {3}", iProductID, iStockID, iYear, iPeriod);

            return dal.GetDataSet(strQuery);
        }

        #region Giá Thành Mới --Vinh
        public void DeleteValuationInPeriod(int iPeriod, int iYear)
        {
            DataSet ds = dal.GetDataSet("ICVals_DeleteByPeriod_Year", iPeriod, iYear);
        }

        //        public DataSet GetAllProductIDInPeriod(int iPeriod, int iYear, int iPPCostCenterID)
        //        {
        //            String strQuery = String.Format(@"
        //                                            SELECT DISTINCT ICReceiptItems.FK_ICProductID AS ICProductID
        //                                            FROM dbo.ICReceiptItems
        //											INNER JOIN dbo.ICReceipts ON ICReceipts.ICReceiptID = ICReceiptItems.FK_ICReceiptID
        //                                            WHERE ICReceiptItems.AAStatus = 'Alive'
        //                                            AND ICReceipts.AAStatus = 'Alive'
        //                                            AND (ICReceiptItems.FK_PPCostCenterID = {2} OR {2} = 0)
        //                                            AND MONTH(ICReceiptDate) = {0}
        //                                            AND Year(ICReceiptDate) = {1}
        //                                            UNION
        //                                            SELECT DISTINCT ICReceiptItems.FK_ICProductID AS ICProductID
        //                                            FROM dbo.ICReceiptItems 
        //											INNER JOIN dbo.PPProductionOrdrs ON PPProductionOrdrs.PPProductionOrdrID = ICReceiptItems.FK_PPProductionOrdrID
        //                                            WHERE ICReceiptItems.AAStatus = 'Alive'
        //                                            AND PPProductionOrdrs.AAStatus = 'Alive'
        //                                            AND (ICReceiptItems.FK_PPCostCenterID = {2} OR {2} = 0)
        //                                            AND MONTH(PPProductionOrdrDate) = {0}
        //                                            AND Year(PPProductionOrdrDate) = {1}
        //                                            UNION
        //                                            SELECT DISTINCT ICShipmentItems.FK_ICProductID AS ICProductID
        //                                            FROM dbo.ICShipmentItems
        //											INNER JOIN dbo.PPProductionOrdrs ON PPProductionOrdrs.PPProductionOrdrID = ICShipmentItems.FK_PPProductionOrdrID
        //                                            WHERE ICShipmentItems.AAStatus = 'Alive'
        //                                            AND PPProductionOrdrs.AAStatus = 'Alive'
        //                                            AND (ICShipmentItems.FK_PPCostCenterID = {2} OR {2} = 0)
        //                                            AND MONTH(PPProductionOrdrDate) = {0}
        //                                            AND Year(PPProductionOrdrDate) = {1}
        //                                            UNION
        //                                            SELECT DISTINCT ICShipmentItems.FK_ICProductID AS ICProductID
        //                                            FROM dbo.ICShipmentItems
        //											INNER JOIN dbo.ICShipments ON ICShipments.ICShipmentID = ICShipmentItems.FK_ICShipmentID
        //                                            WHERE ICShipmentItems.AAStatus = 'Alive'
        //                                            AND ICShipments.AAStatus = 'Alive'
        //                                            AND (ICShipmentItems.FK_PPCostCenterID = {2} OR {2} = 0)
        //                                            AND MONTH(ICShipmentDate) = {0}
        //                                            AND Year(ICShipmentDate) = {1}
        //                                            UNION
        //                                            SELECT DISTINCT ICTransferItems.FK_ICProductID AS ICProductID
        //                                            FROM dbo.ICTransferItems
        //											INNER JOIN dbo.ICTransfers ON ICTransfers.ICTransferID = ICTransferItems.FK_ICTransferID
        //                                            WHERE ICTransferItems.AAStatus = 'Alive'
        //                                            AND ICTransfers.AAStatus = 'Alive'
        //                                            AND (ICTransferItems.FK_PPCostCenterID = {2} OR {2} = 0)
        //                                            AND MONTH(ICTransferDate) = {0}
        //                                            AND Year(ICTransferDate) = {1}
        //                                            UNION
        //                                            SELECT DISTINCT ICAdjInvItems.FK_ICProductID AS ICProductID
        //                                            FROM dbo.ICAdjInvItems
        //											INNER JOIN  dbo.ICAdjInvs ON ICAdjInvs.ICAdjInvID = ICAdjInvItems.FK_ICAdjInvID
        //                                            WHERE ICAdjInvItems.AAStatus = 'Alive'
        //                                            AND ICAdjInvs.AAStatus = 'Alive'                          
        //                                            AND (ICAdjInvItems.FK_PPCostCenterID = {2} OR {2} = 0)                  
        //                                            AND MONTH(ICAdjInvDate) = {0}
        //                                            AND Year(ICAdjInvDate) = {1}", iPeriod, iYear, iPPCostCenterID);

        //            return GetDataSet(strQuery);
        //        }

        public ICValsInfo GetPreValuation(int iICProductID, int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"SELECT TOP(1) *
                                                FROM dbo.ICVals
                                                WHERE ICVals.FK_ICProductID = {0}
                                                AND ICYear * 12 + ICPeriod = ({1}*12 + {2} - 1)"
                                             , iICProductID, iYear, iPeriod);

            DataSet ds = GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (ICValsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);

            return null;
        }

        public DataSet GetAllPreValuation(int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"SELECT * FROM dbo.ICVals
                                                WHERE ICYear * 12 + ICPeriod = ({0}*12 + {1} - 1)"
                                             , iYear, iPeriod);

            return GetDataSet(strQuery);
        }

        public ICValsInfo GetValInPeriod(int iICProductID, int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"
                                            SELECT TOP(1) *
                                            FROM dbo.ICVals
                                            WHERE 
                                            FK_ICProductID = {0}
                                            AND ICYear * 12 + ICPeriod = {1}*12 + {2}"
                                            , iICProductID, iYear, iPeriod);

            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (ICValsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);

            return null;
        }

        public ICValsInfo GetValOldest(int iICProductID)
        {
            String strQuery = String.Format(@"
                                            SELECT TOP(1) *
                                            FROM dbo.ICVals
                                            WHERE 
                                            FK_ICProductID = {0}
                                            ORDER BY ICYear * 12 + ICPeriod ASC"
                                            , iICProductID);

            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (ICValsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);

            return null;
        }

        public DataSet GetAllDataByPeriodAndYear(int iPeriod, int iYear)
        {
            string strQuery = string.Format(@"  SELECT * FROM ICVals 
                                                WHERE ICPeriod={0} 
                                                AND ICYear={1}"
                                                , iPeriod, iYear);

            return dal.GetDataSet(strQuery);
        }
        public void DeleteVal(int iICProductID, int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"DELETE ICVals WHERE ICPeriod = {0} AND ICYear = {1} AND FK_ICProductID = {2}", iPeriod, iYear, iICProductID);
            GetDataSet(strQuery);
        }

        #region Lấy số lượng và giá vốn nhập kho chung --Vinh

        public void DeleteValuationInPeriod(int iICProductID, int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"DELETE ICVals WHERE ICPeriod = {0} AND ICYear = {1} AND FK_ICProductID = {2}"
                , iPeriod, iYear, iICProductID);
            dal.GetDataSet(strQuery);
        }
        public DataSet LaySoLuongVaGiaVonNhap(int iICProductID, int iYear, int iPeriod, String strAdjInvTypeIncQty, String strAdjInvTypeIncPrice, Boolean isGiaVonXuat = false)
        {
            //Lấy các phiếu Nhập kho (Receipt không có ProductionOrdr), Điều chỉnh tăng số lượng và số tiền (IncAdjInv)
            String str = String.Format(@"SELECT SUM(Qty) AS Qty, SUM(CostTot) AS CostTot, SUM(FCostTot) AS FCostTot FROM
                                        (
                                            {0}
                                            UNION ALL
                                            {1}
                                            UNION ALL
                                            {2}
                                            UNION ALL
                                            {3}
                                            UNION ALL
                                            {4}
                                        ) AS TB
                                        ",
                                        ReceiptItemGetSumQtyAndCostTotByProductIDAndPeriodAndYear(iICProductID, iPeriod, iYear, isGiaVonXuat),
                                        AdjInvItemGetSumQtyAndCostTotByProductIDAndPeriodAndYear(iICProductID, iPeriod, iYear, strAdjInvTypeIncQty),
                                        AdjInvItemGetSumQtyAndCostTotByProductIDAndPeriodAndYear(iICProductID, iPeriod, iYear, strAdjInvTypeIncPrice),
                                        AdjInvItemGetSumQtyAndCostTotByProductIDAndPeriodAndYear(iICProductID, iPeriod, iYear,
"DecQty"),

AdjInvItemGetSumQtyAndCostTotByProductIDAndPeriodAndYear(iICProductID, iPeriod, iYear,
"DecPrice"));
            return dal.GetDataSet(str);
        }
        //(LINHCLH - 21/12/2015 - 
        public DataSet LaySoLuongVaGiaVonDieuChinhKhongThamGiaTinhGiaVon(int iICProductID, int iYear, int iPeriod, String strAdjInvTypeIncQty, String strAdjInvTypeIncPrice)
        {
            String str = String.Format(@"SELECT SUM(Qty) AS Qty, SUM(CostTot) AS CostTot FROM
                                        (
                                            {0}
                                            UNION ALL
                                            {1}
                                            UNION ALL
                                            {2}
                                            UNION ALL
                                            {3}
                                        ) AS TB
                                        ",
AdjInvItemGetSumQtyAndCostTotByProductIDAndPeriodAndYear(iICProductID, iPeriod, iYear, strAdjInvTypeIncQty, 0),
                                        AdjInvItemGetSumQtyAndCostTotByProductIDAndPeriodAndYear(iICProductID, iPeriod, iYear, strAdjInvTypeIncPrice, 0),
                                        AdjInvItemGetSumQtyAndCostTotByProductIDAndPeriodAndYear(iICProductID, iPeriod, iYear, "DecQty", 0),
                                        AdjInvItemGetSumQtyAndCostTotByProductIDAndPeriodAndYear(iICProductID, iPeriod, iYear, "DecPrice", 0));
            return dal.GetDataSet(str);
        }

        public String ReceiptItemGetSumQtyAndCostTotByProductIDAndPeriodAndYear(int iICProductID, int iPeriod, int iYear, Boolean isGiaVonXuat)
        {
            String strGiaVonXuat = "";
            //Nếu là giá vốn xuất thì phải loại bỏ các phiêu nhập NVL thừa
            if (isGiaVonXuat) strGiaVonXuat = " AND AAModule <> 'RMReceipt'";

            String strQuery = String.Format(@"SELECT  ISNULL(SUM(ICReceiptItemQty),0) as Qty, ISNULL(SUM(ICReceiptItemCostTot), 0) as CostTot 
                                                    , ISNULL(SUM(ICReceiptItemFCostTot), 0) as FCostTot 
                                                FROM    dbo.ICReceiptItems
                                                        INNER JOIN dbo.PPProductionCostCenterActives ON ( PPProductionCostCenterActives.FK_PPCostCenterID = ICReceiptItems.FK_PPCostCenterID
                                                                                                          AND PPYear = {0}
                                                                                                          AND PPPeriod = {1}
                                                                                                        )
                                                WHERE   AAStatus = 'Alive'
                                                        AND FK_ICProductID = {2}
                                                        AND ( FK_ICReceiptID IN ( SELECT    ICReceiptID
                                                                                  FROM      dbo.ICReceipts
                                                                                  WHERE     AAStatus = 'Alive'
                                                                                            AND YEAR(ICReceiptDate) = {0}
                                                                                            AND MONTH(ICReceiptDate) = {1}  {3})
                                                              OR FK_PPProductionOrdrID IN (
                                                              SELECT    PPProductionOrdrID
                                                              FROM      dbo.PPProductionOrdrs
                                                              WHERE     AAStatus = 'Alive'
                                                                        AND YEAR(PPProductionOrdrDate) = {0}
                                                                        AND MONTH(PPProductionOrdrDate) = {1} )
                                                            )

                                                UNION ALL

                                                SELECT  ISNULL(SUM(ICReceiptItemQty),0) as Qty, ISNULL(SUM(ICReceiptItemCostTot), 0) as CostTot 
                                                    , ISNULL(SUM(ICReceiptItemFCostTot), 0) as FCostTot 
                                                FROM    dbo.ICReceiptItems                                                        
                                                WHERE   AAStatus = 'Alive'
                                                        AND FK_ICProductID = {2}
                                                        AND FK_PPCostCenterID = 0
                                                        AND ( FK_ICReceiptID IN ( SELECT    ICReceiptID
                                                                                  FROM      dbo.ICReceipts
                                                                                  WHERE     AAStatus = 'Alive'
                                                                                            AND YEAR(ICReceiptDate) = {0}
                                                                                            AND MONTH(ICReceiptDate) = {1} {3})
                                                              OR FK_PPProductionOrdrID IN (
                                                              SELECT    PPProductionOrdrID
                                                              FROM      dbo.PPProductionOrdrs
                                                              WHERE     AAStatus = 'Alive'
                                                                        AND YEAR(PPProductionOrdrDate) = {0}
                                                                        AND MONTH(PPProductionOrdrDate) = {1} )
                                                            )"
                                                , iYear, iPeriod, iICProductID, strGiaVonXuat);

            return strQuery;
        }

        public String AdjInvItemGetSumQtyAndCostTotByProductIDAndPeriodAndYear(int iICProductID, int iPeriod, int iYear, String strAdjInvType, int CalcCostCheck = 1)
        {
            String strQuery = String.Format(@"  SELECT ISNULL({5}SUM(ICAdjInvItemQty), 0) as Qty, 
                                                ISNULL({5}SUM(ICAdjInvItemCostTot), 0) as CostTot 
                                                ,ISNULL({5}SUM(ICAdjInvItemFCostTot), 0) as FCostTot 
                                                FROM    dbo.ICAdjInvItems
                                                        INNER JOIN dbo.PPProductionCostCenterActives ON ( PPProductionCostCenterActives.FK_PPCostCenterID = ICAdjInvItems.FK_PPCostCenterID
                                                                                                          AND PPYear = {0}
                                                                                                          AND PPPeriod = {1}
                                                                                                        )
                                                WHERE   AAStatus = 'Alive'
                                                        AND FK_ICProductID = {2}
                                                        AND ICAdjInvItemTypeCombo = '{3}'
                                                        AND FK_ICAdjInvID IN ( SELECT   ICAdjInvID
                                                                               FROM     dbo.ICAdjInvs
                                                                               WHERE    AAStatus = 'Alive'
                                                                                        AND YEAR(ICAdjInvDate) = {0}
                                                                                        AND MONTH(ICAdjInvDate) = {1} 
AND ICAdjInvCalcCostCheck = {4})

                                                UNION ALL

                                                SELECT ISNULL({5}SUM(ICAdjInvItemQty), 0) as Qty, 
                                                ISNULL({5}SUM(ICAdjInvItemCostTot), 0) as CostTot 
                                                ,ISNULL({5}SUM(ICAdjInvItemFCostTot), 0) as FCostTot 
                                                FROM    dbo.ICAdjInvItems                                                        
                                                WHERE   AAStatus = 'Alive'
                                                        AND FK_ICProductID = {2}
                                                        AND FK_PPCostCenterID = 0
                                                        AND ICAdjInvItemTypeCombo = '{3}'
                                                        AND FK_ICAdjInvID IN ( SELECT   ICAdjInvID
                                                                               FROM     dbo.ICAdjInvs
                                                                               WHERE    AAStatus = 'Alive'
                                                                                        AND YEAR(ICAdjInvDate) = {0}
                                                                                        AND MONTH(ICAdjInvDate) = {1} 
AND ICAdjInvCalcCostCheck = {4})
"
                , iYear, iPeriod, iICProductID, strAdjInvType, CalcCostCheck, strAdjInvType.StartsWith("Dec") ? "-" : "");

            return strQuery;
        }
        public DataSet LayTongNhapTrongKyLan1(int iICProductID, int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"
            IF ( OBJECT_ID('tempdb..#ReceiptNotUse') IS NOT NULL )
                DROP TABLE #ReceiptNotUse;

            IF ( OBJECT_ID('tempdb..#ProductionOrderNotUse') IS NOT NULL )
                DROP TABLE #ProductionOrderNotUse;

            --Loai Tru Cac Phieu nhap NVL Thua + NK tra hang cua phieu xuat kho cua thang đo
            SELECT  *
            INTO    #ReceiptNotUse
            FROM    (
                    --Nhan hang thua tu gia cong va CP gia cong
                      SELECT    ICReceiptID
                      FROM      dbo.ICReceipts
                      WHERE     AAStatus = 'Alive'
                                AND YEAR(ICReceiptDate) * 12 + MONTH(ICReceiptDate) = {0}
                                AND AAModule IN ('IncInvFromTransferOS','PurchaseCostOS')
                      UNION
                    --Chenh lech HDDV Gia cong
                      SELECT    a.ICReceiptID
                      FROM      dbo.ICReceipts a
                            INNER JOIN APPInvoiceReceipts b ON b.FK_ICReceiptID = a.ICReceiptID AND b.AAStatus = 'Alive'
                            INNER JOIN APPInvoices c ON b.FK_APPInvoiceID = c.APPInvoiceID AND c.AAStatus = 'Alive' AND APCostAllocateType = 'ToTransfer'
                      WHERE     a.AAStatus = 'Alive'
                                AND YEAR(ICReceiptDate) * 12 + MONTH(ICReceiptDate) = {0}
                                AND a.AAModule IN ('ServicePInvoice')
                      UNION
		            --Nhap kho NVL Thua
                      SELECT    ICReceiptID
                      FROM      dbo.ICReceipts
                      WHERE     AAStatus = 'Alive'
                                AND YEAR(ICReceiptDate) * 12 + MONTH(ICReceiptDate) = {0}
                                AND AAModule IN ('RMReceipt', 'FGReceipt')
                      UNION
		            --Nhap kho tra hang trong thang
                      SELECT    ICReceipts.ICReceiptID
                      FROM      dbo.ICReceiptItems
                                INNER JOIN dbo.ICReceipts ON ( ICReceipts.ICReceiptID = ICReceiptItems.FK_ICReceiptID
                                                               AND ICReceipts.AAStatus = ICReceiptItems.AAStatus
                                                               AND ICReceipts.AAStatus = 'Alive'
                                                             )
                      WHERE     ICReceipts.AAModule IN ( 'SaleReturnReceiptFromSO', 'SaleReturnReceipt' )
                                AND ( YEAR(ICReceipts.ICReceiptDate) * 12 + MONTH(ICReceipts.ICReceiptDate)) = {0}
                    ) AS TB;

            --Loai Tru Cac chuyen ma cua thang đo
            --SELECT  *
            --INTO    #ProductionOrderNotUse
            --FROM    ( SELECT    PPProductionOrdrs.PPProductionOrdrID
            --          FROM      dbo.ICReceiptItems
            --                    INNER JOIN dbo.PPProductionOrdrs ON ( PPProductionOrdrs.PPProductionOrdrID = ICReceiptItems.FK_PPProductionOrdrID
            --                                                          AND PPProductionOrdrs.AAStatus = ICReceiptItems.AAStatus
            --                                                          AND PPProductionOrdrs.AAStatus = 'Alive'
            --                                                          AND YEAR(PPProductionOrdrs.PPProductionOrdrDate) * 12 + MONTH(PPProductionOrdrs.PPProductionOrdrDate) = {0}
            --                                                        )
            --          WHERE     PPProductionOrdrTypeCombo = 'ConvertProduct'
            --        ) AS TBB;

            SELECT  ISNULL(SUM(Qty), 0) AS Qty ,
                    ISNULL(SUM(CostTot), 0) AS CostTot,
                    ISNULL(SUM(FCostTot), 0) AS FCostTot
            FROM    (

            --Lay Tong Cong Tu Nhap Kho
                      SELECT    ISNULL(SUM(ICReceiptItemStkQty), 0) AS Qty ,
                                ISNULL(SUM(ICReceiptItemCostTot), 0) AS CostTot,
                                ISNULL(SUM(ICReceiptItemFCostTot), 0) AS FCostTot
                      FROM      dbo.ICReceiptItems
                                INNER JOIN dbo.ICReceipts Rcp ON ( Rcp.ICReceiptID = ICReceiptItems.FK_ICReceiptID
                                                                   AND Rcp.AAStatus = ICReceiptItems.AAStatus
                                                                   AND Rcp.AAStatus = 'Alive'
                                                                   AND YEAR(Rcp.ICReceiptDate) * 12 + MONTH(Rcp.ICReceiptDate) = {0}
                                                                 )
                      WHERE     FK_ICProductID = {1}
                                AND  Rcp.ICReceiptID NOT IN ( SELECT #ReceiptNotUse.ICReceiptID FROM #ReceiptNotUse)


            --Lay Tong Cong Tu Ket Qua San Xuat
                      --UNION ALL
                      --SELECT    ISNULL(SUM(ICReceiptItemStkQty), 0) AS Qty ,
                      --          ISNULL(SUM(ICReceiptItemCostTot), 0) AS CostTot,
                      --          ISNULL(SUM(ICReceiptItemFCostTot), 0) AS FCostTot
                      --FROM      dbo.ICReceiptItems
                      --          INNER JOIN dbo.PPProductionOrdrs ProductionOrder ON ( ProductionOrder.PPProductionOrdrID = ICReceiptItems.FK_PPProductionOrdrID
                      --                                                    AND ProductionOrder.AAStatus = ICReceiptItems.AAStatus
                      --                                                    AND ProductionOrder.AAStatus = 'Alive'
                      --                                                    AND YEAR(ProductionOrder.PPProductionOrdrDate) * 12 + MONTH(ProductionOrder.PPProductionOrdrDate) = {0}
                      --                                                    )
                      --WHERE     FK_ICProductID = {1}
                      --          AND  ProductionOrder.PPProductionOrdrID NOT IN ( SELECT #ProductionOrderNotUse.PPProductionOrdrID FROM #ProductionOrderNotUse)


            --Tru phan xuat tra hang NCC
                      UNION ALL
                      SELECT    ISNULL(-SUM(ICShipmentItemStkQty), 0) AS Qty ,
                                ISNULL(-SUM(ICShipmentItemCostTot), 0) AS CostTot,
                                ISNULL(-SUM(ICShipmentItemFCostTot), 0) AS FCostTot
                      FROM      dbo.ICShipmentItems
                      WHERE     AAStatus = 'Alive'
                                AND FK_ICProductID = {1}
                                AND FK_ICShipmentID IN (
                                SELECT  ICShipmentID
                                FROM    dbo.ICShipments
                                WHERE   AAStatus = 'Alive'
                                        AND AAModule IN ( 'PurchaseReceiptShipment',
                                                          'PurchaseReturnShipment' )
                                        AND YEAR(ICShipmentDate) * 12 + MONTH(ICShipmentDate) = {0} )
            --Tru phan Nhận hàng thiếu từ đơn hàng 
                    UNION ALL
                    SELECT    ISNULL(-SUM(ICShipmentItemStkQty), 0) AS Qty ,
                              ISNULL(-SUM(ICShipmentItemCostTot), 0) AS CostTot,
                              ISNULL(-SUM(ICShipmentItemFCostTot), 0) AS FCostTot
                    FROM      dbo.ICShipmentItems
                    WHERE     AAStatus = 'Alive'
                              AND FK_ICProductID = {1}
                              AND FK_ICShipmentID IN (
                              SELECT  ICShipmentID
                              FROM    dbo.ICShipments
                              WHERE   AAStatus = 'Alive'
                                      AND LEFT(AAModule,12) = 'DecInvFromPO'
                                      AND YEAR(ICShipmentDate) * 12 + MONTH(ICShipmentDate) = {0} )
                    ) AS TBBB;
                    "
                    , iYear * 12 + iPeriod, iICProductID);
            return dal.GetDataSet(strQuery);
        }

        public DataSet LayTongNhapTrongKyLan2(int iICProductID, int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"
            IF ( OBJECT_ID('tempdb..#ReceiptNotUse') IS NOT NULL )
                DROP TABLE #ReceiptNotUse;

            --Loai Tru Cac Phieu nhap NVL Thua + NK tra hang cua phieu xuat kho cua thang đo
            SELECT  *
            INTO    #ReceiptNotUse
            FROM    (
                      --
		              --Nhap kho tra hang tu SaleReturn
                      SELECT    ICReceipts.ICReceiptID
                      FROM      dbo.ICReceiptItems
                                INNER JOIN dbo.ICReceipts ON ( ICReceipts.ICReceiptID = ICReceiptItems.FK_ICReceiptID
                                                               AND ICReceipts.AAStatus = ICReceiptItems.AAStatus
                                                               AND ICReceipts.AAStatus = 'Alive'
                                                             )
                                INNER JOIN dbo.ICReceiptItemSaleReturnItems ON ( ICReceiptItemSaleReturnItems.FK_ICReceiptItemID = ICReceiptItems.ICReceiptItemID
                                                                          AND ICReceiptItemSaleReturnItems.AAStatus = ICReceiptItems.AAStatus
                                                                          )
                                INNER JOIN dbo.ARSaleReturnItems ON ( ARSaleReturnItems.ARSaleReturnItemID = ICReceiptItemSaleReturnItems.FK_ARSaleReturnItemID
                                                                      AND ARSaleReturnItems.AAStatus = ICReceiptItemSaleReturnItems.AAStatus
                                                                    )
                                INNER JOIN dbo.ARSaleReturns ON ( ARSaleReturns.ARSaleReturnID = ARSaleReturnItems.FK_ARSaleReturnID
                                                                  AND ARSaleReturns.AAStatus = ARSaleReturnItems.AAStatus
                                                                )
                      WHERE     ICReceipts.AAModule IN ( 'SaleReturnReceiptFromSO', 'SaleReturnReceipt' )
                                AND YEAR(ICReceipts.ICReceiptDate) * 12 + MONTH(ICReceipts.ICReceiptDate) = {0}
                                AND ARSaleReturnItems.ARSaleReturnItemID IN (
					            --SaleReturn tao tu Shipment
                                SELECT  ARSaleReturnItemShipmentItems.FK_ARSaleReturnItemID
                                FROM    dbo.ARSaleReturnItemShipmentItems
                                        INNER JOIN dbo.ICShipmentItems ON ( ICShipmentItems.ICShipmentItemID = ARSaleReturnItemShipmentItems.FK_ICShipmentItemID
                                                                          AND ICShipmentItems.AAStatus = ARSaleReturnItemShipmentItems.AAStatus
                                                                          )
                                        INNER JOIN dbo.ICShipments ON ( ICShipments.ICShipmentID = ICShipmentItems.FK_ICShipmentID
                                                                        AND ICShipments.AAStatus = ICShipmentItems.AAStatus
                                                                      )
                                WHERE   ARSaleReturnItemShipmentItems.FK_ARSaleReturnItemID = ARSaleReturnItems.ARSaleReturnItemID
                                        AND ARSaleReturnItemShipmentItems.AAStatus = ARSaleReturnItems.AAStatus
                                        AND YEAR(ICShipments.ICShipmentDate) * 12 + MONTH(ICShipments.ICShipmentDate) = {0}
                                UNION
					            --SaleReturn tao tu Invoice, Invoice tao tu Shipment
                                SELECT  ARSaleReturnItemInvoiceItems.FK_ARSaleReturnItemID
                                FROM    dbo.ARSaleReturnItemInvoiceItems
                                        INNER JOIN dbo.ARInvoiceItems ON ( ARInvoiceItems.ARInvoiceItemID = ARSaleReturnItemInvoiceItems.FK_ARInvoiceItemID
                                                                            AND ARInvoiceItems.AAStatus = ARSaleReturnItemInvoiceItems.AAStatus
                                                                            AND ARInvoiceItems.AAStatus = 'Alive'
                                                                        )
                                        INNER JOIN dbo.ARInvoices ON ( ARInvoices.ARInvoiceID = ARInvoiceItems.FK_ARInvoiceID
                                                                       AND ARInvoiceItems.AAStatus = ARInvoices.AAStatus
                                                                       AND ARInvoiceItems.AAStatus = 'Alive'
                                                                     )
                                        INNER JOIN dbo.ARInvoiceItemShipmentItems ON ( ARInvoiceItemShipmentItems.FK_ARInvoiceItemID = ARInvoiceItems.ARInvoiceItemID
                                                                          AND ARInvoiceItemShipmentItems.AAStatus = ARInvoiceItems.AAStatus
                                                                          )
                                        INNER JOIN dbo.ICShipmentItems ON ( ICShipmentItems.ICShipmentItemID = ARInvoiceItemShipmentItems.FK_ICShipmentItemID
                                                                          AND ICShipmentItems.AAStatus = ARSaleReturnItemInvoiceItems.AAStatus
                                                                          )
                                        INNER JOIN dbo.ICShipments ON ( ICShipments.ICShipmentID = ICShipmentItems.FK_ICShipmentID
                                                                        AND ICShipments.AAStatus = ICShipmentItems.AAStatus
                                                                      )
                                WHERE   ARSaleReturnItemInvoiceItems.FK_ARSaleReturnItemID = ARSaleReturnItems.ARSaleReturnItemID
                                        AND ARSaleReturnItemInvoiceItems.AAStatus = ARSaleReturnItems.AAStatus
                                        AND YEAR(ICShipments.ICShipmentDate) * 12 + MONTH(ICShipments.ICShipmentDate) = {0}
                                UNION
					            --SaleReturn tao truc tiep khong qua tao tu nao het
                                SELECT  SaleReturnItemTemp.ARSaleReturnItemID AS FK_ARSaleReturnItemID
                                FROM    ARSaleReturnItems SaleReturnItemTemp
                                        INNER JOIN dbo.ARSaleReturns SaleReturnTemp ON ( SaleReturnTemp.ARSaleReturnID = SaleReturnItemTemp.FK_ARSaleReturnID
                                                                          AND SaleReturnTemp.AAStatus = SaleReturnItemTemp.AAStatus
                                                                          AND SaleReturnTemp.AAStatus = 'Alive'
                                                                          )
                                WHERE   SaleReturnItemTemp.ARSaleReturnItemID NOT IN (
                                        SELECT  DISTINCT ARSaleReturnItemInvoiceItems.FK_ARSaleReturnItemID
                                        FROM    dbo.ARSaleReturnItemInvoiceItems
                                        UNION
                                        SELECT  DISTINCT ARSaleReturnItemShipmentItems.FK_ARSaleReturnItemID
                                        FROM    dbo.ARSaleReturnItemShipmentItems )
                                        AND YEAR(SaleReturnTemp.ARSaleReturnDate) * 12 + MONTH(SaleReturnTemp.ARSaleReturnDate) = {0} )
                      /*UNION
		              --Nhap kho tra hang tu Xuat kho (hay tu SO)
                      SELECT    ICReceipts.ICReceiptID
                      FROM      dbo.ICReceiptItems
                                INNER JOIN dbo.ICReceipts ON ( ICReceipts.ICReceiptID = ICReceiptItems.FK_ICReceiptID
                                                               AND ICReceipts.AAStatus = ICReceiptItems.AAStatus
                                                               AND ICReceipts.AAStatus = 'Alive'
                                                             )
                                INNER JOIN dbo.ICReceiptItemShipmentItems ON ( ICReceiptItemShipmentItems.FK_ICReceiptItemID = ICReceiptItems.ICReceiptItemID
                                                                          AND ICReceiptItemShipmentItems.AAStatus = ICReceiptItems.AAStatus
                                                                          )
                                INNER JOIN dbo.ICShipmentItems ON ( ICShipmentItems.ICShipmentItemID = ICReceiptItemShipmentItems.FK_ICShipmentItemID
                                                                    AND ICShipmentItems.AAStatus = ICReceiptItemShipmentItems.AAStatus
                                                                  )
                                INNER JOIN dbo.ICShipments ON ( ICShipments.ICShipmentID = ICShipmentItems.FK_ICShipmentID
                                                                AND ICShipments.AAStatus = ICShipmentItems.AAStatus
                                                              )
                      WHERE     ICReceipts.AAModule IN ( 'SaleReturnReceipt', 'SaleReturnReceiptFromSO' )
                                AND YEAR(ICReceipts.ICReceiptDate) * 12 + MONTH(ICReceipts.ICReceiptDate) = {0}
                                AND YEAR(ICShipments.ICShipmentDate) * 12 + MONTH(ICShipments.ICShipmentDate) = {0}
        */
                    UNION
					--Nhap kho tra hang tao truc tiep khong qua tao tu nao het
                    SELECT  ICReceipts.ICReceiptID
                    FROM    dbo.ICReceiptItems
                            INNER JOIN dbo.ICReceipts ON ( ICReceipts.ICReceiptID = ICReceiptItems.FK_ICReceiptID
                                                         AND ICReceipts.AAStatus = ICReceiptItems.AAStatus
                                                         AND ICReceipts.AAStatus = 'Alive'
                                                       )
                    WHERE   ICReceipts.AAModule IN ( 'SaleReturnReceipt', 'SaleReturnReceiptFromSO' )
                            AND YEAR(ICReceipts.ICReceiptDate) * 12 + MONTH(ICReceipts.ICReceiptDate) = {0}
                            /*AND ICReceiptItems.ICReceiptItemID NOT IN (
                                SELECT  DISTINCT ICReceiptItemShipmentItems.FK_ICReceiptItemID
                                FROM    dbo.ICReceiptItemShipmentItems
                                UNION
                                SELECT  DISTINCT ICReceiptItemSaleReturnItems.FK_ICReceiptItemID
                                FROM    dbo.ICReceiptItemSaleReturnItems )*/
                    ) AS TB;
           
            SELECT  ISNULL(SUM(Qty), 0) AS Qty ,
                    ISNULL(SUM(CostTot), 0) AS CostTot,
                    ISNULL(SUM(FCostTot), 0) AS FCostTot
            FROM    (

                        --Lay Tong Cong Tu Nhap Kho
                      SELECT    ISNULL(SUM(ICReceiptItemStkQty), 0) AS Qty ,
                                ISNULL(SUM(ICReceiptItemCostTot), 0) AS CostTot,
                                ISNULL(SUM(ICReceiptItemFCostTot), 0) AS FCostTot
                      FROM      dbo.ICReceiptItems
                                INNER JOIN dbo.ICReceipts Rcp ON ( Rcp.ICReceiptID = ICReceiptItems.FK_ICReceiptID
                                                                   AND Rcp.AAStatus = ICReceiptItems.AAStatus
                                                                   AND Rcp.AAStatus = 'Alive'
                                                                   AND YEAR(Rcp.ICReceiptDate) * 12 + MONTH(Rcp.ICReceiptDate) = {0} 
                                                                 )
                      WHERE     FK_ICProductID = {1} 
                                AND  Rcp.ICReceiptID NOT IN ( SELECT #ReceiptNotUse.ICReceiptID FROM #ReceiptNotUse)
                      UNION ALL

                        --Lay Tong Cong Tu Ket Qua Giao Viec
                      SELECT    ISNULL(SUM(ICReceiptItemStkQty), 0) AS Qty ,
                                ISNULL(SUM(ICReceiptItemCostTot), 0) AS CostTot,
                                ISNULL(SUM(ICReceiptItemFCostTot), 0) AS FCostTot
                      FROM      dbo.ICReceiptItems
                                INNER JOIN dbo.PPProductionOrdrs ProductionOrder ON ( ProductionOrder.PPProductionOrdrID = ICReceiptItems.FK_PPProductionOrdrID
                                                                          AND ProductionOrder.AAStatus = ICReceiptItems.AAStatus
                                                                          AND ProductionOrder.AAStatus = 'Alive'
                                                                          AND YEAR(ProductionOrder.PPProductionOrdrDate) * 12 + MONTH(ProductionOrder.PPProductionOrdrDate) = {0} 
                                                                          AND ProductionOrder.PPProductionOrdrTypeCombo = 'ConvertProduct'
                                                                          )
                      WHERE     FK_ICProductID = {1} 

                      UNION ALL

                        --Tru di Tong Cong So Luong Chuyen Ma Xuat
                      SELECT    ISNULL(-SUM(ICShipmentItemStkQty), 0) AS Qty ,
                                ISNULL(-SUM(ICShipmentItemCostTot), 0) AS CostTot,
                                ISNULL(-SUM(ICShipmentItemFCostTot), 0) AS FCostTot
                      FROM      dbo.ICShipmentItems
                                INNER JOIN dbo.PPProductionOrdrs ProductionOrder ON ( ProductionOrder.PPProductionOrdrID = ICShipmentItems.FK_PPProductionOrdrID
                                                                          AND ProductionOrder.AAStatus = ICShipmentItems.AAStatus
                                                                          AND ProductionOrder.AAStatus = 'Alive'
                                                                          AND YEAR(ProductionOrder.PPProductionOrdrDate) * 12 + MONTH(ProductionOrder.PPProductionOrdrDate) = {0} 
                                                                          AND ProductionOrder.PPProductionOrdrTypeCombo = 'ConvertProduct'
                                                                          )
                      WHERE     FK_ICProductID = {1} 

                        --Tru phan xuat tra hang NCC
                      UNION ALL
                      SELECT    ISNULL(-SUM(ICShipmentItemStkQty), 0) AS Qty ,
                                ISNULL(-SUM(ICShipmentItemCostTot), 0) AS CostTot,
                                ISNULL(-SUM(ICShipmentItemFCostTot), 0) AS FCostTot
                      FROM      dbo.ICShipmentItems
                      WHERE     AAStatus = 'Alive'
                                AND FK_ICProductID = {1} 
                                AND FK_ICShipmentID IN (
                                SELECT  ICShipmentID
                                FROM    dbo.ICShipments
                                WHERE   AAStatus = 'Alive'
                                        AND AAModule IN ( 'PurchaseReceiptShipment',
                                                          'PurchaseReturnShipment' )
                                        AND YEAR(ICShipmentDate) * 12 + MONTH(ICShipmentDate) = {0}  )

                    --Tru phan Nhận hàng thiếu từ đơn hàng
                    UNION ALL
                    SELECT    ISNULL(-SUM(ICShipmentItemStkQty), 0) AS Qty ,
                              ISNULL(-SUM(ICShipmentItemCostTot), 0) AS CostTot,
                              ISNULL(-SUM(ICShipmentItemFCostTot), 0) AS FCostTot
                    FROM      dbo.ICShipmentItems
                    WHERE     AAStatus = 'Alive'
                              AND FK_ICProductID = {1}
                              AND FK_ICShipmentID IN (
                              SELECT  ICShipmentID
                              FROM    dbo.ICShipments
                              WHERE   AAStatus = 'Alive'
                                      AND LEFT(AAModule,12) = 'DecInvFromPO'
                                      AND YEAR(ICShipmentDate) * 12 + MONTH(ICShipmentDate) = {0} )
                --Tru phan Nhận hàng thiếu từ gia cong
                    UNION ALL
                    SELECT    ISNULL(-SUM(ICShipmentItemStkQty), 0) AS Qty ,
                              ISNULL(-SUM(ICShipmentItemCostTot), 0) AS CostTot,
                              ISNULL(-SUM(ICShipmentItemFCostTot), 0) AS FCostTot
                    FROM      dbo.ICShipmentItems
                    WHERE     AAStatus = 'Alive'
                              AND FK_ICProductID = {1}
                              AND FK_ICShipmentID IN (
                              SELECT  ICShipmentID
                              FROM    dbo.ICShipments
                              WHERE   AAStatus = 'Alive'
                                      AND AAModule IN ( 'DecInvFromTransferOS')
                                      AND YEAR(ICShipmentDate) * 12 + MONTH(ICShipmentDate) = {0} )
                      --UNION ALL
                      --
		              ----Lay tong van chuyen noi bo
                      --SELECT    ISNULL(SUM(ICTransferItemStkQty), 0) AS Qty ,
                      --          ISNULL(SUM(ICTransferItemCostTot), 0) AS CostTot,
                      --          ISNULL(SUM(ICTransferItemFCostTot), 0) AS FCostTot
                      --FROM      dbo.ICTransferItems
                      --WHERE     AAStatus = 'Alive'
                      --          AND FK_ICProductID = {1} 
                      --          AND FK_ICTransferID IN (
                      --          SELECT  ICTransferID
                      --          FROM    ICTransfers
                      --          WHERE   AAStatus = 'Alive'
                      --                  AND YEAR(ICTransferDate) * 12 + MONTH(ICTransferDate) = {0}  )
                      --UNION ALL
		              ----Lay tong di dieu chinh giam
                      --SELECT    ISNULL(-SUM(ICAdjInvItemStkQty), 0) AS Qty ,
                      --          ISNULL(-SUM(ICAdjInvItemUnitCost), 0) AS CostTot,
                      --          ISNULL(-SUM(ICAdjInvItemFUnitCost), 0) AS FCostTot
                      --FROM      dbo.ICAdjInvItems
                      --WHERE     AAStatus = 'Alive'
                      --          AND FK_ICProductID = {1} 
                      --          AND ICAdjInvItemTypeCombo IN ( 'DecPrice' --, 'DecQty' 
                      --                                          )
                      --          AND FK_ICAdjInvID IN (
                      --          SELECT  ICAdjInvID
                      --          FROM    ICAdjInvs
                      --          WHERE   AAStatus = 'Alive'
                      --                  AND YEAR(ICAdjInvDate) * 12 + MONTH(ICAdjInvDate) = {0}  )
                      --UNION ALL
		              ----Lay tong dieu chinh tang
                      --SELECT    ISNULL(SUM(ICAdjInvItemStkQty), 0) AS Qty ,
                      --          ISNULL(SUM(ICAdjInvItemUnitCost), 0) AS CostTot,
                      --          ISNULL(SUM(ICAdjInvItemFUnitCost), 0) AS FCostTot
                      --FROM      dbo.ICAdjInvItems
                      --WHERE     AAStatus = 'Alive'
                      --          AND FK_ICProductID = {1} 
                      --          AND ICAdjInvItemTypeCombo IN ( 'IncPrice' --, 'IncQty' 
                      --                                        )
                      --          AND FK_ICAdjInvID IN (
                      --          SELECT  ICAdjInvID
                      --          FROM    ICAdjInvs
                      --          WHERE   AAStatus = 'Alive'
                      --                  AND YEAR(ICAdjInvDate) * 12 + MONTH(ICAdjInvDate) = {0} )
                    ) AS TBBB;

                    "
                    , iYear * 12 + iPeriod, iICProductID);
            return dal.GetDataSet(strQuery);
        }
        #endregion

        #region Lấy số lượng và giá vốn xuất kho chung --Vinh
        public DataSet LaySoLuongVaGiaVonXuat(int iICProductID, int iYear, int iPeriod, String strAdjInvTypeDecQty, String strAdjInvTypeDecPrice)
        {
            //Lấy các phiếu Nhập kho (Receipt không có ProductionOrdr), Điều chỉnh tăng số lượng và số tiền (IncAdjInv)
            String str = String.Format(@"SELECT SUM(Qty) AS Qty, SUM(CostTot) AS CostTot, SUM(FCostTot) AS FCostTot FROM
                                        (
                                            {0}
                                            /*UNION ALL
                                            {1}
                                            UNION ALL
                                            {2}*/
                                        ) AS TB
                                        ",
                                        ShipmentItemGetSumQtyAndCostTotByProductIDAndPeriodAndYear(iICProductID, iPeriod, iYear),
                                        AdjInvItemGetSumQtyAndCostTotByProductIDAndPeriodAndYear(iICProductID, iPeriod, iYear, strAdjInvTypeDecQty),
                                        AdjInvItemGetSumQtyAndCostTotByProductIDAndPeriodAndYear(iICProductID, iPeriod, iYear, strAdjInvTypeDecPrice));
            return dal.GetDataSet(str);
        }

        public String ShipmentItemGetSumQtyAndCostTotByProductIDAndPeriodAndYear(int iICProductID, int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"SELECT  ISNULL(SUM(ICShipmentItemQty), 0) AS Qty, ISNULL(SUM(ICShipmentItemCostTot), 0) AS CostTot, ISNULL(SUM(ICShipmentItemFCostTot), 0) AS FCostTot 
                                                FROM    dbo.ICShipmentItems
                                                        INNER JOIN dbo.PPProductionCostCenterActives ON ( PPProductionCostCenterActives.FK_PPCostCenterID = ICShipmentItems.FK_PPCostCenterID
                                                                                                          AND PPYear = {0}
                                                                                                          AND PPPeriod = {1}
                                                                                                        )
                                                WHERE   AAStatus = 'Alive'
                                                AND FK_ICProductID = {2}
                                                        AND ( FK_ICShipmentID IN ( SELECT    ICShipmentID
                                                                                  FROM      dbo.ICShipments
                                                                                  WHERE     AAStatus = 'Alive'
                                                                                            AND YEAR(ICShipmentDate) = {0}
                                                                                            AND MONTH(ICShipmentDate) = {1} )
                                                              OR FK_PPProductionOrdrID IN (
                                                              SELECT    PPProductionOrdrID
                                                              FROM      dbo.PPProductionOrdrs
                                                              WHERE     AAStatus = 'Alive'
                                                                        AND YEAR(PPProductionOrdrDate) = {0}
                                                                        AND MONTH(PPProductionOrdrDate) = {1} )
                                                            )

                                                UNION ALL

                                                SELECT  ISNULL(SUM(ICShipmentItemQty), 0) AS Qty, ISNULL(SUM(ICShipmentItemCostTot), 0) AS CostTot, ISNULL(SUM(ICShipmentItemFCostTot), 0) AS FCostTot 
                                                FROM    dbo.ICShipmentItems
                                                WHERE   AAStatus = 'Alive'
                                                AND FK_ICProductID = {2}
                                                AND FK_PPCostCenterID = 0
                                                AND ( FK_ICShipmentID IN ( SELECT    ICShipmentID
                                                                            FROM      dbo.ICShipments
                                                                            WHERE     AAStatus = 'Alive'
                                                                                    AND YEAR(ICShipmentDate) = {0}
                                                                                    AND MONTH(ICShipmentDate) = {1} )
                                                        OR FK_PPProductionOrdrID IN (
                                                        SELECT    PPProductionOrdrID
                                                        FROM      dbo.PPProductionOrdrs
                                                        WHERE     AAStatus = 'Alive'
                                                                AND YEAR(PPProductionOrdrDate) = {0}
                                                                AND MONTH(PPProductionOrdrDate) = {1} )
                                                    )"
                                                    , iYear, iPeriod, iICProductID);

            return strQuery;
        }

        #endregion

        #region Lấy tất cả sản phẩm trong thống kê sản xuất --Vinh --2014.11.26
        public DataSet LayDanhSachSanPhamThongKeSanXuat(int iYear, int iPeriod, int iPPProductionCostCenterID)
        {
            String str = String.Format(@"SELECT FK_ICProductID AS ICProductID FROM dbo.PPProductionCostStatistics
                                        WHERE PPYear = {0}
                                        AND PPPeriod = {1}
                                        AND FK_PPProductionCostCenterID = {2}"
                                        , iYear, iPeriod, iPPProductionCostCenterID);
            return dal.GetDataSet(str);
        }
        #endregion

        public DataSet LaySoLuongVaGiaVonNhapThua(int iICProductID, int iYear, int iPeriod)
        {
            //Lấy tất cả phiếu Nhập kho NVL thừa(RMReceipt)
            String str = String.Format(@"SELECT SUM(Qty) AS Qty, SUM(CostTot) AS CostTot FROM
                                        (
                                            SELECT SUM(ICReceiptItemQty) AS Qty, SUM(ICReceiptItemCostTot) AS CostTot
                                            FROM      dbo.ICReceiptItems
                                            INNER JOIN dbo.PPProductionCostCenterActives ON ( PPProductionCostCenterActives.FK_PPCostCenterID = ICReceiptItems.FK_PPCostCenterID
                                                                                                        AND PPYear = {1}
                                                                                                        AND PPPeriod = {2}
                                                                                                    )
                                            WHERE     AAStatus = 'Alive'
                                                    AND FK_ICProductID = {0}
                                                    AND FK_ICReceiptID IN (
                                                                            SELECT ICReceiptID 
                                                                            FROM dbo.ICReceipts
                                                                            WHERE AAStatus = 'Alive'
                                                                                    AND MONTH(ICReceiptDate) = {1}
                                                                                    AND Year(ICReceiptDate) = {2}
                                                                                    AND AAModule = 'RMReceipt'
                                                                            )

                                            UNION ALL

                                            SELECT SUM(ICReceiptItemQty) AS Qty, SUM(ICReceiptItemCostTot) AS CostTot
                                            FROM      dbo.ICReceiptItems
                                            WHERE     AAStatus = 'Alive'
                                                    AND FK_ICProductID = {0}
                                                    AND FK_PPCostCenterID = 0
                                                    AND FK_ICReceiptID IN (
                                                                            SELECT ICReceiptID 
                                                                            FROM dbo.ICReceipts
                                                                            WHERE AAStatus = 'Alive'
                                                                                    AND MONTH(ICReceiptDate) = {1}
                                                                                    AND Year(ICReceiptDate) = {2}
                                                                                    AND AAModule = 'RMReceipt'
                                                                            )    
                                        ) AS TB                                                        
                                        ", iICProductID, iYear, iPeriod);
            return dal.GetDataSet(str);
        }

        #endregion
        
        #region Lấy giá nhập trung bình của NVL
        public ICValsInfo GetAllData_ByICProductAndPeriod(int iICProductID, int iPeriod, int iYear)
        {
            string strQuery = string.Format(@"
                                            SELECT  *
                                            FROM    dbo.ICVals
                                            WHERE   FK_ICProductID = '{0}'
                                                    AND ICPeriod = '{1}'
                                                    AND ICYear = '{2}'
                                            ", iICProductID, iPeriod, iYear);
            DataSet ds = GetDataSet(strQuery);
            if (ds.Tables[0].Rows.Count > 0 && ds != null && ds.Tables[0].Rows[0] != null)
            {
                return (ICValsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }
        #endregion
        public DataSet CalcInventoryAverageCost(DateTime dtCalc, string sProductID)
        {
            object[] _objParrs = {dtCalc
                    ,sProductID
                                };
            return SqlDatabaseHelper.RunStoredProcedure("spL_CalcInventoryAverageCost", _objParrs);
        }
    }
    #endregion
}