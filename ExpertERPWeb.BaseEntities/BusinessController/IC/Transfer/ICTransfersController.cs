using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;


namespace ExpertERP.BusinessEntities
{
	#region ICTransfers
	//-----------------------------------------------------------
	//Generated By: VTD Studio
	//Class:ICTransfersController
	//Created Date:Thursday, June 19, 2008
	//-----------------------------------------------------------
	
	public class ICTransfersController:BaseBusinessController
	{
		public ICTransfersController()
		{
			dal= new DALBaseProvider("ICTransfers",typeof(ICTransfersInfo));
		}
        public DataSet GetAllICTransferByFK_BRBranchIDAndFromDateToDate(int iBRBranchID, DateTime dtFrom, DateTime dtTo)
        {
            try
            {
                String strQuery = String.Format("SELECT * FROM [dbo].[ICTransfers] WHERE [FK_BRBranchID]={0} AND CONVERT(VARCHAR(10),[ICTransferDate],112) >= CONVERT(VARCHAR(10), '{1}', 112)  AND CONVERT(VARCHAR(10), [ICTransferDate],112) <= CONVERT(VARCHAR(10), '{2}', 112) AND [AAStatus]='{3}'", iBRBranchID, dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"), BusinessObject.DefaultAAStatus);
                return (DataSet)dal.GetDataSet(strQuery);
            }
            catch
            {
                return null;
            }
        }

        public DataSet GetAllTransfer_InPeriod(int iPeriod, int iYear,string status)
        {
            DateTime fromDate = new DateTime(iYear, iPeriod, 1);
            DateTime toDate = new DateTime(iYear, iPeriod, DateTime.DaysInMonth(iYear, iPeriod));
            string query = "SELECT * FROM ICTransfers WHERE AAStatus = 'Alive' AND 0 = 0 ";
            if (fromDate.Year != 1)
                query += String.Format("AND ICTransferDate >= '{0}' ", String.Format("{0:yyyy/M/d HH:mm:ss}", fromDate));
            if (toDate.Year != 1)
                query += string.Format("AND ICTransferDate <= '{0}' ", String.Format("{0:yyyy/M/d HH:mm:ss}", toDate));
            DataSet ds = dal.GetDataSet(query + String.Format(" and (AAPostStatus is Null or AAPostStatus = N'{0}')", status));
            return ds;
        }

        public DataSet GetAllTransferInPeriod(int iYear, int iPeriod)
        {
            String strQuery = String.Format(@"SELECT * FROM ICTransfers
                                                WHERE AAStatus = 'Alive'
                                                AND MONTH(ICTransferDate) = {0}
                                                AND YEAR(ICTransferDate) = {1}
                                                ORDER BY ICTransferDate", iPeriod, iYear);

           return GetDataSet(strQuery);
        }
		
		public DataSet GetAllTransferInPeriodNotInCostCenterActive(int iYear, int iPeriod)
        {
            String strQuery = String.Format(@"SELECT  *
                                                FROM    dbo.ICTransfers
                                                        INNER JOIN dbo.ICTransferItems ON ( ICTransferItems.FK_ICTransferID = ICTransfers.ICTransferID
                                                                                            AND ICTransferItems.AAStatus = ICTransfers.AAStatus
                                                                                            AND ICTransfers.AAStatus = 'Alive'											
                                                                                            AND YEAR(ICTransferDate) = {0}
                                                                                            AND MONTH(ICTransferDate) = {1}
                                                                                            AND FK_PPCostCenterID NOT IN (
                                                                                                                        SELECT  FK_PPCostCenterID
                                                                                                                        FROM    dbo.PPProductionCostCenterActives
                                                                                                                        WHERE   PPYear = {0}
                                                                                                                                AND PPPeriod = {1} )
                                                                                          )
                                                ", iYear, iPeriod);

           return GetDataSet(strQuery);
        }


        public DataSet GetAllDataInRange(DateTime fromDate, DateTime toDate)
        {
            String strDate = DALUtil.GenerateBeetween("ICTransferDate", fromDate, toDate);
            string query = String.Format("SELECT * FROM ICTransfers WHERE AAStatus = 'Alive' AND {0}", strDate);

            DataSet ds = dal.GetDataSet(query);
            return ds;
        }
        // NhamNDH add -28/11/2016- Move Phiếu sản xuất vs Kết quả sản xuất từ CHF
        public DataSet GetAllTransferCanCreateMaterial(int iPPProductionOrdrID)
        {
            string strQuery = String.Format(@"SELECT  *
                                            FROM    dbo.ICTransfers
                                            INNER JOIN dbo.ICTransferROs
                                            ON ICTransferROs.FK_ICTransferID = ICTransfers.ICTransferID
                                            AND ICTransferROs.AAStatus = ICTransfers.AAStatus
                                            AND ICTransferROs.AAStatus = 'Alive'
                                            INNER JOIN dbo.ICROs
                                            ON ICROs.ICROID = ICTransferROs.FK_ICROID
                                            AND ICROs.AAStatus = ICTransferROs.AAStatus
                                            AND ICROs.AAStatus = 'Alive'
                                            WHERE   ICROs.FK_PPProductionOrdrID = {0} AND ICTransfers.ICTransferTypeCombo = 'Transfer' AND ICTransfers.AAStatus = 'Alive'
                                                    AND ICTransferID IN ( SELECT    FK_ICTransferID
                                                                          FROM      dbo.ICTransferItems
                                                                          WHERE     AAStatus = 'Alive'
                                                                                    AND ICTransferItemRQty > 0)", iPPProductionOrdrID);
            return dal.GetDataSet(strQuery);
        }
        // NhamNDH add -28/11/2016- Move Phiếu sản xuất vs Kết quả sản xuất từ CHF
        public DataSet GetAllTransferByProductionOrd(int iPPProductionOrdID)
        {
            string strQuery = String.Format(@"SELECT  *
                                            FROM    dbo.ICTransfers
                                                    INNER JOIN dbo.ICTransferROs ON ICTransferROs.FK_ICTransferID = ICTransfers.ICTransferID
                                                                                    AND ICTransferROs.AAStatus = ICTransfers.AAStatus
                                                                                    AND ICTransferROs.AAStatus = 'Alive'
                                                    INNER JOIN dbo.ICROs ON ICROs.ICROID = ICTransferROs.FK_ICROID
                                                                            AND ICROs.AAStatus = ICTransferROs.AAStatus
                                                                            AND ICROs.AAStatus = 'Alive'
                                            WHERE   ICTransfers.ICTransferTypeCombo = 'ProductionTransfer'
                                                    AND ICROs.FK_PPProductionOrdrID = {0}", iPPProductionOrdID);
            return dal.GetDataSet(strQuery);
        }
        //
    }
	#endregion
}