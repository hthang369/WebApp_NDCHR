using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region ICKitItems
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:ICKitItemsController
	//Created Date:Saturday, November 08, 2014
	//-----------------------------------------------------------
	
	public class ICKitItemsController:BaseBusinessController
	{
		public ICKitItemsController()
		{
			dal= new DALBaseProvider("ICKitItems",typeof(ICKitItemsInfo));
		}

        public ICKitItemsInfo LayQtyTheoAllowVariance(int iICProductID, double iQty, int iICKitID)
        {
            String strQuery = String.Format(@"SELECT dbo.ICKitItems.* FROM dbo.ICKits INNER JOIN dbo.ICKitItems
                                              ON ICKitItems.FK_ICKitID = ICKits.ICKitID
                                              AND ICKitItems.AAStatus = ICKits.AAStatus
                                              WHERE ICKits.AAStatus='Alive'
                                              AND FK_ICKitID={2}
                                              AND ICKitItems.FK_ICProductID={0}
                                              AND (
	                                                (ICKitItemQty={1} AND ICKitItemAllowVariance=0)
	                                                OR
	                                                (ICKitItemMinQty<={1} AND ICKitItemMaxQty>={1} AND ICKitItemAllowVariance=1)
                                                  )", iICProductID, iQty, iICKitID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables[0].Rows != null && ds.Tables[0].Rows.Count != 0)
            {
                return (ICKitItemsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }

        public ICKitItemsInfo LaySanPhamTheoKitID(int iICProductID, int iICKitID)
        {
            String strQuery = String.Format(@"SELECT dbo.ICKitItems.* FROM dbo.ICKits INNER JOIN dbo.ICKitItems
                                              ON ICKitItems.FK_ICKitID = ICKits.ICKitID
                                              AND ICKitItems.AAStatus = ICKits.AAStatus
                                              WHERE ICKits.AAStatus='Alive'
                                              AND FK_ICKitID={1}
                                              AND ICKitItems.FK_ICProductID={0}
                                              ", iICProductID, iICKitID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables[0].Rows != null && ds.Tables[0].Rows.Count != 0)
            {
                return (ICKitItemsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }

        public DataSet LayKitTheoAssemblyVaDeAssembly(int iICKitID, int iICKitItemID)
        {
            String strQuery = String.Format(@"SELECT DISTINCT  dbo.ICKits.*
                                              FROM    dbo.ICKits
                                              INNER JOIN dbo.ICKitItems ON ICKitItems.FK_ICKitID = ICKits.ICKitID
                                              AND ICKitItems.AAStatus = ICKits.AAStatus
                                              WHERE ICKits.AAStatus='Alive'
                                              AND (ICKitItems.ICKitItemID={1} OR 0={1})
                                              AND (ICKitID={0} OR 0={0})
                                              AND ICKitID IN (
                                              SELECT DISTINCT FK_ICKitID FROM dbo.ICAssemblys INNER JOIN dbo.ICShipmentItems
                                              ON ICShipmentItems.FK_ICAssemblyID = ICAssemblys.ICAssemblyID
                                              AND ICAssemblys.AAStatus='Alive'
                                              UNION 
                                              SELECT DISTINCT FK_ICKitID FROM dbo.ICAssemblys INNER JOIN dbo.ICReceiptItems
                                              ON ICReceiptItems.FK_ICAssemblyID = ICAssemblys.ICAssemblyID
                                              AND ICAssemblys.AAStatus='Alive')
                                              ", iICKitID, iICKitItemID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables[0].Rows != null && ds.Tables[0].Rows.Count != 0)
            {
                return ds;
            }
            return null;
        }

        public ICKitItemsInfo LayKitItemTheoSanPham(int iICProductID)
        {
            String strQuery = String.Format(@"SELECT dbo.ICKitItems.* FROM dbo.ICKits INNER JOIN dbo.ICKitItems
                                              ON ICKitItems.FK_ICKitID = ICKits.ICKitID
                                              AND ICKitItems.AAStatus = ICKits.AAStatus
                                              WHERE ICKits.AAStatus='Alive'
                                              AND ICKitItems.FK_ICProductID={0}
                                              ", iICProductID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables[0].Rows != null && ds.Tables[0].Rows.Count != 0)
            {
                return (ICKitItemsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }

        public DataSet LayKitItemTheoSanPhamCha(int iICProductParentID)
        {
            String strQuery = String.Format(@"SELECT dbo.ICKitItems.* FROM dbo.ICKits INNER JOIN dbo.ICKitItems
                                              ON ICKitItems.FK_ICKitID = ICKits.ICKitID
                                              AND ICKitItems.AAStatus = ICKits.AAStatus
                                              WHERE ICKits.AAStatus='Alive'
                                              AND ICKits.FK_ICProductID={0}
                                              ", iICProductParentID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables[0].Rows != null && ds.Tables[0].Rows.Count != 0)
            {
                return ds;
            }
            return null;
        } 

        public DataSet LayTatCaItemTheoKitID(int iICKitID)
        {
            String strQuery = String.Format(@"SELECT dbo.ICKitItems.* FROM dbo.ICKits INNER JOIN dbo.ICKitItems
                                              ON ICKitItems.FK_ICKitID = ICKits.ICKitID
                                              AND ICKitItems.AAStatus = ICKits.AAStatus
                                              WHERE ICKits.AAStatus='Alive'
                                              AND FK_ICKitID={0}
                                              ", iICKitID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables[0].Rows != null && ds.Tables[0].Rows.Count != 0)
            {
                return ds;
            }
            return null;
        }

	}
	#endregion
}