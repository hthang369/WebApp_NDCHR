using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;


namespace ExpertERP.BusinessEntities
{
	#region ICStocks
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:ICStocksController
	//Created Date:Sunday, March 23, 2008
	//-----------------------------------------------------------
	
	public class ICStocksController:BaseBusinessController
	{
    
		public ICStocksController()
		{
			dal= new DALBaseProvider("ICStocks",typeof(ICStocksInfo));
		}

        public ICStocksInfo GetStockCentral()
        {
            DataSet dsStocks = GetAllObjects();
            foreach (DataRow rowStock in dsStocks.Tables[0].Rows)
            {
                ICStocksInfo objICStocksInfo = (ICStocksInfo)GetObjectFromDataRow(rowStock);
                if (objICStocksInfo.ICStockType =="Central")
                    return objICStocksInfo;
            }

            return null;
        }

        public ICStocksInfo GetMaintainanceStockByBranchID(int iBranchID)
        {
            ICStocksController objStocksController = new ICStocksController();
            DataSet ds = objStocksController.GetAllDataByForeignColumn("FK_BRBranchID", iBranchID);
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICStocksInfo objStocksInfo = (ICStocksInfo)objStocksController.GetObjectFromDataRow(row);
                    if (objStocksInfo.ICStockType == "Maintenance")
                        return objStocksInfo;
                }
            }

            return null;
        }

        public ICStocksInfo GetMaintainanceStock()
        {
            ICStocksController objStocksController = new ICStocksController();
            DataSet ds = objStocksController.GetAllObjects();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICStocksInfo objStocksInfo = (ICStocksInfo)objStocksController.GetObjectFromDataRow(row);
                    if (objStocksInfo.ICStockType == "Maintenance")
                        return objStocksInfo;
                }
            }

            return null;
        }

        public ICStocksInfo GetTransitStock()
        {
            ICStocksController objStocksController = new ICStocksController();
            DataSet ds = objStocksController.GetAllObjects();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICStocksInfo objStocksInfo = (ICStocksInfo)objStocksController.GetObjectFromDataRow(row);
                    if (objStocksInfo.ICStockType == "Transit")
                        return objStocksInfo;
                }
            }

            return null;
        }

        //Thanh Trung adds, 16/08/2008
        public ICStocksInfo GetRedemptionStock()
        {
            ICStocksController objStocksController = new ICStocksController();
            DataSet ds = objStocksController.GetAllObjects();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICStocksInfo objStocksInfo = (ICStocksInfo)objStocksController.GetObjectFromDataRow(row);
                    if (objStocksInfo.ICStockType == "Redemption")
                        return objStocksInfo;
                }
            }

            return null;
        }

        #region thien
        public DataSet GetAllStockCentral()
        {
            string strQuery = String.Format("select * from ICStocks where ICStockType='Central'");
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllObjectPhase()
        {
            string strQuery = String.Format("select * from ICStocks where ICStockID in (Select FK_ICStockID from PPPhaseCfgs where AAStatus = 'Alive')");
            return dal.GetDataSet(strQuery);
        }
            
        #endregion

        public DataSet GetAllStockOrderBy()
        {
            return dal.GetDataSet("Select * from ICStocks where AAStatus = 'Alive' order by ICStockid");
        }

        public DataSet GetAllStockInPPPhaseCfg(string strICStockTypeNo)
        {
            string strQuery = string.Format(@"Select ICStocks.* from ICStocks inner join PPPhaseCfgs 
                                                on FK_ICStockID=ICStockID
                                                inner join ICStockTypes on ICStockTypes.ICStockTypeID=ICStocks.FK_ICStockTypeID
                                                where ICStocks.AAStatus='Alive' AND PPPhaseCfgs.AAStatus='Alive' AND ICStockTypes.AAStatus='Alive'
                                                AND ICStockTypes.ICStockTypeNo='{0}'
                                                 ORDER by PPPhaseCfgSortOrder", strICStockTypeNo);
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAllStockInPPPhaseCfg()
        {
            string strQuery = string.Format(@"Select ICStocks.* from ICStocks inner join PPPhaseCfgs 
                                                on FK_ICStockID=ICStockID
                                                where ICStocks.AAStatus='Alive' AND PPPhaseCfgs.AAStatus='Alive'
                                                ORDER by PPPhaseCfgSortOrder");
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAllStockInPkg()
        {
            string strQuery = string.Format(@"Select ICStocks.* from ICStocks inner join PPPkgStocks 
                                                on FK_ICStockID=ICStockID
                                                where ICStocks.AAStatus='Alive' AND PPPkgStocks.AAStatus='Alive'
                                                ORDER by PPPkgStockID");
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAllStockByOrdr()
        {
            String strQuery = String.Format(@"SELECT * FROM ICStocks WHERE AAStatus = 'Alive' --ORDER BY ICStockOrdr");

            return GetDataSet(strQuery);
        }
        
    }
	#endregion
}