using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
    #region ADOFs
    //-----------------------------------------------------------
    //Generated By: GMC Studio
    //Class:ADOFsController
    //Created Date:30 Tháng Sáu 2014
    //-----------------------------------------------------------

    public class ADOFsController : BaseBusinessController
    {
        public ADOFsController()
        {
            dal = new DALBaseProvider("ADOFs", typeof(ADOFsInfo));
        }

        #region Lấy tất cả dữ liệu theo Loại --Vinh

        public DataSet GetAllDataByType(String strADOFTypeCombo)
        {
            String str = String.Format(@"   SELECT * FROM dbo.ADOFs
                                            WHERE AAStatus = 'Alive'
                                            AND ADOFTypeCombo LIKE '{0}'"
                                        , strADOFTypeCombo);
            return dal.GetDataSet(str);
        }

        #endregion

        public DataSet GetAllDataOOF()
        {
            String str = String.Format(@"   SELECT * FROM dbo.ADOFs
                                            WHERE AAStatus = 'Alive'
                                            AND ADOFTypeCombo LIKE 'O'");
            return dal.GetDataSet(str);
        }
        public DataSet GetAllDataIOF()
        {
            String str = String.Format(@"   SELECT * FROM dbo.ADOFs
                                            WHERE AAStatus = 'Alive'
                                            AND ADOFTypeCombo LIKE 'I'");
            return dal.GetDataSet(str);
        }
        public DataSet GetDataHasItemByType(String strADOFTypeCombo)
        {
            String str = String.Format(@"
SELECT a.* 
FROM dbo.ADOFs a
    INNER JOIN (SELECT FK_ADOFID 
                FROM dbo.ADOFItems a1
                    INNER JOIN dbo.ADOFs b1 ON b1.ADOFID = a1.FK_ADOFID 
                        AND a1.AAStatus = 'Alive' 
                        AND b1.ADOFTypeCombo IN ('{0}')
                        AND b1.AAStatus = 'Alive' 
                GROUP BY FK_ADOFID
            ) b ON a.ADOFID = b.FK_ADOFID 
        "
                , strADOFTypeCombo.Replace(",", "','"));
            return dal.GetDataSet(str);
        }
        public DataSet GetDataByADOFName(string strTCode)
        {
            String str = String.Format(@"   SELECT *
                                            FROM dbo.ADOFs
                                            WHERE dbo.ADOFs.AAStatus = 'Alive' AND dbo.ADOFs.ADOFName<> ''
		                                            AND dbo.ADOFs.ADOFTypeCombo LIKE'%{0}%'", strTCode);
            DataSet ds = dal.GetDataSet(str);
            return ds;
        }
        public bool CheckADOFandTranCfgOFItem(int iADOFID, int iTranCfgID)
        {
            String str = String.Format(@"
            SELECT * FROM dbo.ADOFs a INNER JOIN dbo.GLTranCfgOFItems b 
            ON b.FK_ADOFID = a.ADOFID AND a.AAStatus = 'Alive' AND b.AAStatus = 'Alive'
            AND b.FK_ADOFID = {0} AND b.FK_GLTranCfgID = {1}"
                , iADOFID, iTranCfgID);
            DataSet ds = GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return true;
            return false;
        }
        public ADOFsInfo GetObjectByADOFItemName(string strADOFItemName)
        {
            String str = String.Format(@"   SELECT *
                                            FROM dbo.ADOFs INNER JOIN dbo.ADOFItems ON ADOFItems.FK_ADOFID = ADOFs.ADOFID
                                            WHERE ADOFs.AAStatus ='Alive' AND ADOFItems.AAStatus ='Alive'
                                                  AND ADOFItems.ADOFItemName LIKE N'{0}'", strADOFItemName);
            DataSet ds = GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                List<BusinessObject> lstADOFs = new ADOFsController().GetListFromDataset(ds);
                foreach (ADOFsInfo objADOFsInfo in lstADOFs)
                {
                    return objADOFsInfo;
                }
            }

            return null;
        }
        public ADOFsInfo GetDataByADOFNo(string strADOFNo)
        {
            String str = String.Format(@"   SELECT *
                                            FROM dbo.ADOFs
                                            WHERE dbo.ADOFs.AAStatus = 'Alive' AND dbo.ADOFs.ADOFName<> ''
		                                            AND dbo.ADOFs.ADOFNo = '{0}'", strADOFNo);
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                List<BusinessObject> lstADOFs = new ADOFsController().GetListFromDataset(ds);
                foreach (ADOFsInfo objADOFsInfo in lstADOFs)
                {
                    return objADOFsInfo;
                }
            }

            return null;
        }
    }
    #endregion
}