using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;

namespace ExpertERP.BusinessEntities
{
    #region BRPOSItems
    //-----------------------------------------------------------
    //Generated By: GMC Studio
    //Class:BRPOSItemsController
    //Created Date:Monday, June 02, 2008
    //-----------------------------------------------------------

    public class BRPOSItemsController : BaseBusinessController
    {
        public BRPOSItemsController()
        {
            dal = new DALBaseProvider("BRPOSItems", typeof(BRPOSItemsInfo));
        }

        public DataSet GetPOSItemsByProductIDAndProductSerialNo(int iProductID, String strProductSerialNo)
        {
            return dal.GetDataSet("BRPOSItems_SelectByProductIDAndProductSerialNo", iProductID, strProductSerialNo);
        }

        public DataSet GetPOSItemsByProductSerialNo(String strProductSerialNo)
        {
            return dal.GetDataSet("BRPOSItems_SelectByProductSerialNo", strProductSerialNo);
        }

        public BRPOSItemsInfo GetPOSItemByProductSerialNo(String strProductSerialNo)
        {
            return (BRPOSItemsInfo)dal.GetDataObject("BRPOSItems_SelectByProductSerialNo", strProductSerialNo);
        }

        public DataSet GetDataSetBRPOSItemsByICProductIDAndICReceiptItemSerialNo(int iICProductID, String serialNo)
        {
            DataSet dsICReceiptItems = new DataSet();
            String strQuery = String.Format("SELECT * FROM [dbo].[BRPOSItems] WHERE FK_ICProductID={0} AND BRPOSItemSerialNo='{1}'", iICProductID, serialNo);
            return (DataSet)dal.GetDataSet(strQuery);
        }

        public DataSet GetPOSItemByStockIDProductIDAndPeriodAndYear(int iICStockID, int iICProductID, int iPeriod, int iYear)
        {
            return dal.GetDataSet("BRPOSItems_SelectByStockID_ProductID_Period_Year", iICStockID, iICProductID, iPeriod, iYear);
        }

        public DataSet GetPOSItemProductIDAndPeriodAndYear(int iICProductID, int iPeriod, int iYear)
        {
            return dal.GetDataSet("BRPOSItems_SelectByProductID_Period_Year", iICProductID, iPeriod, iYear);
        }

        public DataSet GetPOSItems(int iBranchID, int iICProductID, int iStockID)
        {
            String strQuery = String.Format(@"Select Sum(BRPOSItemQty)as Qty, SUM(BRPOSItemCostTot) as CostTot
					                            From BRPOSItems 
					                            where AAStatus = 'Alive' 
                                                AND FK_ICProductID = {0}
                                                And  FK_BRPOSID In
					                                (Select BRPOSID From BRPOSs 
                                                            Where AAStatus='Alive')",
                                                iICProductID);
            if (iBranchID != 0)// cho mot chi nhanh cu the
            {
                if (iStockID != 0)
                    strQuery += String.Format(" AND FK_ICStockID = {0}", iStockID);
                else
                    strQuery += String.Format(" AND FK_ICStockID IN (SELECT ICStockID FROM ICStocks WHERE FK_BRBranchID = {0} AND AASTatus = 'Alive')", iBranchID);
            }
            else// cho toan bo chi nhanh
            {
                if (iStockID != 0)
                    strQuery += String.Format(" AND FK_ICStockID = {0}", iStockID);
            }
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetPOSItemsInRangeTime(int iBranchID, int iICProductID, int iStockID, DateTime dtFrom, DateTime dtTo)
        {
            String strQuery = String.Format(@"Select Sum(BRPOSItemQty)as Qty, SUM(BRPOSItemCostTot) as CostTot
					                            From BRPOSItems 
					                            where AAStatus = 'Alive' 
                                                AND FK_ICProductID = {0}
                                                And  FK_BRPOSID In
					                                (Select BRPOSID From BRPOSs 
                                                            Where AAStatus='Alive' 
                                                            AND convert(varchar(10),BRPOSDate,112) Between  '{1}' And '{2}')",
                                                iICProductID,
                                                dtFrom.ToString("yyyyMMdd"),
                                                dtTo.ToString("yyyyMMdd"));
            if (iBranchID != 0)// cho mot chi nhanh cu the
            {
                if (iStockID != 0)
                    strQuery += String.Format(" AND FK_ICStockID = {0}", iStockID);
                else
                    strQuery += String.Format(" AND FK_ICStockID IN (SELECT ICStockID FROM ICStocks WHERE FK_BRBranchID = {0} AND AASTatus = 'Alive')", iBranchID);
            }
            else// cho toan bo chi nhanh
            {
                if (iStockID != 0)
                    strQuery += String.Format(" AND FK_ICStockID = {0}", iStockID);
            }
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetPOSItemsInRangeTime(int iBranchID, DateTime dtFrom, DateTime dtTo)
        {
            String strQuery = String.Format(@"Select  FK_ICProductID,FK_ICStockID, Sum(BRPOSItemQty)as Qty, SUM(BRPOSItemCostTot) as CostTot
					                            From BRPOSItems 
					                            where AAStatus = 'Alive' 
                                                And  FK_BRPOSID In
					                                (Select BRPOSID From BRPOSs 
                                                            Where AAStatus='Alive' 
                                                            AND convert(varchar(10),BRPOSDate,112) Between  '{0}' And '{1}')
                                             AND FK_ICProductID in (Select ICProductID from ICProducts where AAStatus='Alive')
                                             AND FK_ICStockID in (Select ICStockID from ICStocks where AAStatus='Alive')",
                                                dtFrom.ToString("yyyyMMdd"),
                                                dtTo.ToString("yyyyMMdd"));
            if (iBranchID != 0)// cho mot chi nhanh cu the
            {
                
            }
            else// cho toan bo chi nhanh
            {
                
            }
            strQuery += string.Format("Group by FK_ICProductID,FK_ICStockID order by FK_ICStockID,FK_ICProductID");
            return dal.GetDataSet(strQuery);
        }

        #region GetAllDataViewInventoryStatistic --Vinh --11/12/2012 --Lấy tất cả danh sách BRPOSItem dựa vào Kho, Sản phẩm, Nhóm sản phẩm, Brand và Từ ngày đến ngày.

        public DataSet GetAllDataViewInventoryStatistic(int iStockID, int iProductID, int iProductGroupID,int iProductTypeID, int iBrandID, DateTime dtFrom, DateTime dtTo)
        {
            String str = String.Format(@"   SELECT * FROM dbo.BRPOSItems 
                                            WHERE AAStatus='Alive'
                                            AND (FK_ICStockID={0} OR 0={0})
                                            AND FK_ICProductID IN (SELECT ICProductID FROM dbo.ICProducts WHERE AAStatus='Alive' AND (ICProductID = {1} OR 0={1}) AND (FK_ICBrandID={2} OR 0={2}) AND (FK_ICProductGroupID = {3} OR 0={3}) AND (FK_ICProductTypeID = {6} OR 0={6}))
                                            AND FK_BRPOSID IN (SELECT BRPOSID FROM dbo.BRPOSs WHERE AAStatus='Alive' AND CONVERT(VARCHAR(20), BRPOSDate, 112) >= CONVERT(VARCHAR(20),'{4}', 112) AND CONVERT(VARCHAR(20), BRPOSDate, 112) <= CONVERT(VARCHAR(20),'{5}', 112) )"
                                            , iStockID, iProductID, iBrandID, iProductGroupID, dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"), iProductGroupID);

            return dal.GetDataSet(str);
        }

        #endregion
    }
    #endregion
}