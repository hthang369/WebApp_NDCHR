using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region GLVoucherItems
	//-----------------------------------------------------------
	//Generated By: Expert Studio
	//Class:GLVoucherItemsController
	//Created Date:Thursday, January 06, 2011
	//-----------------------------------------------------------
	
	public class GLVoucherItemsController:BaseBusinessController
	{
		public GLVoucherItemsController()
		{
			dal= new DALBaseProvider("GLVoucherItems",typeof(GLVoucherItemsInfo));
		}

        public double GetAdvancesToEmployeeAmtByCarPeriodAndYear(int period, int year, int LOCarID)
        {
            string query = string.Format("Select Sum(GLVoucherItemAmtTot) from GLVoucherItems Where AAStatus = 'Alive' And GLVoucherItemCompanyAmt > 0 and FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' And MONTH(GLVoucherDate) = '{0}' and YEAR(GLVoucherDate) = '{1}') And FK_LOCarAllocateID In (Select LOCarAllocateID From LOCarAllocates Where AAStatus = 'Alive' And FK_LOCarID = {2})", period, year, LOCarID);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return (double)ds.Tables[0].Rows[0][0];

            return 0;
        }

        public double GetCostArisingAmtByCarPeriodAndYear(int period, int year, int LOCarID)
        {
            string query = string.Format("Select Sum(GLVoucherItemAmtTot) from GLVoucherItems Where AAStatus = 'Alive' And GLVoucherItemCustomerAmt > 0 and FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' And MONTH(GLVoucherDate) = '{0}' and YEAR(GLVoucherDate) = '{1}') And FK_LOCarID = {2}", period, year, LOCarID);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return (double)ds.Tables[0].Rows[0][0];

            return 0;
        }

        public DataSet GetListByCarPeriodAndYear(int period, int year, int LOCarID)
        {
            string query = string.Format("Select * from GLVoucherItems Where AAStatus = 'Alive' And GLVoucherItemCustomerAmt > 0 and FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' And MONTH(GLVoucherDate) = {0} and YEAR(GLVoucherDate) = {1}) And FK_LOCarID = {2}", period, year, LOCarID);
            return dal.GetDataSet(query);
            
        }
        public double GetCostArisingAmtByPeriodAndYear(int period, int year)
        {
            string query = string.Format("Select Sum(GLVoucherItemAmtTot) from GLVoucherItems Where AAStatus = 'Alive' And GLVoucherItemCustomerAmt > 0 and FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' And MONTH(GLVoucherDate) = {0} and YEAR(GLVoucherDate) = {1})", period, year);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return (double)ds.Tables[0].Rows[0][0];

            return 0;
        }

        public double GetTotAmtByCarCostCenterPeriodAndYear(int CostCenterID, int period, int year, int LOCarID)
        {
            GLCostCentersController CostCenterCtrl = new GLCostCentersController();

            double Sum = 0;

            string query = string.Format("Select Sum(GLVoucherItemAmtTot) from GLVoucherItems Where AAStatus = 'Alive' And FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' And MONTH(GLVoucherDate) = '{0}' and YEAR(GLVoucherDate) = '{1}') And FK_LOCarID = {2} And FK_GLCostCenterID = {3}", period, year, LOCarID, CostCenterID);
            DataSet ds2 = dal.GetDataSet(query);
            if (ds2 != null && ds2.Tables.Count > 0 && ds2.Tables[0].Rows.Count > 0 && ds2.Tables[0].Rows[0][0] != DBNull.Value)
                Sum = (double)ds2.Tables[0].Rows[0][0];
            else
                Sum = 0;

            DataSet ds = CostCenterCtrl.GetAllDataByForeignColumn("FK_GLCostCenterParentID", CostCenterID);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    GLCostCentersInfo CostCenter = (GLCostCentersInfo)CostCenterCtrl.GetObjectFromDataRow(dr);
                    if (CostCenter != null)
                        Sum += GetTotAmtByCarCostCenterPeriodAndYear(CostCenter.GLCostCenterID, period, year, LOCarID);
                }
            }

            return Sum;
        }
        public double GetTotAmtCostCenterPeriodAndYear(int CostCenterID, int period, int year)
        {
            GLCostCentersController CostCenterCtrl = new GLCostCentersController();

            double Sum = 0;

            string query = string.Format("Select Sum(GLVoucherItemAmtTot) from GLVoucherItems Where AAStatus = 'Alive' And FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' And MONTH(GLVoucherDate) = '{0}' and YEAR(GLVoucherDate) = '{1}') And FK_GLCostCenterID = {2}", period, year, CostCenterID);
            DataSet ds2 = dal.GetDataSet(query);
            if (ds2 != null && ds2.Tables.Count > 0 && ds2.Tables[0].Rows.Count > 0 && ds2.Tables[0].Rows[0][0] != DBNull.Value)
                Sum = (double)ds2.Tables[0].Rows[0][0];
            else
                Sum = 0;

            DataSet ds = CostCenterCtrl.GetAllDataByForeignColumn("FK_GLCostCenterParentID", CostCenterID);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    GLCostCentersInfo CostCenter = (GLCostCentersInfo)CostCenterCtrl.GetObjectFromDataRow(dr);
                    if (CostCenter != null)
                        Sum += GetTotAmtCostCenterPeriodAndYear(CostCenter.GLCostCenterID, period, year);
                }
            }

            return Sum;
        }
        public double GetTotAmtByCostCenterPeriodAndYear(int CostCenterID, int period, int year)
        {
            GLCostCentersController CostCenterCtrl = new GLCostCentersController();

            double Sum = 0;

            string query = string.Format("Select Sum(GLVoucherItemAmtTot) from GLVoucherItems Where AAStatus = 'Alive' And FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' And MONTH(GLVoucherDate) = '{0}' and YEAR(GLVoucherDate) = '{1}') And FK_GLCostCenterID = {2}", period, year, CostCenterID);
            DataSet ds2 = dal.GetDataSet(query);
            if (ds2 != null && ds2.Tables.Count > 0 && ds2.Tables[0].Rows.Count > 0 && ds2.Tables[0].Rows[0][0] != DBNull.Value)
                Sum = (double)ds2.Tables[0].Rows[0][0];
            else
                Sum = 0;

            DataSet ds = CostCenterCtrl.GetAllDataByForeignColumn("FK_GLCostCenterParentID", CostCenterID);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    GLCostCentersInfo CostCenter = (GLCostCentersInfo)CostCenterCtrl.GetObjectFromDataRow(dr);
                    if (CostCenter != null)
                        Sum += GetTotAmtByCostCenterPeriodAndYear(CostCenter.GLCostCenterID, period, year);
                }
            }

            return Sum;
        }

        public DataSet GetAllObjectByCarCostCenterPeriodAndYear(int CostCenterID, int period, int year, int LOCarID)
        {
            string query = string.Format("Select * from GLVoucherItems Where AAStatus = 'Alive' And FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' And MONTH(GLVoucherDate) = '{0}' and YEAR(GLVoucherDate) = '{1}') And FK_LOCarID = {2} And FK_GLCostCenterID = {3}", period, year, LOCarID, CostCenterID);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return ds;
           
            return null;
        }

        public DataSet GetAllObjectByCarCostCenterAndDate(int CostCenterID, DateTime fromDate,DateTime toDate, int LOCarID)
        {
            string query = string.Format("Select * from GLVoucherItems Where AAStatus = 'Alive' And FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' And (CONVERT(VARCHAR(20), [GLVoucherDate], 112) >= CONVERT(VARCHAR(20),'{0}', 112)) And (CONVERT(VARCHAR(20), [GLVoucherDate], 112) < CONVERT(VARCHAR(20),'{1}', 112))) And FK_LOCarID = {2} And FK_GLCostCenterID = {3}", String.Format("{0:yyyyMMdd}", fromDate), String.Format("{0:yyyyMMdd}", toDate.AddDays(1)), LOCarID, CostCenterID);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return ds;

            return null;
        }

        public DataSet GetAllObjectByCustomerAndFromdateAndTodateAndStatus(int CustID, int CostCenterID , DateTime fromdate, DateTime todate,string strStatus)
        {
            string query = string.Format(@"Select * from GLVoucherItems Where AAStatus = 'Alive' And (GLVoucherItemStatusCombo = '{4}' or '{4}'='')
                                    And GLVoucherItemCustomerAmt > 0 And FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' 
                    And GLVoucherDate >= '{0}' and GLVoucherDate <= '{1}') And (FK_ARCustomerID = {2} OR 0 = {2}) And FK_GLCostCenterID = {3}"
                    , String.Format("{0:yyyy/M/d HH:mm:ss}", fromdate), String.Format("{0:yyyy/M/d HH:mm:ss}", todate), CustID, CostCenterID,strStatus);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return ds;

            return null;
        }
        public DataSet GetAllObjectByCustomerProfitCenterAndFromdateAndTodate(int CustID, int iGLProfitCenter, DateTime fromdate, DateTime todate)
        {
            string query = string.Format(@"Select * from GLVoucherItems Where AAStatus = 'Alive' And GLVoucherItemStatusCombo = 'New' 
                                And GLVoucherItemCustomerAmt > 0 And FK_GLVoucherID In
                                                (Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' And GLVoucherDate >= '{0}' 
                                                and GLVoucherDate <= '{1}') And (FK_ARCustomerID = {2} OR 0 = {2}) And FK_GLProfitCenterID = {3}"
                                        , String.Format("{0:yyyy/M/d HH:mm:ss}", fromdate), String.Format("{0:yyyy/M/d HH:mm:ss}", todate), CustID, iGLProfitCenter);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return ds;

            return null;
        }
        public DataSet GetAllObjectByCostCenterPeriodAndYearSumByCar(int CostCenterID, int period, int year)
        {
            string query = string.Format("Select * from GLVoucherItems Where AAStatus = 'Alive' And FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' And MONTH(GLVoucherDate) = '{0}' and YEAR(GLVoucherDate) = '{1}') And FK_GLCostCenterID = {2}", period, year, CostCenterID);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return ds;

            return null;
        }

        public DataSet GetAllObjectByCostCenterAndDateSumByCar(int CostCenterID, DateTime fromDate,DateTime toDate)
        {
            string query = string.Format("Select * from GLVoucherItems Where AAStatus = 'Alive' And FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' And (CONVERT(VARCHAR(20), [GLVoucherDate], 112) >= CONVERT(VARCHAR(20),'{0}', 112)) And (CONVERT(VARCHAR(20), [GLVoucherDate], 112) < CONVERT(VARCHAR(20),'{1}', 112))) And FK_GLCostCenterID = {2}", String.Format("{0:yyyyMMdd}", fromDate), String.Format("{0:yyyyMMdd}", toDate.AddDays(1)), CostCenterID);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return ds;

            return null;
        }

        public double GetChiPhiByCarAllocateItemID(int CarAllocateItemID)
        {
            double Sum = 0;

            string query = string.Format("Select Sum(GLVoucherItemAmtTot) from GLVoucherItems Where AAStatus = 'Alive' And FK_LOCarAllocateItemID = {0} AND GLVoucherItemCompanyAmt>0 AND FK_GLVoucherID IN (SELECT GLVoucherID FROM GLVouchers WHERE AAStatus='Alive')", CarAllocateItemID);
            DataSet ds2 = dal.GetDataSet(query);
            if (ds2 != null && ds2.Tables.Count > 0 && ds2.Tables[0].Rows.Count > 0 && ds2.Tables[0].Rows[0][0] != DBNull.Value)
                Sum = (double)ds2.Tables[0].Rows[0][0];
            else
                Sum = 0;

            return Sum;
        }

        public DataSet GetListChiPhiByCarAllocateItemID(int CarAllocateItemID)
        {
            string query = string.Format("Select * from GLVoucherItems Where AAStatus = 'Alive' And FK_LOCarAllocateItemID = {0} AND GLVoucherItemCompanyAmt>0 AND FK_GLVoucherID IN (SELECT GLVoucherID FROM GLVouchers WHERE AAStatus='Alive')", CarAllocateItemID);
            return dal.GetDataSet(query);
        }

        public double GetChiPhiChiHoByCarAllocateItemID(int CarAllocateItemID)
        {
            double Sum = 0;

            string query = string.Format("Select Sum(GLVoucherItemAmtTot) from GLVoucherItems Where AAStatus = 'Alive' And FK_LOCarAllocateItemID = {0} AND GLVoucherItemCustomerAmt>0 AND FK_GLVoucherID IN (SELECT GLVoucherID FROM GLVouchers WHERE AAStatus='Alive')", CarAllocateItemID);
            DataSet ds2 = dal.GetDataSet(query);
            if (ds2 != null && ds2.Tables.Count > 0 && ds2.Tables[0].Rows.Count > 0 && ds2.Tables[0].Rows[0][0] != DBNull.Value)
                Sum = (double)ds2.Tables[0].Rows[0][0];
            else
                Sum = 0;

            return Sum;
        }

        public DataSet GetListChiPhiChiHoByCarAllocateItemID(int CarAllocateItemID)
        {
            string query = string.Format("Select * from GLVoucherItems Where AAStatus = 'Alive' And FK_LOCarAllocateItemID = {0} AND GLVoucherItemCustomerAmt>0 AND FK_GLVoucherID IN (SELECT GLVoucherID FROM GLVouchers WHERE AAStatus='Alive')", CarAllocateItemID);
            return dal.GetDataSet(query);
        }

        public double GetCostArisingAmtByCustomerFromDateAndToDate(DateTime fromdate, DateTime todate, int CustID)
        {
            string query = string.Format("Select Sum(GLVoucherItemAmtTot) from GLVoucherItems Where AAStatus = 'Alive' And GLVoucherItemCustomerAmt > 0 and FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' And (CONVERT(VARCHAR(20), [GLVoucherDate], 112) >= CONVERT(VARCHAR(20),'{0}', 112)) and (CONVERT(VARCHAR(20), [GLVoucherDate], 112) <= CONVERT(VARCHAR(20),'{1}', 112))) And FK_ARCustomerID ={2}",  String.Format("{0:yyyyMMdd}", fromdate),  String.Format("{0:yyyyMMdd}", todate), CustID);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return (double)ds.Tables[0].Rows[0][0];

            return 0;
        }
        public double GetCostArisingAmtByCustomerFromMonthAndToMonth(int frommonth, int tomonth, int CustID, int fromyear, int toyear)
        {
            string query = string.Format(@"Select Sum(GLVoucherItemAmtTot) from GLVoucherItems Where AAStatus = 'Alive' And GLVoucherItemCustomerAmt > 0 and FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' And Month(GLVoucherDate) >= {0} And Month(GLVoucherDate) <= {1} And Year(GLVoucherDate) >= {3} And Year(GLVoucherDate) <= {4}) And FK_ARCustomerID ={2}", frommonth, tomonth, CustID, fromyear,toyear);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return (double)ds.Tables[0].Rows[0][0];

            return 0;
        }

        public DataSet GetAllObjectByCustomerFromMonthAndToMonth(int frommonth, int tomonth, int CustID, int fromyear,int toyear)
        {
            string query = string.Format("Select * from GLVoucherItems Where AAStatus = 'Alive' And GLVoucherItemCustomerAmt > 0 and FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' And Month(GLVoucherDate) >= {0} And Month(GLVoucherDate) <= {1} And Year(GLVoucherDate) >= {3}  And Year(GLVoucherDate) <= {4} And FK_ARCustomerID={2})", frommonth, tomonth, CustID, fromyear,toyear);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return ds;

            return null;
        }

        public GLVouchersInfo GetVoucherByCarAllocate(int iCarAllocateID, int iCarAllocateItemID)
        {
            string query = string.Format("Select * from GLVoucherItems Where AAStatus = 'Alive' And FK_LOCarAllocateID={0} and FK_LOCarAllocateItemID={1}",iCarAllocateID,iCarAllocateItemID);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                GLVoucherItemsInfo VoucherItem = (GLVoucherItemsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                if (VoucherItem != null)
                {
                    GLVouchersInfo Voucher = (GLVouchersInfo)new GLVouchersController().GetObjectByID(VoucherItem.FK_GLVoucherID);
                    return Voucher;
                }
            }

            return null;
        }

        public double GetTotAmtByCarCostCenterAndDate(int CostCenterID, DateTime dtFromDate, DateTime dtToDate, int LOCarID)
        {
            GLCostCentersController CostCenterCtrl = new GLCostCentersController();

            double Sum = 0;

            string query = string.Format("Select Sum(GLVoucherItemAmtTot) from GLVoucherItems Where AAStatus = 'Alive' And FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' And (CONVERT(VARCHAR(20), [GLVoucherDate], 112) >= CONVERT(VARCHAR(20),'{0}', 112)) And (CONVERT(VARCHAR(20), [GLVoucherDate], 112) < CONVERT(VARCHAR(20),'{1}', 112))) And FK_LOCarID = {2} And FK_GLCostCenterID = {3}", String.Format("{0:yyyyMMdd}", dtFromDate), String.Format("{0:yyyyMMdd}", dtToDate), LOCarID, CostCenterID);
            DataSet ds2 = dal.GetDataSet(query);
            if (ds2 != null && ds2.Tables.Count > 0 && ds2.Tables[0].Rows.Count > 0 && ds2.Tables[0].Rows[0][0] != DBNull.Value)
                Sum = (double)ds2.Tables[0].Rows[0][0];
            else
                Sum = 0;

            DataSet ds = CostCenterCtrl.GetAllDataByForeignColumn("FK_GLCostCenterParentID", CostCenterID);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    GLCostCentersInfo CostCenter = (GLCostCentersInfo)CostCenterCtrl.GetObjectFromDataRow(dr);
                    if (CostCenter != null)
                        Sum += GetTotAmtByCarCostCenterAndDate(CostCenter.GLCostCenterID, dtFromDate,dtToDate, LOCarID);
                }
            }

            return Sum;
        }

        public double GetCostArisingAmtByCarAndDate(DateTime dtFromDate, DateTime dtToDate, int LOCarID)
        {
            string query = string.Format("Select Sum(GLVoucherItemAmtTot) from GLVoucherItems Where AAStatus = 'Alive' And GLVoucherItemCustomerAmt > 0 and FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' And (CONVERT(VARCHAR(20), [GLVoucherDate], 112) >= CONVERT(VARCHAR(20),'{0}', 112)) And (CONVERT(VARCHAR(20), [GLVoucherDate], 112) < CONVERT(VARCHAR(20),'{1}', 112))) And FK_LOCarID = {2}", String.Format("{0:yyyyMMdd}", dtFromDate), String.Format("{0:yyyyMMdd}", dtToDate), LOCarID);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return (double)ds.Tables[0].Rows[0][0];

            return 0;
        }

        public DataSet GetListByAllocateItemID(int iAllocateItemID)
        {
            string query = string.Format("Select * from GLVoucherItems Where AAStatus = 'Alive' And GLVoucherItemCustomerAmt > 0 And FK_LOCarAllocateItemID={0} and FK_GLVoucherID In(Select GLVoucherID From GLVouchers Where AAStatus = 'Alive' )", iAllocateItemID);
            return  dal.GetDataSet(query);
        }

        public DataSet GetAllObjectByCustomerIDAndTranCfgID(int ARCustomerID, int GLTranCfgID)
        {
            string strQuery = String.Format(@"SELECT * FROM GLVoucherItems WHERE AAStatus='Alive' AND FK_ARCustomerID={0} AND FK_GLVoucherID IN (SELECT GLVoucherID FROM GLVouchers WHERE AAStatus='Alive' AND FK_GLTranCfgID={1})", ARCustomerID, GLTranCfgID);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetDataForPostJournalMainGroup(int piVoucherID)
        {
            string strQuery = String.Format(@"
SELECT  GLVoucherItemID ,
        GLVoucherItemJournalGroup ,
        CASE WHEN GLVoucherItemDebitAmt > 0 THEN 'D'
             ELSE 'C'
        END AS DC
INTO    #tDC
FROM    GLVoucherItems a
WHERE   AAStatus = 'Alive' AND a.FK_GLVoucherID = {0}
        AND (GLVoucherItemDebitAmt > 0 OR GLVoucherItemCreditAmt > 0)
SELECT  GLVoucherItemJournalGroup ,
        DC
INTO    #tGroup
FROM    #tDC a
GROUP BY GLVoucherItemJournalGroup ,
        DC
HAVING  COUNT(DC) = 1
DELETE  FROM #tGroup
WHERE   DC = 'C'
        AND GLVoucherItemJournalGroup IN (
        SELECT  GLVoucherItemJournalGroup
        FROM    #tGroup
        GROUP BY GLVoucherItemJournalGroup
        HAVING  COUNT(GLVoucherItemJournalGroup) = 2 )

SELECT  a.*
FROM    GLVoucherItems a
        INNER JOIN (SELECT  c.GLVoucherItemID
                    FROM    #tGroup a
                            INNER JOIN #tDC b ON a.GLVoucherItemJournalGroup = b.GLVoucherItemJournalGroup
                                                 AND a.DC = b.DC
                            INNER JOIN GLVoucherItems c ON c.AAStatus = 'Alive' AND  b.GLVoucherItemID = c.GLVoucherItemID
                    ) as b ON a.GLVoucherItemID = b.GLVoucherItemID

DROP TABLE #tGroup
DROP TABLE #tDC

", piVoucherID);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetDataForPostJournalDetailOfMain(int piVoucherID, int piGroup, int piVoucherItemIDMain)
        {
            string strQuery = String.Format(@"
SELECT  a.*
FROM    GLVoucherItems a
WHERE   a.FK_GLVoucherID = {0}
        AND a.AAStatus = 'Alive'
        AND a.GLVoucherItemJournalGroup = {1}
        AND a.GLVoucherItemID <> {2}
", piVoucherID,piGroup,piVoucherItemIDMain);
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAllDataByAPCreditAccount(string strTranStatus, int iGECurrencyID, int iGLCreditAccountID, int iAPSupplierID, int iGLBankID, DateTime dtFromDate, DateTime dtToDate)
        {
            string strStatusCondition = string.Empty;

            //if (strTranStatus == "New")
            //{
            //    strStatusCondition = " AND GLVoucherItemRAmtTot > 0 AND GLVoucherItemRAmtTot= GLVoucherItemAmtTot";
            //}
            //else if (strTranStatus == "Incomplete")
            //{
            //    strStatusCondition = " AND GLVoucherItemRAmtTot < GLVoucherItemAmtTot AND GLVoucherItemRAmtTot > 0";
            //}
            //else if (strTranStatus == "Completed")
            //{
            //    strStatusCondition = " AND GLVoucherItemRAmtTot = 0";
            //}
            strStatusCondition = " AND GLVoucherItemRAmtTot > 0";
            string strQuery = string.Format(@"
SELECT  dbo.GLVoucherItems.*,GLVoucherNo,GLVoucherDate,GLVouchers.FK_GECurrencyID as FK_GECurrencyIDMain,GLVoucherExcRate,GLVouchers.FK_GLTranCfgID as FK_GLTranCfgIDMain
FROM    dbo.GLVoucherItems
    INNER JOIN dbo.GLVouchers ON GLVouchers.GLVoucherID = GLVoucherItems.FK_GLVoucherID
    INNER JOIN dbo.GLAccounts ON dbo.GLVoucherItems.FK_GLCreditAccountID = dbo.GLAccounts.GLAccountID
    AND dbo.GLAccounts.AAStatus = 'Alive' AND dbo.GLAccounts.GLAccountTypeCombo = 'AP'
    AND dbo.GLVouchers.AAStatus = 'Alive'
    AND dbo.GLVoucherItems.AAStatus = 'Alive'
    AND dbo.GLVouchers.AAPostStatus='Post'
    AND ( dbo.GLVouchers.FK_GECurrencyID = {0}
        OR {0} = 0
        )
    AND ( dbo.GLVoucherItems.FK_GLCreditAccountID = {1}
        OR {1} = 0
        )
    AND ( dbo.GLVoucherItems.FK_APSupplierID = {2}
        OR {2} = 0
        )
    AND ( GLVouchers.FK_GLBankID = {6} OR dbo.GLVoucherItems.FK_GLBankID = {6} OR {6} = 0
        )
    AND dbo.GLVoucherItems.FK_APSupplierID > 0
    AND ( CONVERT(VARCHAR(20), dbo.GLVouchers.GLVoucherDate, 112) BETWEEN '{3}' AND '{4}')
    {5}", iGECurrencyID, iGLCreditAccountID, iAPSupplierID, dtFromDate.ToString("yyyyMMdd"), dtToDate.ToString("yyyyMMdd"), strStatusCondition, iGLBankID);
            return GetDataSet(strQuery);

        }
        public DataSet GetAllDataByAPDebitAccount(string strTranStatus, int iGECurrencyID, int iGLDebitAccountID, int iAPSupplierID, int iGLBankID, DateTime dtFromDate, DateTime dtToDate)
        {
            string strStatusCondition = string.Empty;

            //if (strTranStatus == "New")
            //{
            //    strStatusCondition = " AND GLVoucherRAmtTot > 0 AND GLVoucherRAmtTot= GLVoucherAmtTot";
            //}
            //else if (strTranStatus == "Incomplete")
            //{
            //    strStatusCondition = " AND GLVoucherRAmtTot < GLVoucherAmtTot AND GLVoucherRAmtTot > 0";
            //}
            //else if (strTranStatus == "Completed")
            //{
            //    strStatusCondition = " AND GLVoucherRAmtTot = 0";
            //}
            strStatusCondition = " AND GLVoucherItemRAmtTot <> 0";
            string strQuery = string.Format(@"
SELECT  GLVoucherItems.*,GLVouchers.FK_GECurrencyID as FK_GECurrencyIDMain,GLVouchers.FK_GLTranCfgID as FK_GLTranCfgIDMain,GLVoucherExcRate
INTO #ViewKQ
FROM    dbo.GLVoucherItems
INNER JOIN dbo.GLVouchers ON GLVouchers.GLVoucherID = GLVoucherItems.FK_GLVoucherID
INNER JOIN dbo.GLAccounts ON dbo.GLVoucherItems.FK_GLDebitAccountID = dbo.GLAccounts.GLAccountID
    AND dbo.GLAccounts.AAStatus = 'Alive' AND dbo.GLAccounts.GLAccountTypeCombo = 'AP'
    AND dbo.GLVouchers.AAStatus = 'Alive'
    AND dbo.GLVoucherItems.AAStatus = 'Alive'
    AND dbo.GLVouchers.AAPostStatus='Post'
    AND ( dbo.GLVoucherItems.FK_GECurrencyID = {0} OR (dbo.GLVoucherItems.FK_GECurrencyID = 0 AND dbo.GLVouchers.FK_GECurrencyID = {0}) OR {0} = 0
        )
    AND ( dbo.GLVoucherItems.FK_GLDebitAccountID = {1}
        OR {1} = 0
        )
    AND ( dbo.GLVoucherItems.FK_APSupplierID = {2}
        OR {2} = 0
        )
    AND ( GLVouchers.FK_GLBankID = {6} OR dbo.GLVoucherItems.FK_GLBankID = {6} OR {6} = 0
        )
    AND dbo.GLVoucherItems.FK_APSupplierID > 0
    AND ( CONVERT(VARCHAR(20), dbo.GLVouchers.GLVoucherDate, 112) BETWEEN '{3}' AND '{4}')
    {5}

UPDATE #ViewKQ
SET AASelected = 0,FK_GLTranCfgID = FK_GLTranCfgIDMain

UPDATE #ViewKQ
SET FK_GECurrencyID = FK_GECurrencyIDMain,
    GLVoucherItemExcRate = GLVoucherExcRate
WHERE FK_GECurrencyID = 0

SELECT * FROM #ViewKQ

DROP TABLE #ViewKQ
", iGECurrencyID, iGLDebitAccountID, iAPSupplierID, dtFromDate.ToString("yyyyMMdd"), dtToDate.ToString("yyyyMMdd"), strStatusCondition, iGLBankID);
            return GetDataSet(strQuery);

        }

        // Lấy danh sách chứng từ phát sinh bên Có tài khoản phải thu
        public DataSet GetAllDataByARCreditAccount(string strTranStatus, int iGECurrencyID, int iGLCreditAccountID, int iARCustomerID, DateTime dtFromDate, DateTime dtToDate, int iHREmployeeID, ARCustomersInfo objARCustomer, String strModule)
        {
            string strStatusCondition = string.Empty;

            //if (strTranStatus == "New")
            //{
            //    strStatusCondition = " AND GLVoucherItemRAmtTot > 0 AND GLVoucherItemRAmtTot= GLVoucherItemAmtTot";
            //}
            //else if (strTranStatus == "Incomplete")
            //{
            //    strStatusCondition = " AND GLVoucherItemRAmtTot < GLVoucherItemAmtTot AND GLVoucherItemRAmtTot > 0";
            //}
            //else if (strTranStatus == "Completed")
            //{
            //    strStatusCondition = " AND GLVoucherItemRAmtTot = 0";
            //}
            strStatusCondition = " AND GLVoucherItemRAmtTot <> 0";
            string strQuery = string.Format(@"
SELECT  GLVoucherItems.*
    ,GLVouchers.FK_GLTranCfgID as FK_GLTranCfgIDMain
INTO #tKQ
FROM    dbo.GLVoucherItems 
INNER JOIN dbo.GLVouchers ON GLVouchers.GLVoucherID = GLVoucherItems.FK_GLVoucherID
INNER JOIN dbo.GLAccounts ON dbo.GLVoucherItems.FK_GLCreditAccountID = dbo.GLAccounts.GLAccountID
    AND dbo.GLAccounts.AAStatus = 'Alive' AND dbo.GLAccounts.GLAccountTypeCombo = 'AR'
    AND dbo.GLVouchers.AAStatus = 'Alive'
    AND dbo.GLVoucherItems.AAStatus = 'Alive'
    AND dbo.GLVouchers.AAPostStatus='Post'
    AND ( dbo.GLVouchers.FK_GECurrencyID = {0}
        OR {0} = 0
        )
    AND ( dbo.GLVoucherItems.FK_GLCreditAccountID = {1}
        OR {1} = 0
        )
    AND ( dbo.GLVoucherItems.FK_ARCustomerID = {2}
        OR {2} = 0
        )
    AND ( dbo.GLVoucherItems.FK_HREmployeeID = {6}
        OR {6} = 0
        )
    AND (dbo.GLVoucherItems.FK_ARCustomerID > 0 OR (dbo.GLVoucherItems.FK_HREmployeeID > 0 AND dbo.GLVoucherItems.FK_ARCustomerID = 0))
    AND ( dbo.GLVouchers.GLVoucherDate BETWEEN '{3}' AND '{4}')
    {5}
UPDATE #tKQ
    SET FK_HREmployeeID = 0 WHERE FK_ARCustomerID > 0

UPDATE #tKQ
    SET FK_GECurrencyID = b.FK_GECurrencyID
        ,GLVoucherItemExcRate = b.GLVoucherExcRate
        FROM #tKQ a 
            INNER JOIN GLVouchers b ON a.FK_GLVoucherID = b.GLVoucherID AND b.AAStatus = 'Alive'
                    AND a.FK_GECurrencyID = 0

        
UPDATE #tKQ
    SET AASelected = 0
        ,GLVoucherItemCreditFAmt = 0
        ,GLVoucherItemCreditAmt = 0
        ,FK_GLTranCfgID = FK_GLTranCfgIDMain
SELECT * FROM #tKQ
", iGECurrencyID, iGLCreditAccountID, iARCustomerID, dtFromDate.ToString("yyyyMMdd"), dtToDate.ToString("yyyyMMdd"), strStatusCondition, iHREmployeeID);
            return GetDataSet(strQuery);

        }
        //(V.Hung add 12/01/2016 Lấy danh sách thanh toán theo TK có phải thu, đối tượng và thời gian tìm kiếm
        public DataSet GetAllDataByARDebitAccount(string strTranStatus, int iGECurrencyID, int iGLDebitAccountID, int iARCustomerID, DateTime dtFromDate, DateTime dtToDate, int iHREmployeeID, ARCustomersInfo objARCustomer, String strModule)
        {
            ARCustomersController objARCustomersCtrl = new ARCustomersController();
            string strStatusCondition = string.Empty;

            //if (strTranStatus == "New")
            //{
            //    strStatusCondition = " AND GLVoucherRAmtTot > 0 AND GLVoucherRAmtTot= GLVoucherAmtTot";
            //}
            //else if (strTranStatus == "Incomplete")
            //{
            //    strStatusCondition = " AND GLVoucherRAmtTot < GLVoucherAmtTot AND GLVoucherRAmtTot > 0";
            //}
            //else if (strTranStatus == "Completed")
            //{
            //    strStatusCondition = " AND GLVoucherRAmtTot = 0";
            //}

            string sKeyCustomer = string.Format("AND (dbo.GLVoucherItems.FK_ARCustomerID = {0} OR {0} = 0)", iARCustomerID); //objARCustomersCtrl.GenKeyCustomerByOCode(iARCustomerID, objARCustomer, "dbo.GLVoucherItems.FK_ARCustomerID", strModule, false);


            strStatusCondition = " AND GLVoucherItemRAmtTot > 0";
            string strQuery = string.Format(@"
SELECT  dbo.GLVoucherItems.*,GLVoucherNo,GLVoucherDate,GLVouchers.FK_GECurrencyID as FK_GECurrencyIDMain,GLVoucherExcRate,GLVouchers.FK_GLTranCfgID as FK_GLTranCfgIDMain
INTO #tKQ
FROM    dbo.GLVoucherItems
    INNER JOIN dbo.GLVouchers ON GLVouchers.GLVoucherID = GLVoucherItems.FK_GLVoucherID
    INNER JOIN dbo.GLAccounts ON dbo.GLVoucherItems.FK_GLDebitAccountID = dbo.GLAccounts.GLAccountID
    AND dbo.GLAccounts.AAStatus = 'Alive' AND dbo.GLAccounts.GLAccountTypeCombo = 'AR'
    AND dbo.GLVouchers.AAStatus = 'Alive'
    AND dbo.GLVoucherItems.AAStatus = 'Alive'
    AND dbo.GLVouchers.AAPostStatus='Post'
    AND ( dbo.GLVoucherItems.FK_GECurrencyID = {0} OR (dbo.GLVoucherItems.FK_GECurrencyID = 0 AND dbo.GLVouchers.FK_GECurrencyID = {0}) OR {0} = 0
        )
    AND ( dbo.GLVoucherItems.FK_GLDebitAccountID = {1}
        OR {1} = 0
        )
    {2}
    AND ( dbo.GLVoucherItems.FK_HREmployeeID = {6}
        OR {6} = 0
        )
    AND (dbo.GLVoucherItems.FK_ARCustomerID > 0 OR (dbo.GLVoucherItems.FK_HREmployeeID > 0 AND dbo.GLVoucherItems.FK_ARCustomerID = 0))
    AND ( CONVERT(VARCHAR(20), dbo.GLVouchers.GLVoucherDate, 112) BETWEEN '{3}' AND '{4}')
    {5}
UPDATE #tKQ
    SET FK_HREmployeeID = 0 WHERE FK_ARCustomerID > 0
SELECT * FROM #tKQ
", iGECurrencyID, iGLDebitAccountID, sKeyCustomer, dtFromDate.ToString("yyyyMMdd"), dtToDate.ToString("yyyyMMdd"), strStatusCondition, iHREmployeeID);
            return GetDataSet(strQuery);

        }

    }
    #endregion
}