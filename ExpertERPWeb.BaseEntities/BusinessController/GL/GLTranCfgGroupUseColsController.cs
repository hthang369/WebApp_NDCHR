using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region GLTranCfgGroupUseCols
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:GLTranCfgGroupUseColsController
	//Created Date:Thursday, August 28, 2014
	//-----------------------------------------------------------
	
	public class GLTranCfgGroupUseColsController:BaseBusinessController
	{
		public GLTranCfgGroupUseColsController()
		{
			dal= new DALBaseProvider("GLTranCfgGroupUseCols",typeof(GLTranCfgGroupUseColsInfo));
		}
        public DataSet GetDataByTranCfgGroupID(int piTranCfgGroupID, string psNotINID = "")
        {
            String strQuery = String.Format(@"SELECT  a.GLTranCfgGroupUseColID as FK_GLTranCfgGroupUseColID
    ,CASE WHEN b.AAColumnAliasCaption is null THEN GLTranCfgGroupUseColField ELSE b.AAColumnAliasCaption END as AAColumnAliasCaption  
FROM    GLTranCfgGroupUseCols a
        LEFT JOIN ( SELECT AATableName ,
                            AAColumnAliasName ,
                            AAColumnAliasCaption
                     FROM   dbo.AAColumnAlias a
                            INNER JOIN ( SELECT MAX(AAColumnAliasID) AS AAColumnAliasID
                                         FROM   dbo.AAColumnAlias
                                         GROUP BY AAColumnAliasName ,
                                                AATableName
                                       ) b ON a.AAColumnAliasID = b.AAColumnAliasID
                   ) b ON b.AATableName = GLTranCfgGroupUseColTable
                          AND b.AAColumnAliasName = a.GLTranCfgGroupUseColField");
            if (piTranCfgGroupID > 0)
            {
                strQuery += String.Format(@"
                            WHERE FK_GLTranCfgGroupID = {0}", piTranCfgGroupID);
                if (psNotINID != "")
                    strQuery += String.Format(@"
                            AND GLTranCfgGroupUseColID NOT IN ({0})", psNotINID);
            }
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAllDataByTranCfgIDANDTableName(int iTranCfgID, string strTableName)
        {
            string strQuery = string.Format(@"SELECT  *
                                            FROM    dbo.GLTranCfgGroupUseCols INNER JOIN GLTranCfgUseCols
                                             ON dbo.GLTranCfgUseCols.FK_GLTranCfgGroupUseColID = dbo.GLTranCfgGroupUseCols.GLTranCfgGroupUseColID
                                            WHERE   FK_GLTranCfgID = {0}
                                                    AND GLTranCfgGroupUseColTable = '{1}'", iTranCfgID, strTableName);
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAAColumnAliasNameByTableName(String strTableName)
        {
            String strquery = string.Format(@"SELECT    AATableName ,
                                                        AAColumnAliasName AS GLTranCfgGroupDefaultValueField ,
                                                        AAColumnAliasCaption
                                                FROM    dbo.AAColumnAlias a
                                                        INNER JOIN ( SELECT MAX(AAColumnAliasID) AS AAColumnAliasID
                                                                     FROM   dbo.AAColumnAlias
                                                                     WHERE  AATableName = '{0}'
                                                                     GROUP BY AAColumnAliasName ,
                                                                            AATableName
                                                                   ) b ON a.AAColumnAliasID = b.AAColumnAliasID",strTableName);
            return GetDataSet(strquery);
        }
	}
	#endregion
}