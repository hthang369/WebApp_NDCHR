using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
    #region GLObjects
    //-----------------------------------------------------------
    //Generated By: Expert Studio
    //Class:GLObjectsController
    //Created Date:04 Tháng Bảy 2014
    //-----------------------------------------------------------

    public class GLObjectsController : BaseBusinessController
    {
        public GLObjectsController()
        {
            dal = new DALBaseProvider("GLObjects", typeof(GLObjectsInfo));
        }
        public GLObjectsInfo GetObjectByTypeObjectRefID(string strObjectType, int iObjectRefID)
        {
            string strQuery = string.Format(@"SELECT * FROM dbo.GLObjects WHERE AAStatus='Alive'
                                                AND GLObjectType='{0}' AND FK_ObjectRefID = {1}", strObjectType, iObjectRefID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (GLObjectsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);

            return null;
        }
        public DataSet GetObjectByType(string strObjectType)
        {
            string strQuery = string.Format(@"SELECT * FROM dbo.GLObjects WHERE GLObjectID = 0 
UNION SELECT * FROM dbo.GLObjects WHERE AAStatus='Alive'
                                                AND GLObjectType='{0}'", strObjectType);
            return dal.GetDataSet(strQuery);
        }

        public GLObjectsInfo GetObjectByObjectTypeANDObjectNo(string strGLObjectType, string strGLObjectNo)
        {
            string strQuery = string.Format(@"SELECT * FROM GLObjects 
                                            WHERE AAStatus = 'Alive' 
                                            AND GLObjectType = '{0}' 
                                            AND GLObjectNo = N'{1}'"
                                            , strGLObjectType, strGLObjectNo);
            DataSet ds = GetDataSet(strQuery);
            if (ds != null && ds.Tables[0] != null && ds.Tables[0].Rows.Count > 0)
                return (GLObjectsInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);

            return null;
        }
        public GLObjectsInfo GetObjectByTypeANDRefObject(string strtype, int iRefObjectID)
        {
            string strQuery = string.Format(@"SELECT * FROM GLObjects WHERE AAStatus = 'Alive' 
                                                                AND GLObjectType = '{0}' AND FK_ObjectRefID = {1}", strtype, iRefObjectID);
            DataSet ds = GetDataSet(strQuery);
            if (ds != null && ds.Tables[0] != null && ds.Tables[0].Rows.Count > 0)
                return (GLObjectsInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);

            return null;
        }
    }
    #endregion
}