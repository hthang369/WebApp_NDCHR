using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region GLPeriodEquipmentAllocateItems
	//-----------------------------------------------------------
	//Generated By: Expert Studio
	//Class:GLPeriodEquipmentAllocateItemsController
	//Created Date:Tuesday, May 24, 2011
	//-----------------------------------------------------------
	
	public class GLPeriodEquipmentAllocateItemsController:BaseBusinessController
	{
		public GLPeriodEquipmentAllocateItemsController()
		{
			dal= new DALBaseProvider("GLPeriodEquipmentAllocateItems",typeof(GLPeriodEquipmentAllocateItemsInfo));
		}

        public int GetCountPeriodAllocated(int iEquipmentAllocateID)
        {
            String strQuery = String.Format(@"SELECT Count(*) FROM GLPeriodEquipmentAllocateItems WHERE AAStatus = 'Alive' AND FK_GLEquipmentAllocateID = {0}
                                              AND FK_GLPeriodEquipmentAllocateID IN (SELECT GLPeriodEquipmentAllocateID From GLPeriodEquipmentAllocates WHERE AAStatus = 'Alive')", iEquipmentAllocateID);

            DataSet ds = GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0
                && ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToInt32(ds.Tables[0].Rows[0][0]);
            }

            return 0;
        }
        public double GetSumAllocatedFAmt(int iEquipmentAllocateID)
        {
            return GetSumByCol(iEquipmentAllocateID, "GLPeriodEquipmentAllocateItemShipFAmt");
        }
        public double GetSumAllocatedAmt(int iEquipmentAllocateID)
        {
            return GetSumByCol(iEquipmentAllocateID, "GLPeriodEquipmentAllocateItemShipAmt");
        }
        public double GetSumByCol(int iEquipmentAllocateID, string sCol)
        {
            String strQuery = String.Format(@"SELECT SUM({1})
FROM GLPeriodEquipmentAllocateItems 
WHERE AAStatus = 'Alive' AND FK_GLEquipmentAllocateID = {0}
    AND FK_GLPeriodEquipmentAllocateID IN (SELECT GLPeriodEquipmentAllocateID From GLPeriodEquipmentAllocates WHERE AAStatus = 'Alive')", iEquipmentAllocateID,sCol);

            DataSet ds = GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0
                && ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }

            return 0;
        }
        // lấy tổng giá trị CCDC đã phân bổ đầu kỳ.
        public double GetSumShipAmtEquipmentFirstYear(int iYear, int iMonth, int ProductID)
        {
            String strQuery = "";
            if (iMonth > 0)
            {
                strQuery = String.Format(@" SELECT  SUM(GLPeriodEquipmentAllocateItems.GLPeriodEquipmentAllocateItemShipAmt)
                                                FROM    ( SELECT    GLPeriodEquipmentAllocates.GLPeriodEquipmentAllocateID
                                                          FROM      dbo.GLPeriodEquipmentAllocates GLPeriodEquipmentAllocates
                                                          WHERE     GLPeriodEquipmentAllocates.AAStatus = 'Alive'
                                                                    AND GLPeriodEquipmentAllocates.GLPeriodEquipmentAllocateYear
                                                                    * 12
                                                                    + GLPeriodEquipmentAllocates.GLPeriodEquipmentAllocatePeriod < {0}
                                                                    * 12 + {1}
                                                        ) AS TB
                                                        INNER JOIN dbo.GLPeriodEquipmentAllocateItems GLPeriodEquipmentAllocateItems ON FK_GLPeriodEquipmentAllocateID = TB.GLPeriodEquipmentAllocateID
                                                                                                              AND GLPeriodEquipmentAllocateItems.FK_ICProductID = {2}
                                                                                                              AND GLPeriodEquipmentAllocateItems.AAStatus = 'Alive'", iYear, iMonth, ProductID);
            }
            else
            {
                strQuery = String.Format(@" SELECT  SUM(GLPeriodEquipmentAllocateItems.GLPeriodEquipmentAllocateItemShipAmt)
                                                FROM    ( SELECT    GLPeriodEquipmentAllocates.GLPeriodEquipmentAllocateID
                                                          FROM      dbo.GLPeriodEquipmentAllocates GLPeriodEquipmentAllocates
                                                          WHERE     GLPeriodEquipmentAllocates.AAStatus = 'Alive'
                                                                    AND GLPeriodEquipmentAllocates.GLPeriodEquipmentAllocateYear < {0}
                                                        ) AS TB
                                                        INNER JOIN dbo.GLPeriodEquipmentAllocateItems GLPeriodEquipmentAllocateItems ON FK_GLPeriodEquipmentAllocateID = TB.GLPeriodEquipmentAllocateID
                                                                                                              AND GLPeriodEquipmentAllocateItems.FK_ICProductID = {1}
                                                                                                              AND GLPeriodEquipmentAllocateItems.AAStatus = 'Alive'", iYear, ProductID);
            }

            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return 0;
        }
        public double GetSumShipFAmtEquipmentFirstYear(int iYear, int iMonth, int ProductID)
        {
            String strQuery = "";
            if (iMonth > 0)
            {
                strQuery = String.Format(@" SELECT  SUM(GLPeriodEquipmentAllocateItems.GLPeriodEquipmentAllocateItemShipFAmt)
                                                FROM    ( SELECT    GLPeriodEquipmentAllocates.GLPeriodEquipmentAllocateID
                                                          FROM      dbo.GLPeriodEquipmentAllocates GLPeriodEquipmentAllocates
                                                          WHERE     GLPeriodEquipmentAllocates.AAStatus = 'Alive'
                                                                    AND GLPeriodEquipmentAllocates.GLPeriodEquipmentAllocateYear
                                                                    * 12
                                                                    + GLPeriodEquipmentAllocates.GLPeriodEquipmentAllocatePeriod < {0}
                                                                    * 12 + {1}
                                                        ) AS TB
                                                        INNER JOIN dbo.GLPeriodEquipmentAllocateItems GLPeriodEquipmentAllocateItems ON FK_GLPeriodEquipmentAllocateID = TB.GLPeriodEquipmentAllocateID
                                                                                                              AND GLPeriodEquipmentAllocateItems.FK_ICProductID = {2}
                                                                                                              AND GLPeriodEquipmentAllocateItems.AAStatus = 'Alive'", iYear, iMonth, ProductID);
            }
            else
            {
                strQuery = String.Format(@" SELECT  SUM(GLPeriodEquipmentAllocateItems.GLPeriodEquipmentAllocateItemShipFAmt)
                                                FROM    ( SELECT    GLPeriodEquipmentAllocates.GLPeriodEquipmentAllocateID
                                                          FROM      dbo.GLPeriodEquipmentAllocates GLPeriodEquipmentAllocates
                                                          WHERE     GLPeriodEquipmentAllocates.AAStatus = 'Alive'
                                                                    AND GLPeriodEquipmentAllocates.GLPeriodEquipmentAllocateYear < {0}
                                                        ) AS TB
                                                        INNER JOIN dbo.GLPeriodEquipmentAllocateItems GLPeriodEquipmentAllocateItems ON FK_GLPeriodEquipmentAllocateID = TB.GLPeriodEquipmentAllocateID
                                                                                                              AND GLPeriodEquipmentAllocateItems.FK_ICProductID = {1}
                                                                                                              AND GLPeriodEquipmentAllocateItems.AAStatus = 'Alive'", iYear, ProductID);
            }

            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return 0;
        }
        // Lấy tông số tháng khấu hao sau khi phân bổ
        public double GetCountMonthShipAmtEquipmentLastYear(int iYear, int iMonth, int ProductID)
        {
            String strQuery = "";
            if (iMonth > 0)
            {
                strQuery = String.Format(@" SELECT  COUNT(GLPeriodEquipmentAllocateItems.GLPeriodEquipmentAllocateItemShipAmt)
                                                FROM    ( SELECT    GLPeriodEquipmentAllocates.GLPeriodEquipmentAllocateID
                                                          FROM      dbo.GLPeriodEquipmentAllocates GLPeriodEquipmentAllocates
                                                          WHERE     GLPeriodEquipmentAllocates.AAStatus = 'Alive'
                                                                    AND GLPeriodEquipmentAllocates.GLPeriodEquipmentAllocateYear
                                                                    * 12
                                                                    + GLPeriodEquipmentAllocates.GLPeriodEquipmentAllocatePeriod <= {0}
                                                                    * 12 + {1}
                                                        ) AS TB
                                                        INNER JOIN dbo.GLPeriodEquipmentAllocateItems GLPeriodEquipmentAllocateItems ON FK_GLPeriodEquipmentAllocateID = TB.GLPeriodEquipmentAllocateID
                                                                                                              AND GLPeriodEquipmentAllocateItems.FK_ICProductID = {2}
                                                                                                              AND GLPeriodEquipmentAllocateItems.AAStatus = 'Alive'", iYear, iMonth, ProductID);
            }
            else
            {
                strQuery = String.Format(@" SELECT  COUNT(GLPeriodEquipmentAllocateItems.GLPeriodEquipmentAllocateItemShipAmt)
                                                FROM    ( SELECT    GLPeriodEquipmentAllocates.GLPeriodEquipmentAllocateID
                                                          FROM      dbo.GLPeriodEquipmentAllocates GLPeriodEquipmentAllocates
                                                          WHERE     GLPeriodEquipmentAllocates.AAStatus = 'Alive'
                                                                    AND GLPeriodEquipmentAllocates.GLPeriodEquipmentAllocateYear <= {0}
                                                        ) AS TB
                                                        INNER JOIN dbo.GLPeriodEquipmentAllocateItems GLPeriodEquipmentAllocateItems ON FK_GLPeriodEquipmentAllocateID = TB.GLPeriodEquipmentAllocateID
                                                                                                              AND GLPeriodEquipmentAllocateItems.FK_ICProductID = {1}
                                                                                                              AND GLPeriodEquipmentAllocateItems.AAStatus = 'Alive'", iYear, ProductID);
            }

            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return 0;
        }
        // lấy giá trị thanh lý CCDC đầu kỳ
        public double GetDatasetGLEquipmentDecreaseItemRAmt(int iYear, int ProductID)
        {
            String strQuery = String.Format(@"  SELECT (GLEquipmentDecreaseItemRAmt)
                                                    FROM dbo.GLEquipmentDecreaseItems
                                                    WHERE AAStatus = 'Alive'
                                                    AND FK_ICProductID 
	                                                    IN (
		                                                    SELECT ICProductID 
		                                                    FROM 
			                                                    dbo.ICProducts
		                                                    WHERE 
			                                                    AAStatus = 'Alive' AND ICProductID ={1}
	                                                    )
                                                    AND FK_GLEquipmentDecreaseID
	                                                    IN	(
		                                                    SELECT GLEquipmentDecreaseID 
		                                                    FROM 
			                                                    dbo.GLEquipmentDecreases 
		                                                    WHERE 
			                                                    AAStatus = 'Alive' 
			                                                    AND YEAR(GLEquipmentDecreaseDate)={0} - 1
	                                                    )", iYear, ProductID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return 0;
        }

        // lấy danh sách  phân bổ công cụ dụng cụ trong năm dựa vào biến năm đưa vào.
        public DataSet GetDatasetPeriodEquipmentInYear(int iYear)
        {
            String strQuery = String.Format(@"SELECT * FROM dbo.GLPeriodEquipmentAllocateItems
                                                        WHERE AAStatus = 'Alive' 
                                                        AND FK_GLEquipmentAllocateID IN(
									                                                        SELECT GLEquipmentAllocateID 
									                                                        FROM dbo.GLEquipmentAllocates 
									                                                        WHERE AAStatus = 'Alive'
								                                                        )
                                                        AND FK_GLPeriodEquipmentAllocateID IN(
										                                                        SELECT GLPeriodEquipmentAllocateID
										                                                        FROM dbo.GLPeriodEquipmentAllocates 
										                                                        WHERE AAStatus = 'Alive' 
										                                                        AND GLPeriodEquipmentAllocateYear = {0}
									                                                        )", iYear);
            return dal.GetDataSet(strQuery);
        }

        // lấy danh sách  phân bổ công cụ dụng cụ trong ky
        public DataSet GetDatasetPeriodEquipment(int iYear, int iMonth)
        {
            String strQuery = String.Format(@"SELECT  *
                                                FROM    dbo.GLPeriodEquipmentAllocateItems
                                                WHERE   AAStatus = 'Alive'
                                                        AND FK_ICProductID IN ( SELECT    FK_ICProductID
                                                                                          FROM      dbo.GLEquipmentAllocates
                                                                                          WHERE     AAStatus = 'Alive' )
                                                        AND FK_GLPeriodEquipmentAllocateID IN (
                                                        SELECT  GLPeriodEquipmentAllocateID
                                                        FROM    dbo.GLPeriodEquipmentAllocates
                                                        WHERE   AAStatus = 'Alive'
                                                                AND GLPeriodEquipmentAllocateYear = {0}
                                                                AND (GLPeriodEquipmentAllocatePeriod = {1}
                                                                OR {1} = 0 ))", iYear, iMonth);
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAllEquipment()
        {
            String strQuery = String.Format(@"  SELECT * FROM dbo.ICProducts
                                                WHERE AAStatus = 'Alive'
                                                AND ICProductTypeCombo = 'Equipment'");
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetDecreaseItemInYearByEquipment(int iYear, int iMonth, int iProduct)// lấy ds thanh lý giá trị CCDC trong từng kỳ nếu có
        {
            String strQuery = "";
            if (iMonth > 0)
            {
                strQuery = String.Format(@"SELECT *
                                                    FROM dbo.GLEquipmentDecreaseItems
                                                    WHERE AAStatus = 'Alive'
                                                    AND FK_ICProductID 
	                                                    IN (
		                                                    SELECT ICProductID 
		                                                    FROM 
			                                                    dbo.ICProducts
		                                                    WHERE 
			                                                    AAStatus = 'Alive' AND ICProductID ={2}
	                                                    )
                                                    AND FK_GLEquipmentDecreaseID
	                                                    IN	(
		                                                    SELECT GLEquipmentDecreaseID 
		                                                    FROM 
			                                                    dbo.GLEquipmentDecreases 
		                                                    WHERE 
			                                                    AAStatus = 'Alive' 
			                                                    AND YEAR(GLEquipmentDecreaseDate)={0}
                                                                AND MONTH(GLEquipmentDecreaseDate)={1}
	                                                    )", iYear, iMonth, iProduct);
            }
            else
            {
                strQuery = String.Format(@"SELECT *
                                                    FROM dbo.GLEquipmentDecreaseItems
                                                    WHERE AAStatus = 'Alive'
                                                    AND FK_ICProductID 
	                                                    IN (
		                                                    SELECT ICProductID 
		                                                    FROM 
			                                                    dbo.ICProducts
		                                                    WHERE 
			                                                    AAStatus = 'Alive' AND ICProductID ={1}
	                                                    )
                                                    AND FK_GLEquipmentDecreaseID
	                                                    IN	(
		                                                    SELECT GLEquipmentDecreaseID 
		                                                    FROM 
			                                                    dbo.GLEquipmentDecreases 
		                                                    WHERE 
			                                                    AAStatus = 'Alive' 
			                                                    AND YEAR(GLEquipmentDecreaseDate)={0}
	                                                    )", iYear, iProduct);
            }
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return ds;
            }
            return null;
        }

        public double GetDeprFAmtByFAAset(int ProductID)
        {
            String strQuery = String.Format(@"  SELECT SUM(GLPeriodEquipmentAllocateItemShipFAmt)
                                                FROM dbo.GLPeriodEquipmentAllocateItems
                                                    WHERE AAStatus = 'Alive'
                                                    AND GLPeriodEquipmentAllocateItems.FK_ICProductID = {0}
                                                    AND FK_GLEquipmentAllocateID IN (SELECT GLEquipmentAllocateID FROM dbo.GLEquipmentAllocates WHERE AAStatus = 'Alive')", ProductID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return 0;
        }

        // Lấy danh sách CCDC chưa thanh lý
        public DataSet GetProductNotInEquipmentDecrease(int iYear, int iMonth)
        {
            String strQuery = "";
            strQuery = String.Format(@"SELECT  ICProducts.*
                                        FROM    dbo.ICProducts ICProducts
                                                INNER JOIN dbo.GLEquipmentAllocates GLEquipmentAllocates ON ICProducts.ICProductID = GLEquipmentAllocates.FK_ICProductID
                                                                                                      AND GLEquipmentAllocates.AAStatus = 'Alive'
                                                                                                      AND ( 
                                                                                                           (
                                                                                                              YEAR(GLEquipmentAllocates.GLEquipmentAllocateUserDate) * 12+ MONTH(GLEquipmentAllocates.GLEquipmentAllocateUserDate) <= {0} * 12 + {1} 
                                                                                                              AND {1} > 0
                                                                                                           )
                                                                                                           OR 
                                                                                                           (
                                                                                                              YEAR(GLEquipmentAllocates.GLEquipmentAllocateUserDate) <= {0} 
                                                                                                              AND {1} = 0
                                                                                                           )
                                                                                                          )
                                                LEFT JOIN ( SELECT  GLEquipmentDecreaseItems.FK_ICProductID
                                                            FROM    dbo.GLEquipmentDecreaseItems GLEquipmentDecreaseItems
                                                                    INNER JOIN dbo.GLEquipmentDecreases GLEquipmentDecreases ON GLEquipmentDecreases.AAStatus = 'Alive'
                                                                                                      AND ( 
                                                                                                           (
                                                                                                              YEAR(GLEquipmentDecreaseDate) * 12+ MONTH(GLEquipmentDecreaseDate) < {0} * 12 + {1} 
                                                                                                              AND {1} > 0
                                                                                                           )
                                                                                                           OR 
                                                                                                           (
                                                                                                              YEAR(GLEquipmentDecreaseDate) < {0} 
                                                                                                              AND {1} = 0
                                                                                                           )
                                                                                                          )
                                                                                                      AND ( GLEquipmentDecreaseItems.GLEquipmentDecreaseItemTypeCombo = 'ThanhLy'
                                                                                                      OR GLEquipmentDecreaseItems.GLEquipmentDecreaseItemTypeCombo = 'BaoMat'
                                                                                                      OR GLEquipmentDecreaseItems.GLEquipmentDecreaseItemTypeCombo = 'BaoHong'
                                                                                                      )
                                                                                                      AND GLEquipmentDecreaseItems.FK_GLEquipmentDecreaseID = GLEquipmentDecreases.GLEquipmentDecreaseID
                                                            WHERE   GLEquipmentDecreaseItems.AAStatus = 'Alive'
                                                          ) AS TB ON ICProducts.ICProductID = TB.FK_ICProductID
                                        WHERE   ICProducts.AAStatus = 'Alive'
                                                AND ICProducts.ICProductTypeCombo = 'Equipment'
                                                AND TB.FK_ICProductID IS NULL", iYear, iMonth);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return ds;
            }
            return null;
        }

        public double GetSumEqipmentDecreaseItemAmtBegin(int iProductID, int iYear, int iMonth)
        {
            String strQuery = "";
            strQuery = String.Format(@"   SELECT SUM(GLEquipmentDecreaseItems.GLEquipmentDecreaseItemAmt)
                                                 FROM   dbo.GLEquipmentDecreaseItems GLEquipmentDecreaseItems
                                                        INNER JOIN dbo.GLEquipmentDecreases GLEquipmentDecreases ON GLEquipmentDecreaseItems.FK_GLEquipmentDecreaseID = GLEquipmentDecreases.GLEquipmentDecreaseID
                                                                                                              AND GLEquipmentDecreaseItems.AAStatus = GLEquipmentDecreases.AAStatus
                                                                                                              AND GLEquipmentDecreases.AAStatus = 'Alive'
                                                                                                              AND GLEquipmentDecreaseItems.FK_ICProductID = {0}
                                                                                                              AND 
                                                                                                                (
                                                                                                                    (
                                                                                                                    YEAR(GLEquipmentDecreases.GLEquipmentDecreaseDate)*12 + MONTH(GLEquipmentDecreases.GLEquipmentDecreaseDate)< {1} *12 +{2} 
                                                                                                                    AND {2}>0
                                                                                                                    )
                                                                                                                    OR
                                                                                                                    (
                                                                                                                    YEAR(GLEquipmentDecreases.GLEquipmentDecreaseDate) < {1}  
                                                                                                                    AND {2}=0
                                                                                                                    )
                                                                                                                )", iProductID, iYear, iMonth);

            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return 0;
        }
        public double GetSumEqipmentDecreaseItemFAmtBegin(int iProductID, int iYear, int iMonth)
        {
            String strQuery = "";
            strQuery = String.Format(@"   SELECT SUM(GLEquipmentDecreaseItems.GLEquipmentDecreaseItemFAmt)
                                                 FROM   dbo.GLEquipmentDecreaseItems GLEquipmentDecreaseItems
                                                        INNER JOIN dbo.GLEquipmentDecreases GLEquipmentDecreases ON GLEquipmentDecreaseItems.FK_GLEquipmentDecreaseID = GLEquipmentDecreases.GLEquipmentDecreaseID
                                                                                                              AND GLEquipmentDecreaseItems.AAStatus = GLEquipmentDecreases.AAStatus
                                                                                                              AND GLEquipmentDecreases.AAStatus = 'Alive'
                                                                                                              AND GLEquipmentDecreaseItems.FK_ICProductID = {0}
                                                                                                              AND 
                                                                                                                (
                                                                                                                    (
                                                                                                                    YEAR(GLEquipmentDecreases.GLEquipmentDecreaseDate)*12 + MONTH(GLEquipmentDecreases.GLEquipmentDecreaseDate)< {1} *12 +{2} 
                                                                                                                    AND {2}>0
                                                                                                                    )
                                                                                                                    OR
                                                                                                                    (
                                                                                                                    YEAR(GLEquipmentDecreases.GLEquipmentDecreaseDate) < {1}  
                                                                                                                    AND {2}=0
                                                                                                                    )
                                                                                                                )", iProductID, iYear, iMonth);
            
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return 0;
        }

        public GLPeriodEquipmentAllocateItemsInfo GetLastAllocateItem(int iICProductID)
        {
            string strQuery = string.Format(@"SELECT TOP 1
                                    GLPeriodEquipmentAllocateItems.*
                            FROM    dbo.GLPeriodEquipmentAllocateItems
                                    INNER JOIN dbo.GLPeriodEquipmentAllocates ON dbo.GLPeriodEquipmentAllocateItems.FK_GLPeriodEquipmentAllocateID = dbo.GLPeriodEquipmentAllocates.GLPeriodEquipmentAllocateID
                                                                                 AND dbo.GLPeriodEquipmentAllocateItems.AAStatus = 'Alive'
                                                                                 AND dbo.GLPeriodEquipmentAllocates.AAStatus = 'Alive'
                                                                                 AND FK_ICProductID = {0}
                            ORDER BY GLPeriodEquipmentAllocateItemYear DESC ,
                                    GLPeriodEquipmentAllocateItemPeriod DESC", iICProductID);

            GLPeriodEquipmentAllocateItemsInfo objGLPeriodEquipmentAllocateItemInfo = null;
            DataSet ds = GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                objGLPeriodEquipmentAllocateItemInfo = (GLPeriodEquipmentAllocateItemsInfo) GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return objGLPeriodEquipmentAllocateItemInfo;

        }

        // V.Hung add 24/08/2015 Lấy danh sách phân bổ cho CCDC
        public DataSet GetAllDataByProduct(int iICProductID)
        {
            string strQuery = string.Format(@"SELECT  dbo.GLPeriodEquipmentAllocateItems.*
                                            FROM    dbo.GLPeriodEquipmentAllocateItems
                                                    INNER JOIN dbo.GLPeriodEquipmentAllocates ON dbo.GLPeriodEquipmentAllocateItems.FK_GLPeriodEquipmentAllocateID = dbo.GLPeriodEquipmentAllocates.GLPeriodEquipmentAllocateID
                                                     AND dbo.GLPeriodEquipmentAllocateItems.AAStatus = 'Alive'
                                                     AND dbo.GLPeriodEquipmentAllocates.AAStatus = 'Alive'
                                                     AND FK_ICProductID = {0}", iICProductID);
            return GetDataSet(strQuery);
        }

        public DataSet GetAllDataQueryEquipmentAllocate(int iPeriod = 0, int iYear = 0, bool viewDetail = false)
        {
            string strPeriod = "", strYear = "", strViewDetail = "", strViewCols = "";
            if (iPeriod > 0) strPeriod = string.Format(" AND GLPeriodEquipmentAllocateItemPeriod = {0}", iPeriod);
            if (iYear > 0) strYear = string.Format(" AND GLPeriodEquipmentAllocateItemYear = {0}", iYear);
            if (viewDetail)
            {
                strViewDetail = " LEFT JOIN GLCostDistDtls as c ON a.FK_GLCostDistID = c.FK_GLCostDistID";
                strViewCols = ",c.GLTOF01Combo,c.GLTOF02Combo,c.GLTOF03Combo,c.GLTOF04Combo";
            }
            string strQuery = string.Format(@"SELECT a.FK_ICProductID,FK_GLEquipmentAllocateID,FK_GLPeriodEquipmentAllocateID,
                                                a.FK_GLCostDistID,GLPeriodEquipmentAllocateItemShipAmt as ViewQueryDeprAmt,
                                                GLPeriodEquipmentAllocateItemShipFAmt as ViewQueryDeprFAmt,
                                                GLPeriodEquipmentAllocateItemAllocateAmt as ViewQueryItemAmt,
                                                (GLPeriodEquipmentAllocateItemAllocateAmt / GLEquipmentAllocateExcRate) as ViewQueryItemFAmt,
                                                GLPeriodEquipmentAllocateItemRAmt as ViewQueryCurrentNetBookAmt,
                                                (GLPeriodEquipmentAllocateItemRAmt / GLEquipmentAllocateExcRate) as ViewQueryCurrentNetBookFAmt,
                                                GLPeriodEquipmentAllocateItemLastRAmt as ViewQueryNetBookAmt,
                                                (GLPeriodEquipmentAllocateItemLastRAmt / GLEquipmentAllocateExcRate) as ViewQueryNetBookFAmt {2}
                                            FROM GLPeriodEquipmentAllocateItems as a
                                            JOIN GLEquipmentAllocates as b ON a.FK_GLEquipmentAllocateID = b.GLEquipmentAllocateID {3}
                                            WHERE a.AAStatus = 'Alive' AND b.AAStatus = 'Alive' {0} {1}
                                            ORDER BY GLPeriodEquipmentAllocateItemPeriod, GLPeriodEquipmentAllocateItemYear", strPeriod, strYear, strViewCols, strViewDetail);
            return GetDataSet(strQuery);
        }
	}
	#endregion
}