using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
    #region GLCostAllocates
    //-----------------------------------------------------------
    //Generated By: Expert Studio
    //Class:GLCostAllocatesController
    //Created Date:Friday, July 22, 2011
    //-----------------------------------------------------------

    public class GLCostAllocatesController : BaseBusinessController
    {
        public GLCostAllocatesController()
        {
            dal = new DALBaseProvider("GLCostAllocates", typeof(GLCostAllocatesInfo));
        }

        public DataSet GetAllCostAllocatesByDocumentNo(String strDocNo)
        {
            String strQuery = String.Format("SELECT * FROM GLCostAllocates WHERE GLCostAllocateDocNo = '{0}' AND AAStatus = 'Alive'", strDocNo);
            return dal.GetDataSet(strQuery);
        }

        public GLCostAllocatesInfo GetObjectByDocumentNo(String strDocNo)
        {
            String strQuery = String.Format("SELECT * FROM GLCostAllocates WHERE GLCostAllocateDocNo = '{0}' AND AAStatus = 'Alive'", strDocNo);
            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return (GLCostAllocatesInfo)this.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }

            return null;
        }

        public DataSet GetAllCostAllocatesHasRAmt(bool bAll = false)
        {
            return GetAllCostAllocatesHasRAmt(DateTime.MinValue, DateTime.MaxValue, bAll);
        }
        public DataSet GetAllCostAllocatesHasRAmt(DateTime dFrom, DateTime dTo, bool bAll=false)
        {
            string strDateKey = "";
            if (dFrom > DateTime.MinValue && dTo < DateTime.MaxValue)
                strDateKey = string.Format(@" AND CONVERT(VARCHAR(20), GLCostAllocateStartDate, 112) between CONVERT(VARCHAR(20),{0},112) and CONVERT(VARCHAR(20),{1},112)", dFrom.ToString("yyyyMMdd"), dTo.ToString("yyyyMMdd"));
            String strQuery = String.Format("SELECT * FROM GLCostAllocates WHERE AAStatus = 'Alive' {0}", strDateKey);
            if (!bAll)
                strQuery += " AND GLCostAllocateRAmt > 0";
            return dal.GetDataSet(strQuery);
        }

        //Thang - add 29/10/2015
        public DataSet GetJournalCostAllocate(int iAccountID)
        {
            string strQuery = string.Format(@"SELECT GLJournalDocumentNo as GLCostAllocateDocNo,
	GLSourceLedger as GLCostAllocateSourceLedger,
	GLJournalID as FK_GLJournalID,
	GLJournalDocDate as GLCostAllocateDocDate,
	GLJournalDate as GLCostAllocateStartDate,
	FK_GECurrencyID,
	GLJournalExRate as GLCostAllocateExRate,
	FK_GLDebitAccountID as FK_GLAllocateAccountID,
	FK_GLCostDistID,
	FK_GLCostCenterID,
	GLJournalHDesc as GLCostAllocateDesc,
	GLJournalAmt as GLCostAllocateAmt,
	GLJournalFAmt as GLCostAllocateFAmt
FROM GLJournals as a
WHERE FK_GLDebitAccountID = '{0}'
	AND (GLSourceLedger <> 'AssetDepr' OR GLSourceLedger <> 'ShpEquipment') AND GLJournalPeriod <> 0
	AND a.GLJournalDocumentNo NOT IN (SELECT GLCostAllocateDocNo FROM GLCostAllocates WHERE AAStatus = 'Alive')
--GROUP BY GLJournalDocumentNo,GLSourceLedger
", iAccountID);
            return GetDataSet(strQuery);
        }
    }
    #endregion
}