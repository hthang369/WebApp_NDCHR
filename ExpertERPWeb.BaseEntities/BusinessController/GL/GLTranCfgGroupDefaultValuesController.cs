using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region GLTranCfgGroupDefaultValues
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:GLTranCfgGroupDefaultValuesController
	//Created Date:Monday, August 25, 2014
	//-----------------------------------------------------------
	
	public class GLTranCfgGroupDefaultValuesController:BaseBusinessController
	{
		public GLTranCfgGroupDefaultValuesController()
		{
			dal= new DALBaseProvider("GLTranCfgGroupDefaultValues",typeof(GLTranCfgGroupDefaultValuesInfo));
		}
        public DataSet GetDataByTranCfgGroupID(int piTranCfgGroupID,string psNotINID = "")
        {
//            String strQuery = String.Format(@"SELECT  a.GLTranCfgGroupDefaultValueID as FK_GLTranCfgGroupDefaultValueID
//    ,b.AAColumnAliasCaption    
//FROM    GLTranCfgGroupDefaultValues a
//        INNER JOIN ( SELECT AATableName ,
//                            AAColumnAliasName ,
//                            AAColumnAliasCaption
//                     FROM   dbo.AAColumnAlias a
//                            INNER JOIN ( SELECT MAX(AAColumnAliasID) AS AAColumnAliasID
//                                         FROM   dbo.AAColumnAlias
//                                         GROUP BY AAColumnAliasName ,
//                                                AATableName
//                                       ) b ON a.AAColumnAliasID = b.AAColumnAliasID
//                   ) b ON b.AATableName = GLTranCfgGroupDefaultValueTable
//                          AND b.AAColumnAliasName = a.GLTranCfgGroupDefaultValueField");
            String strQuery = String.Format(@"SELECT  a.GLTranCfgGroupDefaultValueID, a.GLTranCfgGroupDefaultValueID as FK_GLTranCfgGroupDefaultValueID
    ,GLTranCfgGroupDefaultValueName
    ,b.GLTranCfgGroupModuleTableName
FROM    GLTranCfgGroupDefaultValues a
INNER JOIN GLTranCfgGroupModuleTables b ON a.FK_GLTranCfgGroupModuleTableID = b.GLTranCfgGroupModuleTableID");
            if (piTranCfgGroupID > 0)
            {
                strQuery += String.Format(@"
                            WHERE a.FK_GLTranCfgGroupID = {0}", piTranCfgGroupID);
                if (psNotINID != "")
                    strQuery += String.Format(@"
                            AND a.GLTranCfgGroupDefaultValueID NOT IN ({0})", psNotINID);
            }
            return dal.GetDataSet(strQuery);
        }
		public DataSet GetAAColumnAliasByTable(string psTableName)
        {
            String strQuery = String.Format(@"SELECT AATableName ,
                            AAColumnAliasName as GLTranCfgGroupDefaultValueField ,
                            AAColumnAliasCaption
                     FROM   dbo.AAColumnAlias a
                            INNER JOIN ( SELECT MAX(AAColumnAliasID) AS AAColumnAliasID
                                         FROM   dbo.AAColumnAlias
										 WHERE AATableName = '{0}'
                                         GROUP BY AAColumnAliasName ,
                                                AATableName
                                       ) b ON a.AAColumnAliasID = b.AAColumnAliasID
                   ", psTableName);
            return dal.GetDataSet(strQuery);
        }
		public DataSet GetMolduleTableByTranCfgGroupID(int piTranCfgGroupID)
        {
            String strQuery = String.Format(@"SELECT a.*
                     FROM dbo.GLTranCfgGroupModuleTables a
                        INNER JOIN (SELECT STModuleTableName
                            FROM dbo.STModuleTables a
                                INNER JOIN dbo.STModules b ON a.STModuleID = b.STModuleID
                                INNER JOIN dbo.GLTranCfgGroupModules c ON b.STModuleName = c.GLTranCfgGroupModuleName
                            WHERE c.FK_GLTranCfgGroupID = {0}
                            GROUP BY STModuleTableName) as d ON a.GLTranCfgGroupModuleTableNo= d.STModuleTableName ", piTranCfgGroupID);
            return dal.GetDataSet(strQuery);
        }
	}
	#endregion
}