using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
    #region GLPeriods
    //-----------------------------------------------------------
    //Generated By: Expert Studio
    //Class:GLPeriodsController
    //Created Date:Tuesday, March 29, 2011
    //-----------------------------------------------------------

    public class GLPeriodsController : BaseBusinessController
    {
        public GLPeriodsController()
        {
            dal = new DALBaseProvider("GLPeriods", typeof(GLPeriodsInfo));
        }

        public DataSet GetAllPeriodByYear(int iYear)
        {
            string strQuery = string.Format("SELECT * FROM GLPeriods WHERE GLPeriodYear ={0}", iYear);
            return GetDataSet(strQuery);
        }
        public GLPeriodsInfo GetObjectByMonthAndYear(int iMonth, int iYear)
        {
            string strQuery = string.Format("SELECT * FROM GLPeriods WHERE GLPeriodMonth = {0} AND GLPeriodYear = {1}", iMonth, iYear);
            DataSet ds = GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (GLPeriodsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            return null;
        }

        public Boolean KiemTraTatCaKyTrongNamCoDuocKhoaSo(int iYear)
        {
            String strQuery = String.Format("SELECT * FROM GLPeriods WHERE GLPeriodYear = {0} and GLPeriodLock = 0", iYear);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return false;
            }
            return true;
        }
        public void CalcICOBItem(int pPeriod, int pYear)
        {
            DateTime dt = new DateTime(pYear, pPeriod, 1);
            CalcICOBItem(dt);
        }
        public void CalcICOBItem(DateTime dt)
        {
            object[] _objParrs = {dt
                                };
            SqlDatabaseHelper.RunStoredProcedure("spL_CalcICOBItems", _objParrs);
        }
        public DateTime GetLastLockDate(string psModule = "")
        {
            String strQuery = String.Format(@"
SELECT TOP 1 *
FROM GLPeriods 
WHERE GLPeriodLock = 1
ORDER BY GLPeriodYear DESC, GLPeriodMonth DESC
"
                );
            DataSet ds = dal.GetDataSet(strQuery);
            DateTime dt = DateTime.MinValue;
            GLPeriodsInfo _objGLPeriodsInfo = new GLPeriodsInfo();
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                _objGLPeriodsInfo = (GLPeriodsInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                dt = new DateTime(_objGLPeriodsInfo.GLPeriodYear, _objGLPeriodsInfo.GLPeriodMonth, 1).AddMonths(1).AddDays(-1);
            }
            if (psModule.Length > 0)
            {
                STModulesInfo _objSTModulesInfo = (STModulesInfo)new STModulesController().GetObjectByName(psModule);
                if (_objSTModulesInfo != null)
                {

                    strQuery = String.Format(@"
SELECT TOP 1 * 
FROM dbo.GLClosings
WHERE AAStatus = 'Alive'
    AND FK_STModuleID = {1}
"
                        , psModule
                        , _objSTModulesInfo.STModuleID);
                    ds = dal.GetDataSet(strQuery);
                    if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                    {
                        GLClosingsInfo _objGLClosingsInfo = (GLClosingsInfo)new GLClosingsController().GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                        if (_objGLClosingsInfo.GLClosingDateLock.HasValue && dt < _objGLClosingsInfo.GLClosingDateLock.Value)
                            dt = _objGLClosingsInfo.GLClosingDateLock.Value;
                    }


                    object _objProp = GMCDbUtil.GetPropertyValue(_objGLPeriodsInfo, "GLPeriod" + _objSTModulesInfo.STModuleCode + "Check");
                    if (_objProp != null && Convert.ToBoolean(_objProp))
                    {
                        strQuery = String.Format(@"
SELECT TOP 1 *
FROM GLPeriods 
WHERE GLPeriodLock = 0 
    AND GLPeriod{0} = 1
ORDER BY GLPeriodYear DESC, GLPeriodMonth DESC
"
                            , _objSTModulesInfo.STModuleCode + "Check");
                        ds = dal.GetDataSet(strQuery);
                        if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                        {
                            _objGLPeriodsInfo = (GLPeriodsInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                            DateTime dtModuleCode = new DateTime(_objGLPeriodsInfo.GLPeriodYear, _objGLPeriodsInfo.GLPeriodMonth, 1).AddMonths(1).AddDays(-1);
                            if (dt < dtModuleCode)
                                dt = dtModuleCode;
                        }
                    }
                }
            }

            return dt;
        }
    }
    #endregion
}