using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
    #region HREmpActivitys
    //-----------------------------------------------------------
    //Generated By: GMC Studio
    //Class:HREmpActivitysController
    //Created Date:15 Tháng Ba 2013
    //-----------------------------------------------------------

    public class HREmpActivitysController : BaseBusinessController
    {
        public HREmpActivitysController()
        {
            dal = new DALBaseProvider("HREmpActivitys", typeof(HREmpActivitysInfo));
        }

        #region Lấy Trạng thái gần nhất --Vinh --15/03/2013

        public HREmpActivitysInfo GetEmpActivityLast(int iEmployeeID)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmpActivitys
                                            WHERE FK_HREmployeeID = {0} AND HREmpActivitys.AAStatus='Alive'
                                            ORDER BY HREmpActivityID DESC", iEmployeeID);
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return (HREmpActivitysInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }

        #endregion

        #region CheckEmployeeWorking --Kiểm tra nhân viên ngày hôm đó có đang làm việc không?

        public Boolean CheckEmployeeWorking(int iEpmloyeeID, DateTime dt)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmpActivitys
                                            WHERE (HREmployeeStatusCombo LIKE 'Working' OR HREmployeeStatusCombo LIKE 'Trying')
                                            AND FK_HREmployeeID={0} AND HREmpActivitys.AAStatus='Alive'
                                            AND
                                            (
		                                        (
													CONVERT(NVARCHAR(10), HREmpActivityStartDate, 112) <= CONVERT(NVARCHAR(10), '{1}', 112)
													AND HREmpActivityEndDate IS NULL
												)
												OR
												(
													CONVERT(NVARCHAR(10), HREmpActivityStartDate, 112) <= CONVERT(NVARCHAR(10), '{1}', 112)
													AND
													CONVERT(NVARCHAR(10),HREmpActivityEndDate, 112) >= CONVERT(NVARCHAR(10), '{1}', 112)
		                                        )

                                            )", iEpmloyeeID, dt.ToString("yyyyMMdd"));
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return true;
            }

            return false;
        }

        #endregion

        #region CheckEmployeeWorking --Kiểm tra theo tháng của nhân viên

        public Boolean CheckEmployeeWorkingInMonth(int iEpmloyeeID, DateTime dtFrom, DateTime dtTo)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmpActivitys
                                            WHERE (HREmployeeStatusCombo LIKE 'Working' OR HREmployeeStatusCombo LIKE 'Trying')
                                            AND FK_HREmployeeID={0} AND HREmpActivitys.AAStatus='Alive'
                                            AND
                                            (
                                                (
													YEAR(HREmpActivityStartDate)*12 + MONTH(HREmpActivityStartDate) <= {1}
													AND HREmpActivityEndDate IS NULL
												)
												OR
												(
													YEAR(HREmpActivityStartDate)*12 + MONTH(HREmpActivityStartDate) <= {1}
													AND
													YEAR(HREmpActivityEndDate)*12 + MONTH(HREmpActivityEndDate) >= {2}
		                                        )
                                            )", iEpmloyeeID, dtFrom.Year * 12 + dtFrom.Month, dtTo.Year * 12 + dtTo.Month);
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return true;
            }

            return false;
        }

        #endregion

        #region Lấy danh sách lịch sử hoạt động của nhân viên --Vinh --15/03/2013

        public DataSet GetAllEmpActivity(int iEmployeeID)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmpActivitys
                                            WHERE FK_HREmployeeID = {0} AND HREmpActivitys.AAStatus='Alive'
                                            ORDER BY HREmpActivityID ASC", iEmployeeID);
            return dal.GetDataSet(str);
        }

        #endregion

        #region CheckEmployeeTrying --Kiểm tra nhân viên ngày hôm đó có đang làm thử việc không?

        public Boolean CheckEmployeeTrying(int iEpmloyeeID, DateTime dt)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmpActivitys
                                            WHERE HREmployeeStatusCombo LIKE 'Trying'
                                            AND FK_HREmployeeID={0} AND HREmpActivitys.AAStatus='Alive'
                                            AND
                                            (
		                                        (
													CONVERT(NVARCHAR(10), HREmpActivityStartDate, 112) <= CONVERT(NVARCHAR(10), '{1}', 112)
													AND HREmpActivityEndDate IS NULL
												)
												OR
												(
													CONVERT(NVARCHAR(10), HREmpActivityStartDate, 112) <= CONVERT(NVARCHAR(10), '{1}', 112)
													AND
													CONVERT(NVARCHAR(10),HREmpActivityEndDate, 112) >= CONVERT(NVARCHAR(10), '{1}', 112)
		                                        )

                                            )", iEpmloyeeID, dt.ToString("yyyyMMdd"));
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return true;
            }

            return false;
        }

        #endregion

        #region CheckEmployeeTrying --Kiểm tra nhân viên có thử việc theo tháng

        public Boolean CheckEmployeeTryingInMonth(int iEpmloyeeID, DateTime dtFrom, DateTime dtTo)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmpActivitys
                                            WHERE HREmployeeStatusCombo LIKE 'Trying'
                                            AND FK_HREmployeeID={0} AND HREmpActivitys.AAStatus='Alive'
                                            AND
                                            (
                                                (
													YEAR(HREmpActivityStartDate)*12 + MONTH(HREmpActivityStartDate) <= {1}
													AND HREmpActivityEndDate IS NULL
												)
												OR
												(
													YEAR(HREmpActivityStartDate)*12 + MONTH(HREmpActivityStartDate) <= {1}
													AND
													YEAR(HREmpActivityEndDate)*12 + MONTH(HREmpActivityEndDate) >= {2}
		                                        )
                                            )", iEpmloyeeID, dtFrom.Year * 12 + dtFrom.Month, dtTo.Year * 12 + dtTo.Month);
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return true;
            }

            return false;
        }

        #endregion
        public Boolean CheckEmployeeWorkingInYear(int iEpmloyeeID, int iyear)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmpActivitys
                                            WHERE (HREmployeeStatusCombo LIKE 'Working' OR HREmployeeStatusCombo LIKE 'Trying')
                                            AND FK_HREmployeeID={0} AND HREmpActivitys.AAStatus='Alive'
                                            AND
                                            (
                                                (
													YEAR(HREmpActivityStartDate)<= {1}
													AND HREmpActivityEndDate IS NULL
												)
												OR
												(
													YEAR(HREmpActivityStartDate)<= {1}
													AND
													YEAR(HREmpActivityEndDate)>= {1}
		                                        )
                                            )", iEpmloyeeID, iyear);
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return true;
            }

            return false;
        }
    }
    #endregion
}