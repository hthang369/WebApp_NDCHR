using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
    #region HREmployeeTCSrlDtls
    //-----------------------------------------------------------
    //Generated By: Expert Studio
    //Class:HREmployeeTCSrlDtlsController
    //Created Date:09 Tháng Giêng 2013
    //-----------------------------------------------------------

    public class HREmployeeTCSrlDtlsController : BaseBusinessController
    {
        public HREmployeeTCSrlDtlsController()
        {
            dal = new DALBaseProvider("HREmployeeTCSrlDtls", typeof(HREmployeeTCSrlDtlsInfo));
        }

        #region Copy From PS --Vinh --10/01/2013

        public DataSet dsGetAll_FromDateToDate(DateTime dtFrom, DateTime dtTo)
        {
            return dal.GetDataSet("AAA_dsEmployeeTCSrlDtls_FromDateToDate", dtFrom, dtTo);
        }
        public DataSet dsGetAll_FromDateToDateAndEmployeeID(DateTime dtFrom, DateTime dtTo, int iEmployeeID)
        {
            return dal.GetDataSet("AAA_dsEmployeeTCSrlDtls_FromDateToDateAndEmpID", dtFrom, dtTo, iEmployeeID);
        }
        public void AAADelete_WithTime(DateTime dtFrom, DateTime dtTo)
        {
            DataSet ds = dal.GetDataSet("AAA_HREmployeeTCSrlDtls_DeleteWithTime", dtFrom, dtTo);
        }

        public HREmployeeTCSrlDtlsInfo GetObjectByEmployeeIDAndExtractStartDate(int iEmployeeID, DateTime dStartDate)
        {
            DataSet ds = dal.GetDataSet("HREmployeeTCSrlDtls_SelectByFK_EmployeeIDAndExtractStartDate", iEmployeeID, dStartDate);
            if (ds == null || ds.Tables.Count <= 0 || ds.Tables[0].Rows.Count <= 0) // nghi
                return null;
            else
                return (HREmployeeTCSrlDtlsInfo)this.GetObjectFromDataRow(ds.Tables[0].Rows[0]);

        }

        #endregion

        public HREmployeeTCSrlDtlsInfo GetEmployeeTCSrlDtlByEmployeeANDDate(int iEmployeeID, DateTime dStartDate)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmployeeTCSrlDtls
                                            WHERE AAStatus='Alive'
                                            AND FK_HREmployeeID = {0}
                                            AND CONVERT(NVARCHAR(10),HREmployeeTCSrlDtlInDatetime, 112) = '{1}'", iEmployeeID, dStartDate.ToString("yyyyMMdd"));
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return (HREmployeeTCSrlDtlsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }

        public DataSet GetAllEmployeeTCSrlDtlByEmployeeANDDate(int iEmployeeID, DateTime dStartDate)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmployeeTCSrlDtls
                                            WHERE AAStatus='Alive'
                                            AND (FK_HREmployeeID = {0} OR {0} = 0)
                                            AND CONVERT(NVARCHAR(10),HREmployeeTCSrlDtlInDatetime, 112) = '{1}'", iEmployeeID, dStartDate.ToString("yyyyMMdd"));
            return dal.GetDataSet(str);
        }

        public DataSet GetAllEmployeeTCSrlDtlByEmployeeANDDate(int iEmployeeID, DateTime dtFrom, DateTime dtTo)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmployeeTCSrlDtls
                                            WHERE AAStatus='Alive'
                                            AND (FK_HREmployeeID = {0} OR {0} = 0)
                                            AND CONVERT(NVARCHAR(10),HREmployeeTCSrlDtlInDatetime, 112) >= '{1}'
                                            AND CONVERT(NVARCHAR(10),HREmployeeTCSrlDtlInDatetime, 112) <= '{2}' ORDER BY HREmployeeTCSrlDtlInDatetime ASC", iEmployeeID, dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"));
            return dal.GetDataSet(str);
        }

        public void DeleteAllEmployeeTCSrlDtlInMonthByEmployeeANDDate(int iEmployeeID, DateTime dStartDate)
        {
            String str = String.Format(@"   DELETE dbo.HREmployeeTCSrlDtls
                                            WHERE FK_HREmployeeID = {0}
                                            AND YEAR(HREmployeeTCSrlDtlInDatetime) * 12 + MONTH(HREmployeeTCSrlDtlInDatetime) = {1}", iEmployeeID, dStartDate.Year * 12 + dStartDate.Month);
            dal.GetDataSet(str);
        }
        public DataSet GetAllEmployeeTCSrlDtlByDate(DateTime dtFrom, DateTime dtTo)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmployeeTCSrlDtls
                                            WHERE AAStatus='Alive'
                                            AND CONVERT(NVARCHAR(10),HREmployeeTCSrlDtlInDatetime, 112) >= '{0}'
                                            AND CONVERT(NVARCHAR(10),HREmployeeTCSrlDtlInDatetime, 112) <= '{1}'", dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"));
            return dal.GetDataSet(str);
        }

        public DataSet GetSumDataEmployeeTCSrlDtl(int iEmployeeID, DateTime dtFrom, DateTime dtTo)
        {
            String str = String.Format(@"SELECT TOP 1 ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlWorkingHour,0)),0) AS giocong,
                                                    ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlShiftCount,0)),0) AS socong,
                                                    ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlLateInTime,0)),0) AS ditre,
                                                    ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlEarlyOutTime,0)),0) AS vesom,
                                                    ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlTotalMissHour,0)),0) AS thieugio,
                                                    ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlOvertimeHour,0)),0) AS tongtc,
                                                    ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlOvertimeHourCal,0)),0) AS tongtcxuly,
                                                    ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlOffWorkNumber,0)),0) AS tongnghi,
                                                    ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlRiceCheckNumber,0)),0) AS tinhcom,
                                                    ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlOvertimeNightHour,0)),0) AS tongphucapcadem,
                                                    ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlLateInTimeCount,0)),0) AS tongsolanditre,
                                                    ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlEarlyOutTimeCount,0)),0) AS tongsolanvesom
                                                    FROM HREmployeeTCSrlDtls
                                                    WHERE AAStatus = 'Alive' AND FK_HREmployeeID={0}
                                                    AND CONVERT(NVARCHAR(10), HREmployeeTCSrlDtls.HREmployeeTCSrlDtlInDatetime, 112) >= '{1}'
                                                    AND CONVERT(NVARCHAR(10), HREmployeeTCSrlDtls.HREmployeeTCSrlDtlInDatetime, 112) <= '{2}'", iEmployeeID, dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"));
            return dal.GetDataSet(str);
        }
        public double GetNumberOvertimeHour(int iEmployeeID, int iOvertimeRateID, DateTime dtFrom, DateTime dtTo)
        {
            double dbHour = 0;
            String str = String.Format(@"SELECT ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlOvertimeHour,0)),0) AS tangca
                                        FROM HREmployeeTCSrlDtls
                                        WHERE AAStatus = 'Alive' 
                                        AND FK_HREmployeeID={0}
                                        AND FK_HROvertimeRateID={1}
                                        AND CONVERT(NVARCHAR(10), HREmployeeTCSrlDtls.HREmployeeTCSrlDtlInDatetime, 112) >= '{2}'
                                        AND CONVERT(NVARCHAR(10), HREmployeeTCSrlDtls.HREmployeeTCSrlDtlInDatetime, 112) <= '{3}'", iEmployeeID, iOvertimeRateID, dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"));

            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                dbHour = Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return dbHour;
        }
        public double GetNumberOffWorkDay(int iEmployeeID, int iEmployeeLeaveTypeID, DateTime dtFrom, DateTime dtTo)
        {
            double dbHour = 0;
            String str = String.Format(@"SELECT ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlOffWorkNumber,0)),0) AS nghiphep
                                                FROM HREmployeeTCSrlDtls
                                                WHERE AAStatus = 'Alive' 
                                                AND FK_HREmployeeID={0}
                                                AND FK_HREmployeeLeaveTypeID={1}
                                                AND CONVERT(NVARCHAR(10), HREmployeeTCSrlDtls.HREmployeeTCSrlDtlInDatetime, 112) >= '{2}'
                                                AND CONVERT(NVARCHAR(10), HREmployeeTCSrlDtls.HREmployeeTCSrlDtlInDatetime, 112) <= '{3}'", iEmployeeID, iEmployeeLeaveTypeID, dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"));

            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                dbHour = Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return dbHour;
        }
        public int TongSoLanDiTre(int iEmployeeID, DateTime dtFrom, DateTime dtTo)
        {
            int iSoLan = 0;
            String str = String.Format(@"SELECT ISNULL(COUNT(HREmployeeTCSrlDtlLateInTime),0)
                                        FROM HREmployeeTCSrlDtls
                                        WHERE AAStatus='Alive' AND HREmployeeTCSrlDtlLateInTime>0 AND FK_HREmployeeID={0}
                                        AND CONVERT(NVARCHAR(10), HREmployeeTCSrlDtls.HREmployeeTCSrlDtlInDatetime, 112) >= '{1}'
                                        AND CONVERT(NVARCHAR(10), HREmployeeTCSrlDtls.HREmployeeTCSrlDtlInDatetime, 112) <= '{2}'", iEmployeeID, dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"));

            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                iSoLan = Convert.ToInt32(ds.Tables[0].Rows[0][0]);
            }
            return iSoLan;
        }
        public int TongSoLanveSom(int iEmployeeID, DateTime dtFrom, DateTime dtTo)
        {
            int iSoLan = 0;
            String str = String.Format(@"SELECT ISNULL(COUNT(HREmployeeTCSrlDtlEarlyOutTime),0)
                                        FROM HREmployeeTCSrlDtls
                                        WHERE AAStatus='Alive' AND HREmployeeTCSrlDtlEarlyOutTime>0 AND FK_HREmployeeID={0}
                                        AND CONVERT(NVARCHAR(10), HREmployeeTCSrlDtls.HREmployeeTCSrlDtlInDatetime, 112) >= '{1}'
                                        AND CONVERT(NVARCHAR(10), HREmployeeTCSrlDtls.HREmployeeTCSrlDtlInDatetime, 112) <= '{2}'", iEmployeeID, dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"));

            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                iSoLan = Convert.ToInt32(ds.Tables[0].Rows[0][0]);
            }
            return iSoLan;
        }
        public DataSet GetAllEmployeeTCSrlDtlByCondition(string strEmployeeNo,int iDepartmentID,int iSectionID,DateTime dtFrom, DateTime dtTo)
        {
            String str = String.Format(@" SELECT HREmployeeID,
                                            HREmployeeNo,
                                            HREmployeeFullName,
                                            HRDepartmentName,
                                            HRSectionName,
                                            ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlWorkingHour,0)),0) AS giocong,
                                            ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlShiftCount,0)),0) AS socong,
                                            ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlLateInTime,0)),0) AS ditre,
                                            ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlEarlyOutTime,0)),0) AS vesom,
                                            ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlTotalMissHour,0)),0) AS thieugio,
                                            ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlOvertimeHour,0)),0) AS tongtc,
                                            ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlOvertimeHourCal,0)),0) AS tongtcxuly,
                                            ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlOffWorkNumber,0)),0) AS tongnghi,
                                            ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlRiceCheckNumber,0)),0) AS tinhcom,
                                            ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlOvertimeNightHour,0)),0) AS tongphucapcadem,
                                            ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlLateInTimeCount,0)),0) AS tongsolanditre,
                                            ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlEarlyOutTimeCount,0)),0) AS tongsolanvesom
                                            FROM dbo.HREmployees
                                            LEFT JOIN dbo.HRDepartments ON (HRDepartments.HRDepartmentID = HREmployees.FK_HRDepartmentID AND HRDepartments.AAStatus = HREmployees.AAStatus)
                                            LEFT JOIN dbo.HRSections ON (HRSections.HRSectionID = HREmployees.FK_HRSectionID AND HRSections.AAStatus = HREmployees.AAStatus)
                                            JOIN HREmpActivitys ON (HREmpActivitys.FK_HREmployeeID = HREmployees.HREmployeeID)
                                            JOIN dbo.HREmployeeTCSrlDtls ON (HREmployeeTCSrlDtls.FK_HREmployeeID = HREmployees.HREmployeeID AND HREmployeeTCSrlDtls.AAStatus = HREmployees.AAStatus)
                                            WHERE HREmployees.AAStatus='Alive'
                                            AND (HREmpActivitys.HREmployeeStatusCombo LIKE 'Working' OR HREmpActivitys.HREmployeeStatusCombo LIKE 'Trying')
                                            AND
                                            (
	                                            (
		                                            CONVERT(NVARCHAR(10), HREmpActivityStartDate, 112) <= CONVERT(NVARCHAR(10), '{3}', 112)
		                                            AND HREmpActivityEndDate IS NULL
	                                            )
	                                            OR
	                                            (
		                                            CONVERT(NVARCHAR(10), HREmpActivityStartDate, 112) <= CONVERT(NVARCHAR(10), '{3}', 112)
		                                            AND
		                                            CONVERT(NVARCHAR(10),HREmpActivityEndDate, 112) >= CONVERT(NVARCHAR(10), '{4}', 112)
	                                            )
                                            )
                                            AND
                                            (
	                                            CONVERT(NVARCHAR(10), HREmployeeTCSrlDtls.HREmployeeTCSrlDtlInDatetime, 112) >= '{3}'
	                                            AND CONVERT(NVARCHAR(10), HREmployeeTCSrlDtls.HREmployeeTCSrlDtlInDatetime, 112) <= '{4}'
                                            )
                                            AND  HREmployees.HREmployeeNo LIKE '%{0}%'
                                            AND (HREmployees.FK_HRDepartmentID ={1} OR  0={1})
                                            AND (HREmployees.FK_HRSectionID ={2} OR  0={2})
                                            GROUP BY  HREmployeeID,
                                            HREmployeeNo,
                                            HREmployeeFullName,
                                            HRDepartmentName,
                                            HRSectionName", strEmployeeNo,iDepartmentID,iSectionID,dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"));
            return dal.GetDataSet(str);
        }
      
        public DataSet GetAllEmployeeTCSrlDtlOverTimeByDate(DateTime dtFrom, DateTime dtTo)
        {
            String str = String.Format(@" SELECT FK_HREmployeeID,HROvertimeRateNo,ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlOvertimeHour,0)),0) AS tangca
                                            FROM HREmployeeTCSrlDtls
                                            JOIN HROvertimeRates ON (HROvertimeRates.HROvertimeRateID = HREmployeeTCSrlDtls.FK_HROvertimeRateID AND HROvertimeRates.AAStatus = HREmployeeTCSrlDtls.AAStatus)
                                            WHERE HREmployeeTCSrlDtls.AAStatus = 'Alive' 
                                            AND CONVERT(NVARCHAR(10), HREmployeeTCSrlDtls.HREmployeeTCSrlDtlInDatetime, 112) >= '{0}'
                                            AND CONVERT(NVARCHAR(10), HREmployeeTCSrlDtls.HREmployeeTCSrlDtlInDatetime, 112) <= '{1}'
                                            GROUP BY FK_HREmployeeID,HROvertimeRateNo
                                            HAVING ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlOvertimeHour,0)),0)>0
                                            ORDER BY FK_HREmployeeID", dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"));
            return dal.GetDataSet(str);
        }
        public DataSet GetAllEmployeeTCSrlDtlOffWorkByDate(DateTime dtFrom, DateTime dtTo)
        {
            String str = String.Format(@" SELECT FK_HREmployeeID,HREmployeeLeaveTypeNo, ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlOffWorkNumber,0)),0) AS nghiphep
                                            FROM HREmployeeTCSrlDtls
                                            JOIN HREmployeeLeaveTypes ON (HREmployeeLeaveTypes.HREmployeeLeaveTypeID = HREmployeeTCSrlDtls.FK_HREmployeeLeaveTypeID AND HREmployeeLeaveTypes.AAStatus = HREmployeeTCSrlDtls.AAStatus)
                                            WHERE HREmployeeTCSrlDtls.AAStatus = 'Alive' 
                                            AND CONVERT(NVARCHAR(10), HREmployeeTCSrlDtls.HREmployeeTCSrlDtlInDatetime, 112) >= '{0}'
                                            AND CONVERT(NVARCHAR(10), HREmployeeTCSrlDtls.HREmployeeTCSrlDtlInDatetime, 112) <= '{1}'
                                            GROUP BY FK_HREmployeeID,HREmployeeLeaveTypeNo
                                            HAVING ISNULL(SUM(ISNULL(HREmployeeTCSrlDtlOffWorkNumber,0)),0)>0
                                            ORDER BY FK_HREmployeeID", dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"));
            return dal.GetDataSet(str);
        }
        public void DeleteAllEmployeeTCSrlDtlByEmployeeANDFDateTDate(int iEmployeeID, DateTime dtFdate, DateTime dtTodate)
        {
            String str = String.Format(@"   DELETE dbo.HREmployeeTCSrlDtls
                                            WHERE FK_HREmployeeID = {0}
                                            AND CONVERT(NVARCHAR(10),HREmployeeTCSrlDtlInDatetime, 112) >= '{1}'
                                            AND CONVERT(NVARCHAR(10),HREmployeeTCSrlDtlInDatetime, 112) <= '{2}'", iEmployeeID, dtFdate.ToString("yyyyMMdd"), dtTodate.ToString("yyyyMMdd"));
            dal.GetDataSet(str);
        }
    }
	#endregion
}