using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region HREmployeeOffWorks
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:HREmployeeOffWorksController
	//Created Date:Wednesday, April 08, 2009
	//-----------------------------------------------------------
	
	public class HREmployeeOffWorksController:BaseBusinessController
	{
		public HREmployeeOffWorksController()
		{
			dal= new DALBaseProvider("HREmployeeOffWorks",typeof(HREmployeeOffWorksInfo));
        }

        #region Copy From PS --Vinh --10/01/2013

        public DataSet dsAllRecordOffWork_Of_Emp_FromDay_ToDay(int iEmpID, DateTime dtFromDate, DateTime dtToDate)
        {
            return dal.GetDataSet("AAA_GetAllOffWorkOfEmp_WithIDFromDateToDate", iEmpID, dtFromDate, dtToDate);
        }

        public DataSet dsAllRecordOffWork_Of_Emp_Month_Year(int iEmpID, int iMonth, int iYear)
        {
            return dal.GetDataSet("AAA_GetAllOffWorkOfEmp_WithIDMonthYear", iEmpID, iMonth, iYear);
        }

        public DataSet GetEmployeeOffWorkByEmployeeIDAndExtractDate(int iEmployeeID, DateTime extractDate)
        {
            return dal.GetDataSet("HREmployeeOffWorks_SelectByFK_HREmployeeIDAndExtractDate", iEmployeeID, extractDate);
        }

        #endregion

        #region Get All Data by Employee Month Year -- Vinh --18/02/2013 --Lấy tất cả các ngày xin nghỉ phép của nhân viên từ thời gian này đến thời gian

        public DataSet GetAllDataByEmployeeFromTo(int iEmployeeID, DateTime dtFrom, DateTime dtTo)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmployeeOffWorks 
                                            WHERE AAStatus='Alive'
                                            AND (FK_HREmployeeID={0} OR {0} = 0)
                                            AND 
                                            (
                                                (
                                                    CONVERT(VARCHAR(10),HREmployeeOffWorkFromDate, 112) >= CONVERT(VARCHAR(10),'{1}', 112)
	                                                AND
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkFromDate, 112) <= CONVERT(VARCHAR(10),'{2}', 112)
                                                )
                                                OR 
                                                (
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkFromDate, 112) < CONVERT(VARCHAR(10),'{1}', 112)
	                                                AND 
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkToDate, 112) >= CONVERT(VARCHAR(10),'{1}', 112)
	                                                AND
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkToDate, 112) <= CONVERT(VARCHAR(10),'{2}', 112)
                                                )
                                            )
                                        ", iEmployeeID, dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"));
            return dal.GetDataSet(str);
        }

        #endregion
        public DataSet GetAllDataByEmployeeLeaveFromToByLeaveType(int iEmployeeID, DateTime dtFrom, DateTime dtTo,string strAnnualType)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmployeeOffWorks 
                                             JOIN dbo.HREmployeeLeaveTypes ON 
		                                     (HREmployeeLeaveTypes.HREmployeeLeaveTypeID = HREmployeeOffWorks.FK_HREmployeeLeaveTypeID AND HREmployeeLeaveTypes.AAStatus = HREmployeeOffWorks.AAStatus)
                                            WHERE HREmployeeOffWorks.AAStatus='Alive' AND ApprovalStatusCombo='Approved' AND HREmployeeLeaveTypes.HREmployeeLeaveTypeCombo='{3}'
                                            AND (FK_HREmployeeID={0} OR {0} = 0)
                                            AND 
                                            (
                                                (
                                                    CONVERT(VARCHAR(10),HREmployeeOffWorkFromDate, 112) >= CONVERT(VARCHAR(10),'{1}', 112)
	                                                AND
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkFromDate, 112) <= CONVERT(VARCHAR(10),'{2}', 112)
                                                )
                                                OR 
                                                (
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkFromDate, 112) < CONVERT(VARCHAR(10),'{1}', 112)
	                                                AND 
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkToDate, 112) >= CONVERT(VARCHAR(10),'{1}', 112)
	                                                AND
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkToDate, 112) <= CONVERT(VARCHAR(10),'{2}', 112)
                                                )
                                            )
                                        ", iEmployeeID, dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"), strAnnualType);
            return dal.GetDataSet(str);
        }
        public DataSet GetAllDataByEmployeeLeaveByLeaveTypeAndDate(int iEmployeeID, DateTime dtdate,string strAnnualType)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmployeeOffWorks 
                                             JOIN dbo.HREmployeeLeaveTypes ON 
		                                     (HREmployeeLeaveTypes.HREmployeeLeaveTypeID = HREmployeeOffWorks.FK_HREmployeeLeaveTypeID AND HREmployeeLeaveTypes.AAStatus = HREmployeeOffWorks.AAStatus)
                                            WHERE HREmployeeOffWorks.AAStatus='Alive' and HREmployeeLeaveTypes.HREmployeeLeaveTypeCombo='{2}'
                                            AND (FK_HREmployeeID={0} OR {0} = 0)
                                            AND 
                                            (
                                                CONVERT(VARCHAR(10),HREmployeeOffWorkFromDate, 112) <= CONVERT(VARCHAR(10),'{1}', 112)
	                                            AND
	                                            CONVERT(VARCHAR(10),HREmployeeOffWorkToDate, 112) >= CONVERT(VARCHAR(10),'{1}', 112)
                                                   
                                            )
                                        ", iEmployeeID, dtdate.ToString("yyyyMMdd"), strAnnualType);
            return dal.GetDataSet(str);
        }


        #region Get All Data by Employee Month Year Department Session -- Vinh --18/02/2013 --Lấy tất cả các ngày xin nghỉ phép của nhân viên từ thời gian này đến thời gian theo phòng ban và bộ phận

        public DataSet GetAllDataByEmployeeDepartmentSessionFromTo(int iEmployeeID, int iDepartmentID, int iSessionID, DateTime dtFrom, DateTime dtTo)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmployeeOffWorks 
                                            WHERE AAStatus='Alive'
                                            AND (FK_HREmployeeID={0} OR {0} = 0)
                                            AND FK_HREmployeeID IN (SELECT HREmployeeID FROM HREmployees WHERE AAStatus='Alive' AND (FK_HRDepartmentID = {3} OR {3} = 0) AND (FK_HRSectionID = {4} OR {4} = 0))
                                            AND 
                                            (
                                                (
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkFromDate, 112) >= CONVERT(VARCHAR(10),'{1}', 112)
	                                                AND
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkFromDate, 112) <= CONVERT(VARCHAR(10),'{2}', 112)
                                                )
                                                OR 
                                                (
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkFromDate, 112) < CONVERT(VARCHAR(10),'{1}', 112)
	                                                AND 
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkToDate, 112) >= CONVERT(VARCHAR(10),'{1}', 112)
	                                                AND
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkToDate, 112) <= CONVERT(VARCHAR(10),'{2}', 112)
                                                )
                                            )
                                        ", iEmployeeID, dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"), iDepartmentID, iSessionID);
            return dal.GetDataSet(str);
        }

        #endregion

        public double GetTotalQtyByEmployeeDepartmentSessionFromTo(int iEmployeeID, int iDepartmentID, int iSessionID, DateTime dtFrom, DateTime dtTo)
        {

            String str = String.Format(@"   SELECT count(*) FROM dbo.HREmployeeOffWorks 
                                            WHERE AAStatus='Alive'
                                            AND (FK_HREmployeeID={0} OR {0} = 0)
                                            AND FK_HREmployeeID IN (SELECT HREmployeeID FROM HREmployees WHERE AAStatus='Alive' AND (FK_HRDepartmentID = {3} OR {3} = 0) AND (FK_HRSectionID = {4} OR {4} = 0))
                                            AND 
                                            (
                                                (
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkFromDate, 112) >= CONVERT(VARCHAR(10),'{1}', 112)
	                                                AND
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkFromDate, 112) <= CONVERT(VARCHAR(10),'{2}', 112)
                                                )
                                                OR 
                                                (
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkFromDate, 112) < CONVERT(VARCHAR(10),'{1}', 112)
	                                                AND 
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkToDate, 112) >= CONVERT(VARCHAR(10),'{1}', 112)
	                                                AND
	                                                CONVERT(VARCHAR(10),HREmployeeOffWorkToDate, 112) <= CONVERT(VARCHAR(10),'{2}', 112)
                                                )
                                            )
                                        ", iEmployeeID, dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"), iDepartmentID, iSessionID);
        DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            return 0;
        }
        public DataSet GetAllDataByFiscalYearAndTypeAnnualLeave(int iEmployeeID,int iYear)
        {
            string strQuery = string.Format(@"SELECT dbo.HREmployeeOffWorks.* FROM dbo.HREmployeeOffWorks
                                             INNER JOIN dbo.HREmployeeLeaveTypes
                                             ON(HREmployeeLeaveTypes.HREmployeeLeaveTypeID = HREmployeeOffWorks.FK_HREmployeeLeaveTypeID AND HREmployeeLeaveTypes.AAStatus = HREmployeeOffWorks.AAStatus)
                                             WHERE HREmployeeOffWorks.AAStatus = 'Alive' AND
                                               HREmployeeLeaveTypes.HREmployeeLeaveTypeCombo = 'AnnualLeave'
                                               AND HREmployeeOffWorks.FK_HREmployeeID={0} and HREmployeeOffWorkFiscalYear={1}",iEmployeeID,iYear);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataEmployeeOffWorkByEmployeeIDAndApprStatus(int iEmployeeID, string strApprStatus)
        {
            object[] _objParrs = {iEmployeeID
                   ,strApprStatus
                                };
          return SqlDatabaseHelper.RunStoredProcedure("spl_GetDataEmployeeOffWorkByEmployeeID", _objParrs);
        }
}
	#endregion
}