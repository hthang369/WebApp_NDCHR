using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region HREmployeeTCSrlItems
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:HREmployeeTCSrlItemsController
	//Created Date:Monday, June 16, 2014
	//-----------------------------------------------------------
	
	public class HREmployeeTCSrlItemsController:BaseBusinessController
	{
		public HREmployeeTCSrlItemsController()
		{
			dal= new DALBaseProvider("HREmployeeTCSrlItems",typeof(HREmployeeTCSrlItemsInfo));
		}

        #region Xóa chi tiết tính công, --Sơn, --20/6/2014
        public void XoaChiTietTinhCong(int iHREmployeeID, DateTime dtDayFirstMonth)
        {
            string strQry = string.Format(@"DELETE dbo.HREmployeeTCSrlItems
                                          WHERE FK_HREmployeeID = {0} 
                                          AND YEAR(HREmployeeTCSrlItemDate) = {1}
                                          AND MONTH(HREmployeeTCSrlItemDate) = {2}",
                                          iHREmployeeID, dtDayFirstMonth.Year, dtDayFirstMonth.Month);
            dal.GetDataSet(strQry);
        }
        #endregion

        #region Get Data by FK_EmployeeID and DateTime, --Sơn, --24/6/2014
        public HREmployeeTCSrlItemsInfo GetDataByFk_EmployeeID_And_DateTime(int iHREmployeeID, DateTime dtDayFirstMonth)
        {

            string str=string.Format(@"SELECT * FROM dbo.HREmployeeTCSrlItems
                                       WHERE FK_HREmployeeID={0}
                                       AND CONVERT(VARCHAR, HREmployeeTCSrlItemDate, 112) = '{1}'"
                                    , iHREmployeeID, dtDayFirstMonth.ToString("yyyyMMdd"));
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables != null && ds.Tables[0].Rows.Count > 0)
                return (HREmployeeTCSrlItemsInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            else
                return null;
        }
        #endregion

        #region Get All Data by FK_EmployeeID Between DateTimeFrom And DateTimeTo
        public DataSet GetAllDataBetweenDateTimeFromAndDateTimeTo(int iHREmployeeID, DateTime dtMonth)
        {
            string str = string.Format(@"SELECT * FROM dbo.HREmployeeTCSrlItems
                                     WHERE  FK_HREmployeeID = {0}
                                     AND YEAR(HREmployeeTCSrlItemDate) * 12 + MONTH(HREmployeeTCSrlItemDate) = {1}",
                                     iHREmployeeID, dtMonth.Year * 12 + dtMonth.Month);
            return dal.GetDataSet(str);
        }
        #endregion

        public DataSet GetAllEmployeeTCSrlDtlByEmployeeANDDate(int iEmployeeID, DateTime dtFrom, DateTime dtTo)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmployeeTCSrlItems
                                            WHERE AAStatus='Alive'
                                            AND (FK_HREmployeeID = {0} OR {0} = 0)
                                            AND CONVERT(NVARCHAR(10),HREmployeeTCSrlItemDate, 112) >= '{1}'
                                            AND CONVERT(NVARCHAR(10),HREmployeeTCSrlItemDate, 112) <= '{2}'", iEmployeeID, dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"));
            return dal.GetDataSet(str);
        }
    }
	#endregion
}