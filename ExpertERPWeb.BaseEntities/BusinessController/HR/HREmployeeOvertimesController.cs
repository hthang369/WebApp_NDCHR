using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region HREmployeeOvertimes
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:HREmployeeOvertimesController
	//Created Date:Saturday, May 23, 2009
	//-----------------------------------------------------------
	
	public class HREmployeeOvertimesController:BaseBusinessController
	{
		public HREmployeeOvertimesController()
		{
			dal= new DALBaseProvider("HREmployeeOvertimes",typeof(HREmployeeOvertimesInfo));
        }

        #region Copy From PS --Vinh --10/01/2013

        public DataSet dsGetAllOrverTimeByShiftAndEmployee(int iShiftID, int iEmployeeID)
        {
            return dal.GetDataSet("AAA_dsEmployeeOrvertime_WithShiftIDAndEmployeeID", iShiftID, iEmployeeID);
        }
        public DataSet dsGetAllOrverTimeBy_ShiftAndEmployeeAndStartDateAndEndDate(int iShiftID, int iEmployeeID, DateTime dtStartDate, DateTime dtEndDateTime)
        {
            return dal.GetDataSet("AAA_dsEmployeeOrvertime_WithShiftIDAndEmployeeIDAndStartDateAndEndDate", iShiftID, iEmployeeID, dtStartDate, dtEndDateTime);
        }

        public DataSet dsAllRecordOvertime_Of_Emp_FromDay_ToDay(int iEmpID, DateTime dtFromDate, DateTime dtToDate)
        {
            return dal.GetDataSet("AAA_GetAllOvertimeOfEmp_WithIDFromDateToDate", iEmpID, dtFromDate, dtToDate);
        }

        public DataSet dsAllRecordOvertime_Of_Emp_Month_Year(int iEmpID, int iMonth, int iYear)
        {
            return dal.GetDataSet("AAA_GetAllOvertimeOfEmp_WithIDMonthYear", iEmpID, iMonth, iYear);
        }
        
        public DataSet GetAllObjectByEmployeeIDAndTimeSpan(int iEmpID, DateTime dtFromDate, DateTime dtToDate)
        {
            return dal.GetDataSet("HREmployeeOrvertime_SelectByFK_EmployeeIDAndTimeSpan", iEmpID, dtFromDate, dtToDate);
        }
        public DataSet GetObjectByDateEmplShift(DateTime dteOvertimeDate, int iEmplID, int iShiftID)
        {
            String strQuery = String.Format("SELECT * FROM HREmployeeOvertimes WHERE AAStatus = 'Alive' AND CONVERT(VARCHAR(20), [HREmployeeOvertimeFromDate], 112) = CONVERT(VARCHAR(20), {0}, 112) AND FK_HREmployeeID = {1} AND FK_HRShiftID = {2}", dteOvertimeDate.ToString("yyyyMMdd"), iEmplID, iShiftID);
            return (DataSet)dal.GetDataSet(strQuery);
        }

        #endregion

        #region Lấy tất cả tăng ca của nhân viên trong ngày --Vinh --29/06/2013

        public DataSet GetAllDataByEmployeeANDDate(int iEmployeeID, DateTime dt)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmployeeOvertimes
                                            WHERE AAStatus = 'Alive'
                                            AND (FK_HREmployeeID = {0} OR {0} = 0)
                                            AND CONVERT(NVARCHAR(10), HREmployeeOvertimeFromDate, 112) = '{1}'"
                                        , iEmployeeID, dt.ToString("yyyyMMdd"));
            return dal.GetDataSet(str);
        }
        public HREmployeeOvertimesInfo GetObjectEmployeeOvertimeByEmployeeANDDate(int iEmployeeID, DateTime dt)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmployeeOvertimes
                                            WHERE AAStatus = 'Alive'
                                            AND (FK_HREmployeeID = {0} OR {0} = 0)
                                            AND CONVERT(NVARCHAR(10), HREmployeeOvertimeFromDate, 112) = '{1}'"
                                        , iEmployeeID, dt.ToString("yyyyMMdd"));
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return (HREmployeeOvertimesInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }

        #endregion        

        #region Lấy tất cả đăng ký tăng ca theo thời gian --Vinh -- 05/07/2013

        public DataSet GetAllEmployeeOvertimeByEmployeeANDDate(int iEmployeID, DateTime dtFrom, DateTime dtTo)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmployeeOvertimes
                                            WHERE AAStatus = 'Alive'
                                            --AND FK_HREmployeeID = 0
                                            AND 
                                            (
	                                            (
		                                            CONVERT(VARCHAR,HREmployeeOvertimeFromDate, 120) >=  '{0}'
		                                            AND 
		                                            CONVERT(VARCHAR,HREmployeeOvertimeFromDate, 120) <=  '{1}'
	                                            )
	                                            OR
	                                            (
		                                            CONVERT(VARCHAR,HREmployeeOvertimeToDate, 120) >=  '{0}'
		                                            AND 
		                                            CONVERT(VARCHAR,HREmployeeOvertimeToDate, 120) <=  '{1}'
	                                            )
                                            )", dtFrom.ToString("yyyy-MM-dd HH:mm:ss"), dtTo.ToString("yyyy-MM-dd HH:mm:ss"));
            return dal.GetDataSet(str);
        }

        #endregion

        #region Lấy tất cả đăng ký tăng ca theo thời gian --Vinh -- 05/07/2013

        public DataSet GetAllEmployeeOvertimeByEmployeeANDDate(int iEmployeID, int iShiftID, DateTime dt)
        {
            String str = String.Format(@"   SELECT * FROM dbo.HREmployeeOvertimes
                                            WHERE AAStatus = 'Alive'
                                            AND (FK_HREmployeeID = {0} OR {0} = 0)
                                            AND (FK_HRShiftID = {1} OR {1} = 0)
                                            AND CONVERT(NVARCHAR(20),HREmployeeOvertimeFromDate, 112) = '{2}'
		                                    ", iEmployeID, iShiftID, dt.ToString("yyyyMMdd"));
            return dal.GetDataSet(str);
        }

        #endregion

        #region GetDataByDateTime --Vinh --28/09/2013 --Kiểm tra nhân viên ngày hôm đó có đăng ký tăng ca hay chưa (Tính luôn thời gian), Trả về chấm công hôm đó nếu có.

        public HREmployeeOvertimesInfo GetDataByTime(int iEmployeeID, DateTime dtStart, DateTime dtEnd, int iEmployeeOvertimeOldID)
        {
            String str = String.Format(@"SELECT * FROM dbo.HREmployeeOvertimes
                                            WHERE AAStatus='Alive'
                                            AND FK_HREmployeeID={0}
                                            AND HREmployeeOvertimeID != {3}
                                            AND (
                                                      (
                                                        CONVERT(VARCHAR,HREmployeeOvertimeFromDate,120) > '{1}'
                                                        AND 
                                                        CONVERT(VARCHAR,HREmployeeOvertimeFromDate,120) < '{2}'
                                                      )
                                                      OR
                                                      (
                                                        CONVERT(VARCHAR,HREmployeeOvertimeToDate,120) > '{1}'
                                                        AND 
                                                        CONVERT(VARCHAR,HREmployeeOvertimeToDate,120) < '{2}'
                                                       )
                                                 )", iEmployeeID, dtStart.ToString("yyyy-MM-dd HH:mm:ss"), dtEnd.ToString("yyyy-MM-dd HH:mm:ss"), iEmployeeOvertimeOldID);
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return (HREmployeeOvertimesInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }

        #endregion
        public DataSet GetAllEmployeeOvertimeByFromDateToDate(DateTime dtFomdate, DateTime dtTodate)
        {
            String str = String.Format(@"SELECT * 
                                            FROM dbo.HREmployeeOvertimes
                                            WHERE AAStatus = 'Alive'
                                            AND CONVERT(NVARCHAR(20),HREmployeeOvertimeFromDate, 112) >='{0}'
                                            AND CONVERT(NVARCHAR(20),HREmployeeOvertimeFromDate, 112) <='{1}'
		                                    ", dtFomdate.ToString("yyyyMMdd"), dtTodate.ToString("yyyyMMdd"));
            return dal.GetDataSet(str);
        }
    }
	#endregion
}