using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region ARShpPlans
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:ARShpPlansController
	//Created Date:Thursday, September 06, 2012
	//-----------------------------------------------------------
	
	public class ARShpPlansController:BaseBusinessController
	{
		public ARShpPlansController()
		{
			dal= new DALBaseProvider("ARShpPlans",typeof(ARShpPlansInfo));
		}
        /// <summary>
        /// Created by hoang.nguyen
        /// Created date: 20.09.2012
        /// </summary>
        /// <param name="iPeriod"></param>
        /// <param name="iYear"></param>
        /// <returns></returns>
        public ARShpPlansInfo GetObjectByPeriod(int iPeriod, int iYear)
        {
            ARShpPlansInfo shpPlnInfo = new ARShpPlansInfo();
            String strQuery = String.Format(@"SELECT TOP(1)* FROM ARShpPlans WHERE AAStatus = 'Alive' AND ARShpPlanPeriod = {0} AND ARShpPlanYear = {1}",iPeriod,iYear);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables[0].Rows.Count > 0)
                return (ARShpPlansInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            return null;
        }
        public int CountShpPlanInPeriodAndYear(int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"SELECT Count(*) FROM ARShpPlans WHERE ARShpPlanPeriod = {0} AND ARShpPlanYear = {1}", iPeriod, iYear);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return Convert.ToInt32(ds.Tables[0].Rows[0][0]);
            return 0;
        }

        /// <summary>
        /// Viet Nguyen 2012/12/04
        /// Get ShpPlan Begin
        /// </summary>
        public ARShpPlansInfo GetObjectBegin()
        {
            string strQuery = string.Format(@"Select Top 1 * From ARShpPlans where AAStatus='Alive'
                                                order By ARShpPlanYear,ARShpPlanPeriod");
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (ARShpPlansInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            return null;
        }
        public DataSet GetAllDataByShpPlanInRange(int iARShpPlanID, int iFromPeriod,int iFromYear,int iToPeriod,int iToYear)
        {
            String strQuery = String.Format(@"SELECT * FROM ARShpPlans WHERE AAStatus = 'Alive'");
            if (iARShpPlanID > 0)
                strQuery += string.Format(@" AND ARShpPlanID={0}", iARShpPlanID);
            else
                strQuery += string.Format(@" AND (ARShpPlanPeriod+ARShpPlanYear*12)>={0} AND (ARShpPlanPeriod+ARShpPlanYear*12)<={1}", iFromPeriod + iFromYear * 12, iToPeriod + iToYear * 12);
            strQuery += "Order by ARShpPlanYear,ARShpPlanPeriod";
            return dal.GetDataSet(strQuery);
        }

        /// <summary>
        /// Viet Nguyen 2013.05.06
        /// Tinh và cập nhật giá trị cho KHXH.
        /// strShpPlanAmtTotField= SUM(strShpPlanItemAmtTotField) trong Item của KHXH
        /// </summary>
        public void CalculateAndUpdateAmtTot(int iARShpPlanID, string strShpPlanAmtTotField, string strShpPlanItemAmtTotField)
        {
            string strQuery = string.Format(@"Update ARShpPlans set {1}=(select SUM(ISNULL({2},0)) from ARShpPlanItems where AAStatus='Alive' AND FK_ARShpPlanID={0})
                                                where ARShpPlanID={0}", iARShpPlanID, strShpPlanAmtTotField, strShpPlanItemAmtTotField);
            dal.GetDataSet(strQuery);
        }

        public DataSet GetShpPlan(DateTime dtFrom, DateTime dtTo)
        {
            String strQuery = String.Format(@"SELECT * FROM dbo.ARShpPlans WHERE AAStatus='Alive' 
                                            AND CONVERT(VARCHAR(10), [ARShpPlanDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112) 
                                            AND CONVERT(VARCHAR(10), [ARShpPlanDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)", dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"));
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAllObjectARShpPlnIncomlete()
        {
            String strQuery = String.Format(@" SELECT ARShpPlanID,ARShpPlanNo,ARShpPlanName
	FROM ARShpPlans
	WHERE ARShpPlanStatusCombo <> 'Complete' AND AAStatus = 'Alive'
	AND ARShpPlanID IN(SELECT FK_ARShpPlanID FROM ARShpPlanItems WHERE AAStatus = 'Alive' 
		AND (ARShpPlanItemNTSQty - ISNULL((select sum(PPPkgOrderItemQty) from PPPkgOrderItems where FK_ARShpPlanItemID = ARShpPlanItemID AND AAStatus='Alive'),0)) > 0 )");
            return dal.GetDataSet(strQuery);
        }
        
	}
	#endregion
}