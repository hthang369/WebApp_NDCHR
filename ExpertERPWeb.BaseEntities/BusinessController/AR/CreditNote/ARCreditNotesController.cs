using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region ARCreditNotes
	//-----------------------------------------------------------
	//Generated By: VTD Studio
	//Class:ARCreditNotesController
	//Created Date:Monday, April 12, 2010
	//-----------------------------------------------------------
	
	public class ARCreditNotesController:BaseBusinessController
	{
		public ARCreditNotesController()
		{
			dal= new DALBaseProvider("ARCreditNotes",typeof(ARCreditNotesInfo));
		}

        public DataSet GetAllCreditNote_InPeriod(int iPeriod, int iYear,string status)
        {
            DateTime fromDate = new DateTime(iYear, iPeriod, 1);
            DateTime toDate = new DateTime(iYear, iPeriod, DateTime.DaysInMonth(iYear, iPeriod));
            string query = "SELECT * FROM ARCreditNotes WHERE AAStatus = 'Alive' AND 0 = 0 ";
            if (fromDate.Year != 1)
                query += String.Format("AND ARCreditNoteDate >= '{0}' ", String.Format("{0:yyyy/M/d HH:mm:ss}", fromDate));
            if (toDate.Year != 1)
                query += string.Format("AND ARCreditNoteDate <= '{0}' ", String.Format("{0:yyyy/M/d HH:mm:ss}", toDate));
            DataSet ds = dal.GetDataSet(query + string.Format(" and (AAPostStatus is Null or AAPostStatus = N'{0}')", status));
            return ds;
        }

        public double GetCreditNoteAmtTotByYearMonthAndFK_CustomerID(int year, int month, int FK_ARCustomerID)
        {
            String strQuery = String.Format(@"SELECT SUM(ARCreditNoteAmtTot)
                                            FROM ARCreditNotes
                                            WHERE  AAStatus='Alive' AND Month(ARCreditNoteDate) = {0} AND Year(ARCreditNoteDate) = {1} AND FK_ARCustomerID = {2}", month, year, FK_ARCustomerID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                if (!String.IsNullOrEmpty(ds.Tables[0].Rows[0][0].ToString()))
                {
                    double result = double.Parse(ds.Tables[0].Rows[0][0].ToString());
                    return result;
                }
            }
            return 0;
        }
        /// <summary> Get All CreditNote Before Date
        ///Created By Huu Vinh
        /// Created Date 17.04.12
        /// </summary>
        /// 
        public DataSet GetAllCreditNoteBeforeDate(int iCustomerID, DateTime date)
        {
            String query = string.Format(@"SELECT * FROM ARCreditNotes WHERE AAStatus = 'Alive' AND FK_ARCustomerID={0} AND (CONVERT(VARCHAR(10), [ARCreditNoteDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112))", iCustomerID, date.ToString("yyyyMMdd"));
            return dal.GetDataSet(query);
        }
        public DataSet ListCreditNotes(int iCustomerID, int iMonth, int iYear)
        {
            String query = string.Format(@"select * from ARCreditNotes where AAStatus = 'Alive' and FK_ARCustomerID = {0} 
                        and month(ARCreditNoteDate) + year(ARCreditNoteDate)*12 <={1}", iCustomerID, iMonth + iYear * 12);
            return dal.GetDataSet(query);

        }

        #region Get All CreditNote By Product And CreditNoteItemType

        public DataSet GetAllCreditNoteByProductAndItemType(int iProductID, String strType)
        {
            String str = String.Format(@"SELECT * FROM ARCreditNotes WHERE AAStatus='Alive' AND ARCreditNoteID IN (SELECT FK_ARCreditNoteID FROM ARCreditNoteItems WHERE AAStatus='Alive' AND FK_ICProductID={0} AND ARCreditNoteItemTypeCombo='{1}')", iProductID, strType);
            return dal.GetDataSet(str);
        }

        #endregion

        public DataSet GetAllCreditNoteNeedPayment(int iCustomerID)
        {
            String strQuery = String.Format(@"SELECT * FROM ARCreditNotes 
                                                    WHERE AAStatus = 'Alive' 
                                                    AND FK_ARCustomerID = {0}
                                                    AND ARCreditNoteRFAmtTot > 0
                                                    ORDER BY ARCreditNoteExpireDate", iCustomerID);

            return GetDataSet(strQuery);

        }

        /// <summary> Get AmtTotal CreditNote By less than Month Year
        ///Created By Viet Nguyen
        /// Created Date 16.04.12
        /// </summary>
        public double GetAmtTotCreditNoteByCustomerAndLessThanMonth(int iCustomerID, int iMonth, int iYear)
        {
            String query = string.Format(@"select SUM(ARCreditNoteAmtTot) from ARCreditNotes where AAStatus = 'Alive' and FK_ARCustomerID = {0} 
                        and month(ARCreditNoteDate) + year(ARCreditNoteDate)*12 <={1}", iCustomerID, iMonth + iYear * 12);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0][0] != DBNull.Value && !string.IsNullOrEmpty(ds.Tables[0].Rows[0][0].ToString()))
                    try
                    {
                        return double.Parse(ds.Tables[0].Rows[0][0].ToString());
                    }
                    catch (System.Exception ex)
                    {

                    }
            }
            return 0;
        }

        /// <summary> Count CreditNote By less than Month Year
        ///Created By Viet Nguyen
        /// Created Date 16.04.12
        /// </summary>
        public int CountCreditNoteByCustomerAndLessThanMonth(int iCustomerID, int iMonth, int iYear)
        {
            String query = string.Format(@"select count(*) from ARCreditNotes where AAStatus = 'Alive' and FK_ARCustomerID = {0} 
                        and month(ARCreditNoteDate) + year(ARCreditNoteDate)*12 <={1}", iCustomerID, iMonth + iYear * 12);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0][0] != DBNull.Value && !string.IsNullOrEmpty(ds.Tables[0].Rows[0][0].ToString()))
                    try
                    {
                        return int.Parse(ds.Tables[0].Rows[0][0].ToString());
                    }
                    catch (System.Exception ex)
                    {

                    }
            }
            return 0;
        }

        /// <summary> Get Last CreditNote By Customer 
        ///Created By Viet Nguyen
        /// Created Date 16.04.12
        /// </summary>
        public ARCreditNotesInfo GetLastCreditNoteByCustomer(int iCustomerID)
        {
            String query = string.Format(@"select top 1 * from ARCreditNotes where  AAStatus = 'Alive' and FK_ARCustomerID = {0} 
                         order by ARCreditNoteDate desc", iCustomerID);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return (ARCreditNotesInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }

        /// <summary> Get largest Amt CreditNote By Customer 
        ///Created By Viet Nguyen
        /// Created Date 16.04.12
        /// </summary>
//        public ARCustPmtsInfo GetLargestAmtCreditNoteByCustome(int iCustomerID)
//        {
//            String query = string.Format(@"select top 1 * from ARCreditNotes where  AAStatus = 'Alive' and FK_ARCustomerID = {0} 
//                        order by ARCreditNoteAmtTot desc", iCustomerID);
//            DataSet ds = dal.GetDataSet(query);
//            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
//            {
//                return (ARCustPmtsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
//            }
//            return null;
//        }

        public double GetTotalCreditNoteAmtInPeriod(int year, int month, int FK_ARCustomerID)
        {
            String strQuery = String.Format(@"SELECT SUM(ARCreditNoteAmtTot)
                                            FROM ARCreditNotes
                                            WHERE  AAStatus='Alive' AND Month(ARCreditNoteDate) = {0} AND Year(ARCreditNoteDate) = {1} AND FK_ARCustomerID = {2}", month, year, FK_ARCustomerID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
                {
                    return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
                }
            }
            return 0;
        }
	}
	#endregion
}