using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region ARCustReqAnalyzeItems
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:ARCustReqAnalyzeItemsController
	//Created Date:Wednesday, December 17, 2014
	//-----------------------------------------------------------
	
	public class ARCustReqAnalyzeItemsController:BaseBusinessController
	{
		public ARCustReqAnalyzeItemsController()
		{
			dal= new DALBaseProvider("ARCustReqAnalyzeItems",typeof(ARCustReqAnalyzeItemsInfo));
		}

        public DataSet LayDanhSachPhanTichChiTietChaCungNhat(int iARCustReqAnalyzeID)
        {
            String str = String.Format(@"SELECT  ARCustReqAnalyzeItems.*
                                        FROM    dbo.ARCustReqAnalyzeItems
                                                INNER JOIN dbo.ARCustReqAnalyzes ON ( ARCustReqAnalyzes.ARCustReqAnalyzeID = ARCustReqAnalyzeItems.FK_ARCustReqAnalyzeID
                                                                                      AND ARCustReqAnalyzes.AAStatus = ARCustReqAnalyzeItems.AAStatus
                                                                                      AND ARCustReqAnalyzes.AAStatus = 'Alive'
                                                                                      AND ARCustReqAnalyzes.ARCustReqAnalyzeID = {0}
											                                          AND ARCustReqAnalyzeItems.FK_ARCustReqAnalyzeItemID = 0
                                                                                    )
                                        ORDER BY ARCustReqAnalyzeItemOrder ASC"
                , iARCustReqAnalyzeID);
            return dal.GetDataSet(str);
        }

        public Boolean KiemTraPhanTichChiTietCoConTrucTiep(int iARCustReqAnalyzeID, int iARCustReqAnalyzeItemParentID)
        {
            String str = String.Format(@"SELECT  *
                                        FROM    dbo.ARCustReqAnalyzeItems ItemParent
                                                INNER JOIN dbo.ARCustReqAnalyzes ON ( ARCustReqAnalyzes.ARCustReqAnalyzeID = ItemParent.FK_ARCustReqAnalyzeID
                                                                                      AND ARCustReqAnalyzes.AAStatus = ItemParent.AAStatus
                                                                                      AND ARCustReqAnalyzes.AAStatus = 'Alive'
                                                                                      AND ARCustReqAnalyzes.ARCustReqAnalyzeID = {0}
                                                                                      AND ItemParent.FK_ARCustReqAnalyzeItemID = {1}
                                                                                    )
                                                LEFT JOIN dbo.ARCustReqAnalyzeItems ItemChild ON ( ItemChild.FK_ARCustReqAnalyzeID = ARCustReqAnalyzes.ARCustReqAnalyzeID
                                                                                                   AND ItemChild.FK_ARCustReqAnalyzeItemID = ItemParent.ARCustReqAnalyzeItemID
                                                                                                   AND ItemChild.AAStatus = ARCustReqAnalyzes.AAStatus
                                                                                                   AND ItemChild.AAStatus = 'Alive'
                                                                                                 )
                                        WHERE   ItemChild.ARCustReqAnalyzeItemID IS NULL"
                , iARCustReqAnalyzeID, iARCustReqAnalyzeItemParentID);

            DataSet ds = dal.GetDataSet(str);
            if(ds!= null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return true;
            }

            return false;
        }

        public DataSet LayDanhSachPhanTichChiTietLaChaPhanTichChiTietKhac(int iARCustReqAnalyzeID, int iARCustReqAnalyzeItemParentID)
        {
            String str = String.Format(@"SELECT DISTINCT ItemParent.*
                                            FROM    dbo.ARCustReqAnalyzeItems ItemParent
                                                    INNER JOIN dbo.ARCustReqAnalyzes ON ( ARCustReqAnalyzes.ARCustReqAnalyzeID = ItemParent.FK_ARCustReqAnalyzeID
                                                                                          AND ARCustReqAnalyzes.AAStatus = ItemParent.AAStatus
                                                                                          AND ARCustReqAnalyzes.AAStatus = 'Alive'
                                                                                          AND ARCustReqAnalyzes.ARCustReqAnalyzeID = {0}
                                                                                          AND ItemParent.FK_ARCustReqAnalyzeItemID = {1}
                                                                                        )
                                                    LEFT JOIN dbo.ARCustReqAnalyzeItems ItemChild ON ( ItemChild.FK_ARCustReqAnalyzeID = ARCustReqAnalyzes.ARCustReqAnalyzeID
                                                                                                       AND ItemChild.FK_ARCustReqAnalyzeItemID = ItemParent.ARCustReqAnalyzeItemID
                                                                                                       AND ItemChild.AAStatus = ARCustReqAnalyzes.AAStatus
                                                                                                       AND ItemChild.AAStatus = 'Alive'
                                                                                                     )
                                            WHERE   ItemChild.ARCustReqAnalyzeItemID IS NOT NULL
                                            ORDER BY ItemParent.ARCustReqAnalyzeItemOrder ASC"
                , iARCustReqAnalyzeID, iARCustReqAnalyzeItemParentID);
            return dal.GetDataSet(str);
        }
        public DataSet GetAllDataByForeignColumnAndOtherByAsc(String strForeign,int iARCustReqAnalyzeItemID)
        {
            String str = String.Empty;
            str = String.Format(@"SELECT * FROM dbo.ARCustReqAnalyzeItems
                                WHERE {1}={0}
                                      AND AAStatus='Alive'
                                ORDER BY ARCustReqAnalyzeItemOrder", iARCustReqAnalyzeItemID,strForeign);
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables[0].Rows != null && ds.Tables[0].Rows.Count != 0)
            {
                return ds;
            }
            return null;
        }

        public DataSet LayDanhSachPhanTichChiTietConCungNhat(int iARCustReqAnalyze)
        {
            String str = String.Format(@"    SELECT ItemParent.*
                                             FROM   dbo.ARCustReqAnalyzeItems ItemParent
                                             INNER JOIN dbo.ARCustReqAnalyzes Parent ON ( Parent.ARCustReqAnalyzeID = ItemParent.FK_ARCustReqAnalyzeID
                                               AND Parent.AAStatus = ItemParent.AAStatus
                                               AND Parent.AAStatus = 'Alive'
                                               AND Parent.ARCustReqAnalyzeID = {0}
                                             )
                                            LEFT JOIN dbo.ARCustReqAnalyzeItems Item ON ( Parent.ARCustReqAnalyzeID = Item.FK_ARCustReqAnalyzeID
                                                AND Parent.AAStatus = Item.AAStatus
                                                AND Parent.AAStatus = 'Alive'
                                                AND Parent.ARCustReqAnalyzeID = {0}
                                                AND Item.FK_ARCustReqAnalyzeItemID = ItemParent.ARCustReqAnalyzeItemID
                                              )
                                            WHERE  Item.ARCustReqAnalyzeItemID IS NULL"
                                        , iARCustReqAnalyze);
            return dal.GetDataSet(str);
        }
	}
	#endregion
}