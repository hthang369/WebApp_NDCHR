using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region ARCampaignItems
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:ARCampaignItemsController
	//Created Date:Tuesday, April 24, 2012
	//-----------------------------------------------------------
	
	public class ARCampaignItemsController:BaseBusinessController
	{
		public ARCampaignItemsController()
		{
			dal= new DALBaseProvider("ARCampaignItems",typeof(ARCampaignItemsInfo));
		}
        public DataSet GetCampaignItemByQtyProduct(int iICProductID, double dbQty, DateTime dteDateTime)
        {
            string str = string.Format(@"Select * from ARCampaignItems WHERE AAStatus='Alive' AND FK_ICProductID={0}
                                                AND ARCampaignItemFromQty<={1} AND ARCampaignItemToQty>{1} 
                                             AND FK_ARCampaignID IN
		                                                             (SELECT ARCampaignID FROM dbo.ARCampaigns WHERE AAStatus='Alive' AND CONVERT(VARCHAR(10), [ARCampaignStartDate], 112)<= CONVERT(VARCHAR(10), '{2}', 112)
							                                                AND	CONVERT(VARCHAR(10), [ARCampaignEndDate], 112)>= CONVERT(VARCHAR(10), '{2}', 112))", iICProductID, dbQty, dteDateTime.ToString("yyyyMMdd"));
            return dal.GetDataSet(str);
        }

        public double GetTotalSOAmtByCampaignItemID(int iCampaignItemID)
        {
            String strQuery = String.Format("SELECT SUM(ARSOItemAmtTot) FROM ARSOItems WHERE AAStatus = 'Alive' AND FK_ARCampaignItemID = {0} AND FK_ARSOID IN (SELECT ARSOID FROM ARSOs WHERE ARSOs.AAStatus = 'Alive')", iCampaignItemID);

            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
                {
                    return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
                }
            }

            return 0;
        }

        public double GetTotalInvoiceAmtByCampaignItemID(int iCampaignItemID)
        {
            String strQuery = String.Format("SELECT SUM(ARInvoiceItemAmtTot) FROM ARInvoiceItems WHERE AAStatus = 'Alive' AND FK_ARCampaignItemID = {0} AND FK_ARInvoiceID IN (SELECT ARInvoiceID FROM ARInvoices WHERE ARInvoices.AAStatus = 'Alive')", iCampaignItemID);

            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
                {
                    return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
                }
            }

            return 0;
        }

        public double GetTotalShipmentCostByCampaignItemID(int iCampaignItemID)
        {
            String strQuery = String.Format("SELECT SUM(ICShipmentItemCostTot) FROM ICShipmentItems WHERE AAStatus = 'Alive' AND FK_ARCampaignItemID = {0} AND FK_ICShipmentID IN (SELECT ICShipmentID FROM ICShipments WHERE ICShipments.AAStatus = 'Alive')", iCampaignItemID);

            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
                {
                    return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
                }
            }

            return 0;
        }

        public DataSet GetAllSOItemsByCampaignItemID(int iCampaignItemID)
        {
            String strQuery = String.Format("SELECT * FROM ARSOItems WHERE AAStatus = 'Alive' AND FK_ARCampaignItemID = {0} AND FK_ARSOID IN(SELECT ARSOID FROM ARSOs WHERE ARSOs.AAStatus = 'Alive')", iCampaignItemID);

            return dal.GetDataSet(strQuery);

        }

        

        public DataSet GetCampaignItemBySOAmtTot(double dSOAmtTot,int iProductID)
        {
            string strQuery = String.Format(@"SELECT TOP 1 ARCampaignItems.* FROM ARCampaignItems INNER JOIN ARCampaigns ON ARCampaignItems.FK_ARCampaignID=ARCampaigns.ARCampaignID WHERE ARCampaigns.AAStatus='Alive' AND ARCampaignItems.AAStatus='Alive'  AND ARCampaignItems.FK_ICProductID={0} AND ARCampaignItems.ARCampaignItemFromAmt < {1} AND ARCampaignItems.ARCampaignItemToAmt > {1} ORDER BY ARCampaignItems.ARCampaignItemFromAmt",iProductID,dSOAmtTot);

            return dal.GetDataSet(strQuery);
        }

        #region Count Campaign -- QuocTrung 11/05/2012
        public int CountCampignOfProductAlternate(int iProductAlternativeChildID, DateTime dteDateTime)
        {
            string strQuery = String.Format(@"SELECT COUNT(DISTINCT FK_ARCampaignID) FROM ARCampaignItems INNER JOIN ARCampaigns 
                                                    ON ARCampaignItems.FK_ARCampaignID=ARCampaigns.ARCampaignID 
                                                    WHERE ARCampaigns.AAStatus='Alive' AND ARCampaignItems.AAStatus='Alive'  
                                                AND ARCampaignItems.FK_ICProductID={0}
                                                AND CONVERT(VARCHAR(10), [ARCampaignStartDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
							                                                AND	CONVERT(VARCHAR(10), [ARCampaignEndDate], 112)>= CONVERT(VARCHAR(10), '{1}', 112)                                                        
                                            ", iProductAlternativeChildID, dteDateTime.ToString("yyyyMMdd"));

            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                int i= Convert.ToInt32(ds.Tables[0].Rows[0][0]);
                if (i > 0) return 1;
                else
                    return 0;
            }
            return 0;
        }
        #endregion
    }
	#endregion
}