using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region ViewStandardWoods
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:ViewStandardWoodsController
	//Created Date:Wednesday, September 19, 2012
	//-----------------------------------------------------------
	
	public class ViewStandardWoodsController:BaseBusinessController
	{
		public ViewStandardWoodsController()
		{
			dal= new DALBaseProvider("ViewStandardWoods",typeof(ViewStandardWoodsInfo));
		}
        public double GetInvQtyProductByModelAndStandard(int iProductModelID, int iProductStandardID,int IProductTypeID,ref double dbCBM)
        {
            string strQuery = String.Format(@"Select SUM(ICInventoryStockQuantity),SUM(ICInventoryStockQuantity) 
                                                    from ICInventoryStocks
                                                    INNER JOIN ICProducts ON dbo.ICInventoryStocks.FK_ICProductID = dbo.ICProducts.ICProductID
                                                    WHERE dbo.ICInventoryStocks.AAStatus='Alive' AND dbo.ICProducts.AAStatus='Alive' 
                                                    AND (FK_ICProductModelID={0} or {0}=0) AND (FK_ICProductStandardID={1} or 0={1})
                                                    AND ICProducts.FK_ICProductTypeID={2}", iProductModelID, iProductStandardID, IProductTypeID);
            DataSet ds = dal.GetDataSet(strQuery);
            Double dbQty = 0;
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                if(ds.Tables[0].Rows[0][0] != DBNull.Value)
                    dbQty=Convert.ToDouble(ds.Tables[0].Rows[0][0]);
                if (ds.Tables[0].Rows[0][0] != DBNull.Value)
                    dbCBM = Convert.ToDouble(ds.Tables[0].Rows[0][1]);
            }
            return dbQty;
        }
        public double GetInvQtyProductByModelAndStandard(int iProductModelID, int iProductStandardID, int IProductTypeID,int iProductColorStandardID, ref double dbCBM)
        {
            string strQuery = String.Format(@"Select SUM(ICInventoryStockQuantity),SUM(ICInventoryStockQuantity) 
                                                    from ICInventoryStocks
                                                    INNER JOIN ICProducts ON dbo.ICInventoryStocks.FK_ICProductID = dbo.ICProducts.ICProductID
                                                    WHERE dbo.ICInventoryStocks.AAStatus='Alive' AND dbo.ICProducts.AAStatus='Alive' 
                                                    AND (FK_ICProductModelID={0} or {0}=0) AND (FK_ICProductStandardID={1} or 0={1})
                                                    AND ICProducts.FK_ICProductTypeID={2} AND (FK_ICProductColorSchemaID={3} or {3}=0)", iProductModelID, iProductStandardID, IProductTypeID,iProductColorStandardID);
            DataSet ds = dal.GetDataSet(strQuery);
            Double dbQty = 0;
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0][0] != DBNull.Value)
                    dbQty = Convert.ToDouble(ds.Tables[0].Rows[0][0]);
                if (ds.Tables[0].Rows[0][0] != DBNull.Value)
                    dbCBM = Convert.ToDouble(ds.Tables[0].Rows[0][1]);
            }
            return dbQty;
        }
        public double GetInvQtyProductByStandardGroupModelAndColor(int iProductModelID, int iProductStandardID, int iProductGroupID, int iProductColorSchemaID, ref double dbCBM)
        {
            string strQuery = String.Format(@"Select SUM(ICInventoryStockQuantity),SUM(ICInventoryStockQuantity*ICProducts.ICProductMaterialCBM) 
                                                    from ICInventoryStocks
                                                    INNER JOIN ICProducts ON dbo.ICInventoryStocks.FK_ICProductID = dbo.ICProducts.ICProductID
                                                    WHERE dbo.ICInventoryStocks.AAStatus='Alive' AND dbo.ICProducts.AAStatus='Alive' 
                                                    AND (FK_ICProductModelID={0} or {0}=0) AND (FK_ICProductStandardID={1} or 0={1})
                                                    AND ICProducts.FK_ICProductGroupID={2} AND (FK_ICProductColorSchemaID={3} or {3}=0)
                                                    AND ICInventoryStocks.FK_ICStockID in (select ICStockID from ICStocks where AAStatus='Alive')", iProductModelID, iProductStandardID, iProductGroupID, iProductColorSchemaID);
            DataSet ds = dal.GetDataSet(strQuery);
            Double dbQty = 0;
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0][0] != DBNull.Value)
                    dbQty = Convert.ToDouble(ds.Tables[0].Rows[0][0]);
                if (ds.Tables[0].Rows[0][1] != DBNull.Value)
                    dbCBM = Convert.ToDouble(ds.Tables[0].Rows[0][1]);
            }
            return dbQty;
        }
        public double GetInvQtyProductByStandardGroupAndColor(int iProductModelID, int iProductStandardID, int iProductGroupID, ref double dbCBM)
        {
            string strQuery = String.Format(@"Select SUM(ICInventoryStockQuantity),SUM(ICInventoryStockQuantity*ICProductMaterialCBM) 
                                                    from ICInventoryStocks
                                                    INNER JOIN ICProducts ON dbo.ICInventoryStocks.FK_ICProductID = dbo.ICProducts.ICProductID
                                                    WHERE dbo.ICInventoryStocks.AAStatus='Alive' AND dbo.ICProducts.AAStatus='Alive' 
                                                    AND (FK_ICProductModelID={0} or {0}=0) AND (FK_ICProductStandardID={1} or 0={1})
                                                    AND ICProducts.FK_ICProductGroupID={2}", iProductModelID, iProductStandardID, iProductGroupID);
            DataSet ds = dal.GetDataSet(strQuery);
            Double dbQty = 0;
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0][0] != DBNull.Value)
                    dbQty = Convert.ToDouble(ds.Tables[0].Rows[0][0]);
                if (ds.Tables[0].Rows[0][0] != DBNull.Value)
                    dbCBM = Convert.ToDouble(ds.Tables[0].Rows[0][1]);
            }
            return dbQty;
        }

        public DataSet GetAllDataRcpByStandardColorTypeInRange(DateTime dteFromDate, DateTime dteToDate, string strProductGroup)
        {
            string strQuery = string.Format(@"select FK_ICProductStandardID,FK_ICProductColorSchemaID,sum(ICReceiptItemQty) as ViewStandardWoodBeginQty,
                                                sum(ICReceiptItemQty) as ViewStandardWoodBeginCBM,ICReceiptItems.FK_ICStockID,SUM(ICReceiptItemCostTot) as ViewStandardWoodBeginPrice
                                                from ICReceiptItems inner join ICReceipts on ICReceiptItems.FK_ICReceiptID =ICReceipts.ICReceiptID
                                                inner join ICProducts on ICReceiptItems.FK_ICProductID = ICProducts.ICProductID inner join ICProductGroups
                                                on ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID inner join 
                                                ICProductColorSchemas on ICProducts.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                inner join ICProductStandards on ICProducts.FK_ICProductStandardID =ICProductStandards.ICProductStandardID
                                                where ICReceiptItems.AAStatus='Alive' AND ICReceipts.AAStatus='Alive' and ICProducts.AAStatus='Alive' and 
                                                ICProductGroups.AAStatus='Alive' AND ICProductColorSchemas.AAStatus='Alive' and ICProductStandards.AAStatus='Alive'
                                                AND ICProductGroupNo='{2}'
                                                AND CONVERT(VARCHAR(10), [ICReceiptDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                                                AND CONVERT(VARCHAR(10), [ICReceiptDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                                                group by FK_ICProductStandardID,FK_ICProductColorSchemaID,ICReceiptItems.FK_ICStockID
                                                ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strProductGroup);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataRcpInProducionOrdrByStandardColorTypeInRange(DateTime dteFromDate, DateTime dteToDate, string strProductGroup)
        {
            string strDate = DALUtil.GenerateBeetween("PPProductionOrdrDate", dteFromDate, dteToDate);
            string strQuery = string.Format(@"select FK_ICProductStandardID,FK_ICProductColorSchemaID,sum(ICReceiptItemQty) as ViewStandardWoodBeginQty,
                                                sum(ICReceiptItemQty) as ViewStandardWoodBeginCBM,ICReceiptItems.FK_ICStockID,SUM(ICReceiptItemCostTot) as ViewStandardWoodBeginPrice
                                                from ICReceiptItems inner join PPProductionOrdrs on ICReceiptItems.FK_PPProductionOrdrID =PPProductionOrdrs.PPProductionOrdrID
                                                inner join ICProducts on ICReceiptItems.FK_ICProductID = ICProducts.ICProductID inner join ICProductGroups
                                                on ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID inner join 
                                                ICProductColorSchemas on ICProducts.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                inner join ICProductStandards on ICProducts.FK_ICProductStandardID =ICProductStandards.ICProductStandardID
                                                where ICReceiptItems.AAStatus='Alive' AND PPProductionOrdrs.AAStatus='Alive' and ICProducts.AAStatus='Alive' and 
                                                ICProductGroups.AAStatus='Alive' AND ICProductColorSchemas.AAStatus='Alive' and ICProductStandards.AAStatus='Alive'
                                                AND ICProductGroupNo='{1}'
                                                AND {0}
                                                group by FK_ICProductStandardID,FK_ICProductColorSchemaID,ICReceiptItems.FK_ICStockID
                                                ", strDate, strProductGroup);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataTransferInByStandardColorTypeInRange(DateTime dteFromDate, DateTime dteToDate, string strProductGroup)
        {
            string strQuery = string.Format(@"select FK_ICProductStandardID,FK_ICProductColorSchemaID,sum(ICTransferItemQty) as ViewStandardWoodBeginQty,
                                                sum(ICTransferItemQty) as ViewStandardWoodBeginCBM,ICTransferItems.FK_ICToStockID as FK_ICStockID,SUM(ICTransferitemCostTot) as ViewStandardWoodBeginPrice
                                                from ICTransferItems inner join ICTransfers on ICTransferItems.FK_ICTransferID =ICTransfers.ICTransferID
                                                inner join ICProducts on ICTransferItems.FK_ICProductID = ICProducts.ICProductID inner join ICProductGroups
                                                on ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID inner join 
                                                ICProductColorSchemas on ICProducts.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                inner join ICProductStandards on ICProducts.FK_ICProductStandardID =ICProductStandards.ICProductStandardID
                                                where ICTransferItems.AAStatus='Alive' AND ICTransfers.AAStatus='Alive' and ICProducts.AAStatus='Alive' and 
                                                ICProductGroups.AAStatus='Alive' AND ICProductColorSchemas.AAStatus='Alive' and ICProductStandards.AAStatus='Alive'
                                                AND ICProductGroupNo='{2}'
                                                AND CONVERT(VARCHAR(10), [ICTransferDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                                                AND CONVERT(VARCHAR(10), [ICTransferDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                                                group by FK_ICProductStandardID,FK_ICProductColorSchemaID,ICTransferItems.FK_ICToStockID
                                                ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strProductGroup);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataShpByStandardColorTypeInRange(DateTime dteFromDate, DateTime dteToDate, string strProductGroup)
        {
            string strQuery = string.Format(@"select FK_ICProductStandardID,FK_ICProductColorSchemaID,sum(ICShipmentItemQty) as ViewStandardWoodBeginQty,
                                                sum(ICShipmentItemQty) as ViewStandardWoodBeginCBM,ICShipmentItems.FK_ICStockID,SUM(ICShipmentItemCostTot) as ViewStandardWoodBeginPrice
                                                from ICShipmentItems inner join ICShipments on ICShipmentItems.FK_ICShipmentID =ICShipments.ICShipmentID
                                                inner join ICProducts on ICShipmentItems.FK_ICProductID = ICProducts.ICProductID inner join ICProductGroups
                                                on ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID inner join 
                                                ICProductColorSchemas on ICProducts.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                inner join ICProductStandards on ICProducts.FK_ICProductStandardID =ICProductStandards.ICProductStandardID
                                                where ICShipmentItems.AAStatus='Alive' AND ICShipments.AAStatus='Alive' and ICProducts.AAStatus='Alive' and 
                                                ICProductGroups.AAStatus='Alive' AND ICProductColorSchemas.AAStatus='Alive' and ICProductStandards.AAStatus='Alive'
                                                AND CONVERT(VARCHAR(10), [ICShipmentDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                                                AND CONVERT(VARCHAR(10), [ICShipmentDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                                                AND ICProductGroupNo='{2}'
                                                group by FK_ICProductStandardID,FK_ICProductColorSchemaID,ICShipmentItems.FK_ICStockID
                                                ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strProductGroup);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataShpInProducionOrdrByStandardColorTypeInRange(DateTime dteFromDate, DateTime dteToDate, string strProductGroup)
        {
            string strDate = DALUtil.GenerateBeetween("PPProductionOrdrDate", dteFromDate, dteToDate);
            string strQuery = string.Format(@"select FK_ICProductStandardID,FK_ICProductColorSchemaID,sum(ICShipmentItemQty) as ViewStandardWoodBeginQty,
                                                sum(ICShipmentItemQty) as ViewStandardWoodBeginCBM,ICShipmentItems.FK_ICStockID,SUM(ICShipmentItemCostTot) as ViewStandardWoodBeginPrice
                                                from ICShipmentItems inner join PPProductionOrdrs on ICShipmentItems.FK_PPProductionOrdrID =PPProductionOrdrs.PPProductionOrdrID
                                                inner join ICProducts on ICShipmentItems.FK_ICProductID = ICProducts.ICProductID inner join ICProductGroups
                                                on ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID inner join 
                                                ICProductColorSchemas on ICProducts.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                inner join ICProductStandards on ICProducts.FK_ICProductStandardID =ICProductStandards.ICProductStandardID
                                                where ICShipmentItems.AAStatus='Alive' AND PPProductionOrdrs.AAStatus='Alive' and ICProducts.AAStatus='Alive' and 
                                                ICProductGroups.AAStatus='Alive' AND ICProductColorSchemas.AAStatus='Alive' and ICProductStandards.AAStatus='Alive'
                                                AND {0}
                                                AND ICProductGroupNo='{1}'
                                                group by FK_ICProductStandardID,FK_ICProductColorSchemaID,ICShipmentItems.FK_ICStockID
                                                ", strDate, strProductGroup);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataTransferOutByStandardColorTypeInRange(DateTime dteFromDate, DateTime dteToDate, string strProductGroup)
        {
            string strQuery = string.Format(@"select FK_ICProductStandardID,FK_ICProductColorSchemaID,sum(ICTransferItemQty) as ViewStandardWoodBeginQty,
                                                sum(ICTransferItemQty) as ViewStandardWoodBeginCBM,ICTransferItems.FK_ICFromStockID as FK_ICStockID,SUM(ICTransferitemCostTot) as ViewStandardWoodBeginPrice
                                                from ICTransferItems inner join ICTransfers on ICTransferItems.FK_ICTransferID =ICTransfers.ICTransferID
                                                inner join ICProducts on ICTransferItems.FK_ICProductID = ICProducts.ICProductID inner join ICProductGroups
                                                on ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID inner join 
                                                ICProductColorSchemas on ICProducts.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                inner join ICProductStandards on ICProducts.FK_ICProductStandardID =ICProductStandards.ICProductStandardID
                                                where ICTransferItems.AAStatus='Alive' AND ICTransfers.AAStatus='Alive' and ICProducts.AAStatus='Alive' and 
                                                ICProductGroups.AAStatus='Alive' AND ICProductColorSchemas.AAStatus='Alive' and ICProductStandards.AAStatus='Alive'
                                                AND CONVERT(VARCHAR(10), [ICTransferDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                                                AND CONVERT(VARCHAR(10), [ICTransferDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                                                AND ICProductGroupNo='{2}'
                                                group by FK_ICProductStandardID,FK_ICProductColorSchemaID,ICTransferItems.FK_ICFromStockID
                                                ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strProductGroup);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataAdjInvByStandardColorTypeInRange(DateTime dteFromDate, DateTime dteToDate, string strProductGroup, string strAdjType)
        {
            string strQuery = string.Format(@"select FK_ICProductStandardID,FK_ICProductColorSchemaID,sum(ICAdjInvItemQty) as ViewStandardWoodBeginQty,
                                                sum(ICAdjInvItemQty) as ViewStandardWoodBeginCBM,ICAdjInvItems.FK_ICStockID,SUM(ICAdjInvItemCostTot) as ViewStandardWoodBeginPrice
                                                from ICAdjInvItems inner join ICAdjInvs on ICAdjInvItems.FK_ICAdjInvID =ICAdjInvs.ICAdjInvID
                                                inner join ICProducts on ICAdjInvItems.FK_ICProductID = ICProducts.ICProductID inner join ICProductGroups
                                                on ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID inner join 
                                                ICProductColorSchemas on ICProducts.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                inner join ICProductStandards on ICProducts.FK_ICProductStandardID =ICProductStandards.ICProductStandardID
                                                where ICAdjInvItems.AAStatus='Alive' AND ICAdjInvs.AAStatus='Alive' and ICProducts.AAStatus='Alive' and 
                                                ICProductGroups.AAStatus='Alive' AND ICProductColorSchemas.AAStatus='Alive' and ICProductStandards.AAStatus='Alive'
                                                AND CONVERT(VARCHAR(10), [ICAdjInvDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                                                AND CONVERT(VARCHAR(10), [ICAdjInvDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                                                AND ICProductGroupNo='{2}'
												AND ICAdjInvItemTypeCombo='{3}'
                                                group by FK_ICProductStandardID,FK_ICProductColorSchemaID,ICAdjInvItems.FK_ICStockID
                                                ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strProductGroup, strAdjType);
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAllDataRcpByStandardColorSerialTypeInRange(DateTime dteFromDate, DateTime dteToDate, string strType)
        {
            string strQuery = string.Format(@"select FK_ICProductStandardID,FK_ICProductColorSchemaID,ICReceiptItemLotNo as ViewStandardWoodSerialNo,sum(ICReceiptItemQty) as ViewStandardWoodBeginQty,
                                                sum(ICReceiptItemQty) as ViewStandardWoodBeginCBM,ICReceiptItems.FK_ICStockID,SUM(ICReceiptItemCostTot) as ViewStandardWoodBeginPrice
                                                from ICReceiptItems inner join ICReceipts on ICReceiptItems.FK_ICReceiptID =ICReceipts.ICReceiptID
                                                inner join ICProducts on ICReceiptItems.FK_ICProductID = ICProducts.ICProductID inner join ICProductGroups
                                                on ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID inner join 
                                                ICProductColorSchemas on ICProducts.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                inner join ICProductStandards on ICProducts.FK_ICProductStandardID =ICProductStandards.ICProductStandardID
                                                where ICReceiptItems.AAStatus='Alive' AND ICReceipts.AAStatus='Alive' and ICProducts.AAStatus='Alive' and 
                                                ICProductGroups.AAStatus='Alive' AND ICProductColorSchemas.AAStatus='Alive' and ICProductStandards.AAStatus='Alive'
                                                AND CONVERT(VARCHAR(10), [ICReceiptDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                                                AND CONVERT(VARCHAR(10), [ICReceiptDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                                                AND ICProductGroupNo='{2}'
                                                group by FK_ICProductStandardID,FK_ICProductColorSchemaID,ICReceiptItemLotNo,ICReceiptItems.FK_ICStockID
                                                ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strType);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataRcpInProductionOrdrByStandardColorSerialTypeInRange(DateTime dteFromDate, DateTime dteToDate, string strType)
        {
            string strQuery = string.Format(@"select FK_ICProductStandardID,FK_ICProductColorSchemaID,ICReceiptItemLotNo as ViewStandardWoodSerialNo,sum(ICReceiptItemQty) as ViewStandardWoodBeginQty,
                                                sum(ICReceiptItemQty) as ViewStandardWoodBeginCBM,ICReceiptItems.FK_ICStockID,SUM(ICReceiptItemCostTot) as ViewStandardWoodBeginPrice
                                                from ICReceiptItems inner join PPProductionOrdrs on ICReceiptItems.FK_PPProductionOrdrID =PPProductionOrdrs.PPProductionOrdrID
                                                inner join ICProducts on ICReceiptItems.FK_ICProductID = ICProducts.ICProductID inner join ICProductGroups
                                                on ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID inner join 
                                                ICProductColorSchemas on ICProducts.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                inner join ICProductStandards on ICProducts.FK_ICProductStandardID =ICProductStandards.ICProductStandardID
                                                where ICReceiptItems.AAStatus='Alive' AND PPProductionOrdrs.AAStatus='Alive' and ICProducts.AAStatus='Alive' and 
                                                ICProductGroups.AAStatus='Alive' AND ICProductColorSchemas.AAStatus='Alive' and ICProductStandards.AAStatus='Alive'
                                                AND CONVERT(VARCHAR(10), [PPProductionOrdrDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                                                AND CONVERT(VARCHAR(10), [PPProductionOrdrDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                                                AND ICProductGroupNo='{2}'
                                                group by FK_ICProductStandardID,FK_ICProductColorSchemaID,ICReceiptItemLotNo,ICReceiptItems.FK_ICStockID
                                                ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strType);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataTransferInByStandardColorSerialTypeInRange(DateTime dteFromDate, DateTime dteToDate, string strType)
        {
            string strQuery = string.Format(@"select FK_ICProductStandardID,FK_ICProductColorSchemaID,ICTransferItemLotNo as ViewStandardWoodSerialNo,sum(ICTransferItemQty) as ViewStandardWoodBeginQty,
                                                sum(ICTransferItemQty) as ViewStandardWoodBeginCBM,ICTransferItems.FK_ICToStockID as FK_ICStockID,SUM(ICTransferItemCostTot) as ViewStandardWoodBeginPrice
                                                from ICTransferItems inner join ICTransfers on ICTransferItems.FK_ICTransferID =ICTransfers.ICTransferID
                                                inner join ICProducts on ICTransferItems.FK_ICProductID = ICProducts.ICProductID inner join ICProductGroups
                                                on ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID inner join 
                                                ICProductColorSchemas on ICProducts.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                inner join ICProductStandards on ICProducts.FK_ICProductStandardID =ICProductStandards.ICProductStandardID
                                                where ICTransferItems.AAStatus='Alive' AND ICTransfers.AAStatus='Alive' and ICProducts.AAStatus='Alive' and 
                                                ICProductGroups.AAStatus='Alive' AND ICProductColorSchemas.AAStatus='Alive' and ICProductStandards.AAStatus='Alive'
                                                AND CONVERT(VARCHAR(10), [ICTransferDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                                                AND CONVERT(VARCHAR(10), [ICTransferDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                                                AND ICProductGroupNo='{2}'
                                                group by FK_ICProductStandardID,FK_ICProductColorSchemaID,ICTransferItemLotNo,ICTransferItems.FK_ICToStockID
                                                ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strType);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataShpByStandardColorSerialTypeInRange(DateTime dteFromDate, DateTime dteToDate, string strType)
        {
            string strQuery = string.Format(@"select FK_ICProductStandardID,FK_ICProductColorSchemaID,ICShipmentItemLotNo as ViewStandardWoodSerialNo,sum(ICShipmentItemQty) as ViewStandardWoodBeginQty,
                                                sum(ICShipmentItemQty) as ViewStandardWoodBeginCBM,ICShipmentItems.FK_ICStockID,SUM(ICShipmentItemCostTot) as ViewStandardWoodBeginPrice
                                                from ICShipmentItems inner join ICShipments on ICShipmentItems.FK_ICShipmentID =ICShipments.ICShipmentID
                                                inner join ICProducts on ICShipmentItems.FK_ICProductID = ICProducts.ICProductID inner join ICProductGroups
                                                on ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID inner join 
                                                ICProductColorSchemas on ICProducts.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                inner join ICProductStandards on ICProducts.FK_ICProductStandardID =ICProductStandards.ICProductStandardID
                                                where ICShipmentItems.AAStatus='Alive' AND ICShipments.AAStatus='Alive' and ICProducts.AAStatus='Alive' and 
                                                ICProductGroups.AAStatus='Alive' AND ICProductColorSchemas.AAStatus='Alive' and ICProductStandards.AAStatus='Alive'
                                                AND CONVERT(VARCHAR(10), [ICShipmentDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                                                AND CONVERT(VARCHAR(10), [ICShipmentDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                                                AND ICProductGroupNo='{2}'   
                                                group by FK_ICProductStandardID,FK_ICProductColorSchemaID,ICShipmentItemLotNo,ICShipmentItems.FK_ICStockID
                                                ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strType);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataShpInProductionOrdrByStandardColorSerialTypeInRange(DateTime dteFromDate, DateTime dteToDate, string strType)
        {
            string strQuery = string.Format(@"select FK_ICProductStandardID,FK_ICProductColorSchemaID,ICShipmentItemLotNo as ViewStandardWoodSerialNo,sum(ICShipmentItemQty) as ViewStandardWoodBeginQty,
                                                sum(ICShipmentItemQty) as ViewStandardWoodBeginCBM,ICShipmentItems.FK_ICStockID,SUM(ICShipmentItemCostTot) as ViewStandardWoodBeginPrice
                                                from ICShipmentItems inner join PPProductionOrdrs on ICShipmentItems.FK_PPProductionOrdrID =PPProductionOrdrs.PPProductionOrdrID
                                                inner join ICProducts on ICShipmentItems.FK_ICProductID = ICProducts.ICProductID inner join ICProductGroups
                                                on ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID inner join 
                                                ICProductColorSchemas on ICProducts.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                inner join ICProductStandards on ICProducts.FK_ICProductStandardID =ICProductStandards.ICProductStandardID
                                                where ICShipmentItems.AAStatus='Alive' AND PPProductionOrdrs.AAStatus='Alive' and ICProducts.AAStatus='Alive' and 
                                                ICProductGroups.AAStatus='Alive' AND ICProductColorSchemas.AAStatus='Alive' and ICProductStandards.AAStatus='Alive'
                                                AND CONVERT(VARCHAR(10), [PPProductionOrdrDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                                                AND CONVERT(VARCHAR(10), [PPProductionOrdrDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                                                AND ICProductGroupNo='{2}'   
                                                group by FK_ICProductStandardID,FK_ICProductColorSchemaID,ICShipmentItemLotNo,ICShipmentItems.FK_ICStockID
                                                ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strType);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataTransferOutByStandardColorSerialTypeInRange(DateTime dteFromDate, DateTime dteToDate, string strType)
        {
            string strQuery = string.Format(@"select FK_ICProductStandardID,FK_ICProductColorSchemaID,ICTransferItemLotNo as ViewStandardWoodSerialNo,sum(ICTransferItemQty) as ViewStandardWoodBeginQty,
                                                sum(ICTransferItemQty) as ViewStandardWoodBeginCBM,ICTransferItems.FK_ICFromStockID as FK_ICStockID,SUM(ICTransferItemCostTot) as ViewStandardWoodBeginPrice
                                                from ICTransferItems inner join ICTransfers on ICTransferItems.FK_ICTransferID =ICTransfers.ICTransferID
                                                inner join ICProducts on ICTransferItems.FK_ICProductID = ICProducts.ICProductID inner join ICProductGroups
                                                on ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID inner join 
                                                ICProductColorSchemas on ICProducts.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                inner join ICProductStandards on ICProducts.FK_ICProductStandardID =ICProductStandards.ICProductStandardID
                                                where ICTransferItems.AAStatus='Alive' AND ICTransfers.AAStatus='Alive' and ICProducts.AAStatus='Alive' and 
                                                ICProductGroups.AAStatus='Alive' AND ICProductColorSchemas.AAStatus='Alive' and ICProductStandards.AAStatus='Alive'
                                                AND CONVERT(VARCHAR(10), [ICTransferDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                                                AND CONVERT(VARCHAR(10), [ICTransferDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                                                AND ICProductGroupNo='{2}'   
                                                group by FK_ICProductStandardID,FK_ICProductColorSchemaID,ICTransferItemLotNo,ICTransferItems.FK_ICFromStockID
                                                ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strType);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataAdjInvByStandardColorSerialTypeInRange(DateTime dteFromDate, DateTime dteToDate, string strType, string strAdjType)
        {
            string strQuery = string.Format(@"select FK_ICProductStandardID,FK_ICProductColorSchemaID,ICAdjInvItemLotNo as ViewStandardWoodSerialNo,sum(ICAdjInvItemQty) as ViewStandardWoodBeginQty,
                                                sum(ICAdjInvItemQty) as ViewStandardWoodBeginCBM,ICAdjInvItems.FK_ICStockID,SUM(ICAdjInvItemCostTot) as ViewStandardWoodBeginPrice
                                                from ICAdjInvItems inner join ICAdjInvs on ICAdjInvItems.FK_ICAdjInvID =ICAdjInvs.ICAdjInvID
                                                inner join ICProducts on ICAdjInvItems.FK_ICProductID = ICProducts.ICProductID inner join ICProductGroups
                                                on ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID inner join 
                                                ICProductColorSchemas on ICProducts.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                inner join ICProductStandards on ICProducts.FK_ICProductStandardID =ICProductStandards.ICProductStandardID
                                                where ICAdjInvItems.AAStatus='Alive' AND ICAdjInvs.AAStatus='Alive' and ICProducts.AAStatus='Alive' and 
                                                ICProductGroups.AAStatus='Alive' AND ICProductColorSchemas.AAStatus='Alive' and ICProductStandards.AAStatus='Alive'
                                                AND CONVERT(VARCHAR(10), [ICAdjInvDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                                                AND CONVERT(VARCHAR(10), [ICAdjInvDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                                                AND ICProductGroupNo='{2}'
												AND ICAdjInvItemTypeCombo='{3}'
                                                group by FK_ICProductStandardID,FK_ICProductColorSchemaID,ICAdjInvItemLotNo,ICAdjInvItems.FK_ICStockID
                                                ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strType, strAdjType);
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAllDataDeAssemblyByStandardColorTypeInRange(DateTime dteFromDate, DateTime dteToDate,string strType)
        {
            string strQuery = string.Format(@"select FK_ICProductStandardID,FK_ICProductColorSchemaID,sum(ICAssemblyItemInQty) as ViewStandardWoodBeginQty,
                                                sum(ICAssemblyItemInQty) as ViewStandardWoodBeginCBM
                                                from ICAssemblyItemIns inner join ICAssemblys on ICAssemblyItemIns.FK_ICAssemblyID =ICAssemblys.ICAssemblyID
                                                inner join ICProducts on ICAssemblyItemIns.FK_ICProductID = ICProducts.ICProductID inner join ICProductTypes
                                                on ICProducts.FK_ICProductTypeID = ICProductTypes.ICProductTypeID inner join 
                                                ICProductColorSchemas on ICProducts.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                inner join ICProductStandards on ICProducts.FK_ICProductStandardID =ICProductStandards.ICProductStandardID
                                                where ICAssemblyItemIns.AAStatus='Alive' AND ICAssemblys.AAStatus='Alive' and ICProducts.AAStatus='Alive' and 
                                                ICProductTypes.AAStatus='Alive' AND ICProductColorSchemas.AAStatus='Alive' and ICProductStandards.AAStatus='Alive'
                                                AND CONVERT(VARCHAR(10), [ICAssemblyDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                                                AND CONVERT(VARCHAR(10), [ICAssemblyDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                                                AND ICProductTypeNo='{2}'
                                                group by FK_ICProductStandardID,FK_ICProductColorSchemaID
                                                ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strType);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataRcpInProductionOrdrByStandardColorTypeInRange(DateTime dteFromDate, DateTime dteToDate, string strProductType)
        {
            string strDate = DALUtil.GenerateBeetween("PPProductionOrdrDate", dteFromDate, dteToDate);
            string strQuery = string.Format(@"select FK_ICProductStandardID,FK_ICProductColorSchemaID,sum(ICReceiptItemQty) as ViewStandardWoodBeginQty,
                                                sum(ICReceiptItemQty) as ViewStandardWoodBeginCBM
                                                from ICReceiptItems inner join PPProductionOrdrs on ICReceiptItems.FK_PPProductionOrdrID =PPProductionOrdrs.PPProductionOrdrID
                                                inner join ICProducts on ICReceiptItems.FK_ICProductID = ICProducts.ICProductID inner join ICProductTypes
                                                on ICProducts.FK_ICProductTypeID = ICProductTypes.ICProductTypeID inner join 
                                                ICProductColorSchemas on ICProducts.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                inner join ICProductStandards on ICProducts.FK_ICProductStandardID =ICProductStandards.ICProductStandardID
                                                where ICReceiptItems.AAStatus='Alive' AND PPProductionOrdrs.AAStatus='Alive' and ICProducts.AAStatus='Alive' and 
                                                ICProductTypes.AAStatus='Alive' AND ICProductColorSchemas.AAStatus='Alive' and ICProductStandards.AAStatus='Alive'
                                                AND ICProductTypeNo='{1}'
                                                AND {0}
                                                group by FK_ICProductStandardID,FK_ICProductColorSchemaID
                                                ", strDate, strProductType);
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAllDataDeAssemblyByStandardColorSerialTypeInRange(DateTime dteFromDate, DateTime dteToDate,string strType)
        {
            string strQuery = string.Format(@"select FK_ICProductStandardID,FK_ICProductColorSchemaID,ICAssemblyItemInLotNo as ViewStandardWoodSerialNo,sum(ICAssemblyItemInQty) as ViewStandardWoodBeginQty,
                                                sum(ICAssemblyItemInQty) as ViewStandardWoodBeginCBM
                                                from ICAssemblyItemIns inner join ICAssemblys on ICAssemblyItemIns.FK_ICAssemblyID =ICAssemblys.ICAssemblyID
                                                inner join ICProducts on ICAssemblyItemIns.FK_ICProductID = ICProducts.ICProductID inner join ICProductTypes
                                                on ICProducts.FK_ICProductTypeID = ICProductTypes.ICProductTypeID inner join 
                                                ICProductColorSchemas on ICProducts.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                inner join ICProductStandards on ICProducts.FK_ICProductStandardID =ICProductStandards.ICProductStandardID
                                                where ICAssemblyItemIns.AAStatus='Alive' AND ICAssemblys.AAStatus='Alive' and ICProducts.AAStatus='Alive' and 
                                                ICProductTypes.AAStatus='Alive' AND ICProductColorSchemas.AAStatus='Alive' and ICProductStandards.AAStatus='Alive'
                                                AND CONVERT(VARCHAR(10), [ICAssemblyDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                                                AND CONVERT(VARCHAR(10), [ICAssemblyDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                                                AND ICProductTypeNo='{2}'
                                                group by FK_ICProductStandardID,FK_ICProductColorSchemaID,ICAssemblyItemInLotNo
                                                ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strType);
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAllDataRcpByProductInRange(DateTime dteFromDate, DateTime dteToDate,string strStockType)
        {
            string strQuery = string.Format(@"select ICProductNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICStockNo,SUM(ICReceiptItemQty),ICProductPrice01,ICProductTypeNo,sum(ICReceiptItemQty*ICProductMaterialCBM) as CBM 
                            ,sum(ICReceiptItemCostTot) as TotalCost
                            from ICReceiptItems inner join ICProducts on ICReceiptItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICReceipts on ICReceipts.ICReceiptID=ICReceiptItems.FK_ICReceiptID inner join
                            ICStocks on ICStocks.ICStockID=ICReceiptItems.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICReceiptItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICReceipts.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{2}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP')
                            AND CONVERT(VARCHAR(10), [ICReceiptDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                            AND CONVERT(VARCHAR(10), [ICReceiptDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                            Group by ICProductNo,ICStockNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICProductPrice01,ICProductTypeNo
                            ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strStockType);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataRcpInProductionOrdrByProductInRange(DateTime dteFromDate, DateTime dteToDate, string strStockType)
        {
            string strQuery = string.Format(@"select ICProductNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICStockNo,SUM(ICReceiptItemQty),ICProductPrice01,ICProductTypeNo,sum(ICReceiptItemQty*ICProductMaterialCBM) as CBM 
                            ,sum(ICReceiptItemCostTot) as TotalCost
                            from ICReceiptItems inner join ICProducts on ICReceiptItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join PPProductionOrdrs on PPProductionOrdrs.PPProductionOrdrID=ICReceiptItems.FK_PPProductionOrdrID inner join
                            ICStocks on ICStocks.ICStockID=ICReceiptItems.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICReceiptItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND PPProductionOrdrs.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{2}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP')
                            AND CONVERT(VARCHAR(10), [PPProductionOrdrDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                            AND CONVERT(VARCHAR(10), [PPProductionOrdrDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                            Group by ICProductNo,ICStockNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICProductPrice01,ICProductTypeNo
                            ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strStockType);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataShpByProductInRange(DateTime dteFromDate, DateTime dteToDate, string strStockType)
        {
            string strQuery = string.Format(@"select ICProductNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICStockNo,SUM(ICShipmentItemQty),ICProductPrice01,ICProductTypeNo,sum(ICShipmentItemQty*ICProductMaterialCBM) as CBM 
                            ,sum(ICShipmentItemCostTot) as TotalCost
                            from ICShipmentItems inner join ICProducts on ICShipmentItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICShipments on ICShipments.ICShipmentID=ICShipmentItems.FK_ICShipmentID inner join
                            ICStocks on ICStocks.ICStockID=ICShipmentItems.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICShipmentItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICShipments.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{2}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP')
                            AND CONVERT(VARCHAR(10), [ICShipmentDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                            AND CONVERT(VARCHAR(10), [ICShipmentDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                            Group by ICProductNo,ICStockNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICProductPrice01,ICProductTypeNo
                            ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"),strStockType);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataShpInProductionOrdrByProductInRange(DateTime dteFromDate, DateTime dteToDate, string strStockType)
        {
            string strQuery = string.Format(@"select ICProductNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICStockNo,SUM(ICShipmentItemQty),ICProductPrice01,ICProductTypeNo,sum(ICShipmentItemQty*ICProductMaterialCBM) as CBM  
                            ,sum(ICShipmentItemCostTot) as TotalCost
                            from ICShipmentItems inner join ICProducts on ICShipmentItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join PPProductionOrdrs on PPProductionOrdrs.PPProductionOrdrID=ICShipmentItems.FK_PPProductionOrdrID inner join
                            ICStocks on ICStocks.ICStockID=ICShipmentItems.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICShipmentItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND PPProductionOrdrs.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{2}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP')
                            AND CONVERT(VARCHAR(10), [PPProductionOrdrDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                            AND CONVERT(VARCHAR(10), [PPProductionOrdrDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                            Group by ICProductNo,ICStockNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICProductPrice01,ICProductTypeNo
                            ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strStockType);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataAssemblyOutByProductInRange(DateTime dteFromDate, DateTime dteToDate, string strStockType)
        {
            string strQuery = string.Format(@"select ICProductNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICStockNo,SUM(ICAssemblyItemOutQty),ICProductPrice01,ICProductTypeNo,sum(ICAssemblyItemOutQty*ICProductMaterialCBM) as CBM 
                            ,sum(ICAssemblyItemOutCostTot) as TotalCost
                            from ICAssemblyItemOuts inner join ICProducts on ICAssemblyItemOuts.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICAssemblys on ICAssemblys.ICAssemblyID=ICAssemblyItemOuts.FK_ICAssemblyID inner join
                            ICStocks on ICStocks.ICStockID=ICAssemblyItemOuts.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICAssemblyItemOuts.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICAssemblys.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{2}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP')
                            AND CONVERT(VARCHAR(10), [ICAssemblyDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                            AND CONVERT(VARCHAR(10), [ICAssemblyDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                            Group by ICProductNo,ICStockNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICProductPrice01,ICProductTypeNo
                            ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strStockType);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataAssemblyInByProductInRange(DateTime dteFromDate, DateTime dteToDate, string strStockType)
        {
            string strQuery = string.Format(@"select ICProductNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICStockNo,SUM(ICAssemblyItemInQty),ICProductPrice01,ICProductTypeNo,sum(ICAssemblyItemInQty*ICProductMaterialCBM) as CBM 
                            ,sum(ICAssemblyItemInCostTot) as TotalCost
                            from ICAssemblyItemIns inner join ICProducts on ICAssemblyItemIns.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICAssemblys on ICAssemblys.ICAssemblyID=ICAssemblyItemIns.FK_ICAssemblyID inner join
                            ICStocks on ICStocks.ICStockID=ICAssemblyItemIns.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICAssemblyItemIns.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICAssemblys.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{2}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP')
                            AND CONVERT(VARCHAR(10), [ICAssemblyDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                            AND CONVERT(VARCHAR(10), [ICAssemblyDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                            Group by ICProductNo,ICStockNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICProductPrice01,ICProductTypeNo
                            ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strStockType);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataTransferOutByProductInRange(DateTime dteFromDate, DateTime dteToDate, string strStockType)
        {
            string strQuery = string.Format(@"select ICProductNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICStockNo,SUM(ICTransferItemQty),ICProductPrice01,ICProductTypeNo,sum(ICTransferItemQty*ICProductMaterialCBM) as CBM 
                            ,sum(ICTransferItemCostTot) as TotalCost
                            from ICTransferItems inner join ICProducts on ICTransferItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICTransfers on ICTransfers.ICTransferID=ICTransferItems.FK_ICTransferID inner join
                            ICStocks on ICStocks.ICStockID=ICTransferItems.FK_ICFromStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICTransferItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICTransfers.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{2}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP')
                            AND CONVERT(VARCHAR(10), [ICTransferDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                            AND CONVERT(VARCHAR(10), [ICTransferDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                            Group by ICProductNo,ICStockNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICProductPrice01,ICProductTypeNo
                            ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strStockType);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataTransferInByProductInRange(DateTime dteFromDate, DateTime dteToDate, string strStockType)
        {
            string strQuery = string.Format(@"select ICProductNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICStockNo,SUM(ICTransferItemQty),ICProductPrice01,ICProductTypeNo,sum(ICTransferItemQty*ICProductMaterialCBM) as CBM 
                            ,sum(ICTransferItemCostTot) as TotalCost
                            from ICTransferItems inner join ICProducts on ICTransferItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICTransfers on ICTransfers.ICTransferID=ICTransferItems.FK_ICTransferID inner join
                            ICStocks on ICStocks.ICStockID=ICTransferItems.FK_ICToStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICTransferItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICTransfers.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{2}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP')
                            AND CONVERT(VARCHAR(10), [ICTransferDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                            AND CONVERT(VARCHAR(10), [ICTransferDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                            Group by ICProductNo,ICStockNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICProductPrice01,ICProductTypeNo
                            ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strStockType);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataAdjInvByProductInRange(DateTime dteFromDate, DateTime dteToDate, string strStockType, string strAdjType)
        {
            string strQuery = string.Format(@"select ICProductNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICStockNo,SUM(ICAdjInvItemQty),ICProductPrice01,ICProductTypeNo,sum(ICAdjInvItemQty*ICProductMaterialCBM) as CBM 
                            ,sum(ICAdjInvItemCostTot) as TotalCost
                            from ICAdjInvItems 
							inner join ICProducts on ICAdjInvItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICAdjInvs on ICAdjInvs.ICAdjInvID=ICAdjInvItems.FK_ICAdjInvID inner join
                            ICStocks on ICStocks.ICStockID=ICAdjInvItems.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICAdjInvItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICAdjInvs.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{2}'
							AND ICAdjInvItemTypeCombo='{3}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP')
                            AND CONVERT(VARCHAR(10), [ICAdjInvDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                            AND CONVERT(VARCHAR(10), [ICAdjInvDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                            Group by ICProductNo,ICStockNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,ICProductPrice01,ICProductTypeNo
                            ", dteFromDate.ToString("yyyyMMdd"), dteToDate.ToString("yyyyMMdd"), strStockType, strAdjType);
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAllDataFGRcpInProductPlnInRange(int iFromPeroid, int iFromYear, int iToPeriod, int iToYear)
        {
            string strQueryDate = string.Format(@" AND (PPProductPlnPeriod +PPProductPlnYear*12)>={0} 
                                                    AND  (PPProductPlnPeriod +PPProductPlnYear*12)<={1}", iFromPeroid + iFromYear * 12, iToPeriod + iToYear * 12);
            string strQuery = string.Format(@"select ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProducts.ICProductMaterialCBM,
                                                    PPWOs.PPWONo,SUM(ICReceiptItems.ICReceiptItemQty) AS Qty,SUM(ICReceiptItems.ICReceiptItemQty*ICProducts.ICProductMaterialCBM) AS CBM,ICProductID,PPPhaseCfgs.PPPhaseCfgNo
                                                    from ICReceiptItems inner join ICProducts on ICReceiptItems.FK_ICProductID = ICProducts.ICProductID
                                                    inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                                                    inner join ICReceipts on ICReceipts.ICReceiptID=ICReceiptItems.FK_ICReceiptID 
                                                    inner JOIN ICStocks on ICStocks.ICStockID=ICReceiptItems.FK_ICStockID 
                                                    inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                                                    INNER JOIN dbo.ICStockTypes ON dbo.ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                                                    INNER JOIN dbo.PPWOs ON ICReceipts.FK_PPWOID=dbo.PPWOs.PPWOID
                                                    INNER JOIN dbo.PPProductPlns ON dbo.PPWOs.FK_PPProductPlnID = dbo.PPProductPlns.PPProductPlnID
                                                    where 
                                                    ICReceiptItems.AAStatus='Alive' 
                                                    AND ICProducts.AAStatus='Alive' 
                                                    AND ICProductTypes.AAStatus='Alive' 
                                                    AND ICReceipts.AAStatus='Alive' 
                                                    AND ICStocks.AAStatus='Alive' 
                                                    AND PPPhaseCfgs.AAStatus='Alive'
                                                    AND ICStockTypes.AAStatus='Alive'
                                                    AND PPWOs.AAStatus='Alive'
                                                    AND PPProductPlns.AAStatus='Alive'
                                                    AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT')
                                                    AND ICStockTypeID=1 
                                                    {0}
                                                    Group by ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProducts.ICProductMaterialCBM,PPWOs.PPWONo,ICProducts.ICProductID,PPPhaseCfgs.PPPhaseCfgNo", strQueryDate);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataFGShpInProductPlnInRange(int iFromPeroid, int iFromYear, int iToPeriod, int iToYear)
        {
            string strQueryDate = string.Format(@" AND (PPProductPlnPeriod +PPProductPlnYear*12)>={0} 
                                                    AND  (PPProductPlnPeriod +PPProductPlnYear*12)<={1}", iFromPeroid + iFromYear * 12, iToPeriod + iToYear * 12);
            string strQuery = string.Format(@"select ICProductNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,
                                                    PPWONo,SUM(ICShipmentItemQty) AS Qty,SUM(ICShipmentItemQty*ICProductMaterialCBM) AS CBM,ICProductID,PPPhaseCfgNo
                                                    from ICShipmentItems inner join ICProducts on ICShipmentItems.FK_ICProductID = ICProducts.ICProductID
                                                    inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                                                    inner join ICShipments on ICShipments.ICShipmentID=ICShipmentItems.FK_ICShipmentID 
                                                    inner JOIN ICStocks on ICStocks.ICStockID=ICShipmentItems.FK_ICStockID 
                                                    inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                                                    INNER JOIN dbo.ICStockTypes ON dbo.ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                                                    INNER JOIN dbo.PPWOs ON ICShipments.FK_PPWOID=dbo.PPWOs.PPWOID
                                                    INNER JOIN dbo.PPProductPlns ON dbo.PPWOs.FK_PPProductPlnID = dbo.PPProductPlns.PPProductPlnID
                                                    where 
                                                    ICShipmentItems.AAStatus='Alive' 
                                                    AND ICProducts.AAStatus='Alive' 
                                                    AND ICProductTypes.AAStatus='Alive' 
                                                    AND ICShipments.AAStatus='Alive' 
                                                    AND ICStocks.AAStatus='Alive' 
                                                    AND PPPhaseCfgs.AAStatus='Alive'
                                                    AND ICStockTypes.AAStatus='Alive'
                                                    AND PPWOs.AAStatus='Alive'
                                                    AND PPProductPlns.AAStatus='Alive'
                                                    AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT')
                                                    AND ICStockTypeID=1 
                                                    {0}
                                                    Group by ICProductNo,ICProductName,ICProductLength,ICProductWidth,ICProductHeight,ICProductMaterialCBM,PPWONo,ICProductID,PPPhaseCfgNo", strQueryDate);
            return dal.GetDataSet(strQuery);
        }

        #region Convert Date --Vinh --11/12/2012 --Tạo chuỗi so sánh ngày tháng trong sql

        public String ConvertDateFromDateToByColumn(String strColumnName, DateTime? dtFrom, DateTime? dtTo)
        {
            String str = "";
            if (dtFrom == null && dtTo != null)
            {
                str += String.Format(@"   AND CONVERT(VARCHAR(20), {0}, 112) <= CONVERT(VARCHAR(20),'{1}',112)", strColumnName, dtTo.Value.ToString("yyyyMMdd"));
            }
            else if (dtFrom != null && dtTo == null)
            {
                str += String.Format(@"   AND CONVERT(VARCHAR(20), {0}, 112) >= CONVERT(VARCHAR(20),'{1}',112)", strColumnName, dtFrom.Value.ToString("yyyyMMdd"));
            }
            else if (dtFrom != null && dtTo != null)
            {
                str += String.Format(@"   AND CONVERT(VARCHAR(20), {0}, 112) >= CONVERT(VARCHAR(20),'{1}',112)
                                          AND CONVERT(VARCHAR(20), {0}, 112) <= CONVERT(VARCHAR(20),'{2}',112)", strColumnName, dtFrom.Value.ToString("yyyyMMdd"), dtTo.Value.ToString("yyyyMMdd"));
            }
            return str;
        }

        #endregion

        #region StatisticBigWoodByProductStandardAndColor --Vinh --11/12/2012 --Lấy danh sách gỗ lớn từ ngày đến ngày

        public DataSet GetAllDataStatisticBigWood(DateTime dtFrom, DateTime dtTo, string strProductGroupNo)
        {
            String str = String.Format(@"
                                        SELECT
                                        FK_ICProductID
                                        ,FK_ICProductColorSchemaID
                                        ,FK_ICProductStandardID
                                        ,FK_ICProductModelID
                                        ,ViewStandardWoodSerialNo
                                        ,FK_ICStockID
                                        ,FK_ICProductGroupID
                                        ,SUM(ViewStandardWoodBeginQty) AS ViewStandardWoodBeginQty
                                        ,SUM(ViewStandardWoodBeginCBM) AS ViewStandardWoodBeginCBM
                                        ,SUM(ViewStandardWoodShpQty) AS ViewStandardWoodShpQty
                                        ,SUM(ViewStandardWoodShpCBM) AS ViewStandardWoodShpCBM
                                        ,SUM(ViewStandardWoodRcpQty) AS ViewStandardWoodRcpQty
                                        ,SUM(ViewStandardWoodRcpCBM) AS ViewStandardWoodRcpCBM
                                        ,SUM(ViewStandardWoodEndQty) AS ViewStandardWoodEndQty
                                        ,SUM(ViewStandardWoodEndCBM) AS ViewStandardWoodEndCBM
                                        ,SUM(ViewStandardWoodBeginPrice) AS ViewStandardWoodBeginPrice
                                        ,SUM(ViewStandardWoodShpPrice) AS ViewStandardWoodShpPrice
                                        ,SUM(ViewStandardWoodRcpPrice) AS ViewStandardWoodRcpPrice
                                        ,SUM(ViewStandardWoodEndPrice) AS ViewStandardWoodEndPrice
                                        FROM
                                        (
	                                        SELECT
	                                        dbo.ICProducts.ICProductID AS FK_ICProductID
	                                        ,dbo.ICProducts.FK_ICProductColorSchemaID AS FK_ICProductColorSchemaID
	                                        ,dbo.ICProducts.FK_ICProductStandardID AS FK_ICProductStandardID
	                                        ,dbo.ICProducts.FK_ICProductModelID AS FK_ICProductModelID
	                                        ,dbo.ICProducts.FK_ICProductGroupID AS FK_ICProductGroupID
	                                        ,dbo.ICReceiptItems.ICReceiptItemLotNo AS ViewStandardWoodSerialNo
	                                        ,dbo.ICReceiptItems.ICReceiptItemQty AS ViewStandardWoodBeginQty
	                                        ,dbo.ICReceiptItems.ICReceiptItemQty AS ViewStandardWoodBeginCBM
                                            ,dbo.ICReceiptItems.ICReceiptItemCostTot AS ViewStandardWoodBeginPrice
	                                        ,0 AS ViewStandardWoodShpQty
	                                        ,0 AS ViewStandardWoodShpCBM
                                            ,0 AS ViewStandardWoodShpPrice
	                                        ,0 AS ViewStandardWoodRcpQty
	                                        ,0 AS ViewStandardWoodRcpCBM
                                            ,0 AS ViewStandardWoodRcpPrice
	                                        ,dbo.ICReceiptItems.ICReceiptItemQty AS ViewStandardWoodEndQty
	                                        ,dbo.ICReceiptItems.ICReceiptItemQty AS ViewStandardWoodEndCBM
                                            ,dbo.ICReceiptItems.ICReceiptItemCostTot AS ViewStandardWoodEndPrice
	                                        ,dbo.ICReceiptItems.FK_ICStockID AS FK_ICStockID
	                                        FROM dbo.ICReceiptItems 
	                                        INNER JOIN dbo.ICProducts ON dbo.ICReceiptItems.FK_ICProductID=dbo.ICProducts.ICProductID
	                                        INNER JOIN dbo.ICProductGroups ON dbo.ICProductGroups.ICProductGroupID=dbo.ICProducts.FK_ICProductGroupID
	                                        WHERE dbo.ICReceiptItems.AAStatus='Alive' AND dbo.ICProducts.AAStatus='Alive' AND dbo.ICProductGroups.AAStatus='Alive'
	                                        AND dbo.ICProductGroups.ICProductGroupNo='{0}'
	                                        AND
	                                        (
		                                        dbo.ICReceiptItems.FK_ICReceiptID IN (SELECT ICReceiptID FROM dbo.ICReceipts WHERE AAStatus='Alive' {1})
		                                        OR
		                                        dbo.ICReceiptItems.FK_PPProductionOrdrID IN (SELECT PPProductionOrdrID FROM dbo.PPProductionOrdrs WHERE AAStatus='Alive' {2})
	                                        )
	
	                                        UNION ALL
	
	                                        SELECT
	                                        dbo.ICProducts.ICProductID AS FK_ICProductID
	                                        ,dbo.ICProducts.FK_ICProductColorSchemaID AS FK_ICProductColorSchemaID
	                                        ,dbo.ICProducts.FK_ICProductStandardID AS FK_ICProductStandardID
	                                        ,dbo.ICProducts.FK_ICProductModelID AS FK_ICProductModelID
	                                        ,dbo.ICProducts.FK_ICProductGroupID AS FK_ICProductGroupID
	                                        ,dbo.ICReceiptItems.ICReceiptItemLotNo AS ViewStandardWoodSerialNo
	                                        ,0 AS ViewStandardWoodBeginQty
	                                        ,0 AS ViewStandardWoodBeginCBM
                                            ,0 AS ViewStandardWoodBeginPrice
	                                        ,0 AS ViewStandardWoodShpQty
	                                        ,0 AS ViewStandardWoodShpCBM
                                            ,0 AS ViewStandardWoodShpPrice
	                                        ,dbo.ICReceiptItems.ICReceiptItemQty AS ViewStandardWoodRcpQty
	                                        ,dbo.ICReceiptItems.ICReceiptItemQty AS ViewStandardWoodRcpCBM
                                            ,dbo.ICReceiptItems.ICReceiptItemCostTot AS ViewStandardWoodRcpPrice
	                                        ,dbo.ICReceiptItems.ICReceiptItemQty AS ViewStandardWoodEndQty
	                                        ,dbo.ICReceiptItems.ICReceiptItemQty AS ViewStandardWoodEndCBM
                                            ,dbo.ICReceiptItems.ICReceiptItemCostTot AS ViewStandardWoodEndPrice
	                                        ,dbo.ICReceiptItems.FK_ICStockID AS FK_ICStockID
	                                        FROM dbo.ICReceiptItems 
	                                        INNER JOIN dbo.ICProducts ON dbo.ICReceiptItems.FK_ICProductID=dbo.ICProducts.ICProductID
	                                        INNER JOIN dbo.ICProductGroups ON dbo.ICProductGroups.ICProductGroupID=dbo.ICProducts.FK_ICProductGroupID
	                                        WHERE dbo.ICReceiptItems.AAStatus='Alive' AND dbo.ICProducts.AAStatus='Alive' AND dbo.ICProductGroups.AAStatus='Alive'
	                                        AND dbo.ICProductGroups.ICProductGroupNo='{0}'
	                                        AND
	                                        (
		                                        dbo.ICReceiptItems.FK_ICReceiptID IN (SELECT ICReceiptID FROM dbo.ICReceipts WHERE AAStatus='Alive' {3})
		                                        OR
		                                        dbo.ICReceiptItems.FK_PPProductionOrdrID IN (SELECT PPProductionOrdrID FROM dbo.PPProductionOrdrs WHERE AAStatus='Alive' {4})
	                                        )
	
	                                        UNION ALL
	
	                                        SELECT
	                                        dbo.ICProducts.ICProductID AS FK_ICProductID
	                                        ,dbo.ICProducts.FK_ICProductColorSchemaID AS FK_ICProductColorSchemaID
	                                        ,dbo.ICProducts.FK_ICProductStandardID AS FK_ICProductStandardID
	                                        ,dbo.ICProducts.FK_ICProductModelID AS FK_ICProductModelID
	                                        ,dbo.ICProducts.FK_ICProductGroupID AS FK_ICProductGroupID
	                                        ,dbo.ICShipmentItems.ICShipmentItemLotNo AS ViewStandardWoodSerialNo
	                                        ,(-1) * dbo.ICShipmentItems.ICShipmentItemQty AS ViewStandardWoodBeginQty
	                                        ,(-1) * dbo.ICShipmentItems.ICShipmentItemQty AS ViewStandardWoodBeginCBM
                                            ,(-1) * dbo.ICShipmentItems.ICShipmentItemCostTot AS ViewStandardWoodBeginPrice
	                                        ,0 AS ViewStandardWoodShpQty
	                                        ,0 AS ViewStandardWoodShpCBM
                                            ,0 AS ViewStandardWoodShpPrice
	                                        ,0 AS ViewStandardWoodRcpQty
	                                        ,0 AS ViewStandardWoodRcpCBM
                                            ,0 AS ViewStandardWoodRcpPrice
	                                        ,(-1) * dbo.ICShipmentItems.ICShipmentItemQty AS ViewStandardWoodEndQty
	                                        ,(-1) * dbo.ICShipmentItems.ICShipmentItemQty AS ViewStandardWoodEndCBM
                                            ,(-1) * dbo.ICShipmentItems.ICShipmentItemCostTot AS ViewStandardWoodEndPrice
	                                        ,dbo.ICShipmentItems.FK_ICStockID AS FK_ICStockID
	                                        FROM dbo.ICShipmentItems 
	                                        INNER JOIN dbo.ICProducts ON dbo.ICShipmentItems.FK_ICProductID=dbo.ICProducts.ICProductID
	                                        INNER JOIN dbo.ICProductGroups ON dbo.ICProductGroups.ICProductGroupID=dbo.ICProducts.FK_ICProductGroupID
	                                        WHERE dbo.ICShipmentItems.AAStatus='Alive' AND dbo.ICProducts.AAStatus='Alive' AND dbo.ICProductGroups.AAStatus='Alive'
	                                        AND dbo.ICProductGroups.ICProductGroupNo='{0}'
	                                        AND
	                                        (
		                                        dbo.ICShipmentItems.FK_ICShipmentID IN (SELECT ICShipmentID FROM dbo.ICShipments WHERE AAStatus='Alive' {5})
		                                        OR
		                                        dbo.ICShipmentItems.FK_PPProductionOrdrID IN (SELECT PPProductionOrdrID FROM dbo.PPProductionOrdrs WHERE AAStatus='Alive' {2})
	                                        )
	
	                                        UNION ALL
	
	                                        SELECT
	                                        dbo.ICProducts.ICProductID AS FK_ICProductID
	                                        ,dbo.ICProducts.FK_ICProductColorSchemaID AS FK_ICProductColorSchemaID
	                                        ,dbo.ICProducts.FK_ICProductStandardID AS FK_ICProductStandardID
	                                        ,dbo.ICProducts.FK_ICProductModelID AS FK_ICProductModelID
	                                        ,dbo.ICProducts.FK_ICProductGroupID AS FK_ICProductGroupID
	                                        ,dbo.ICShipmentItems.ICShipmentItemLotNo AS ViewStandardWoodSerialNo
	                                        ,0 AS ViewStandardWoodBeginQty
	                                        ,0 AS ViewStandardWoodBeginCBM
                                            ,0 AS ViewStandardWoodBeginPrice
	                                        ,dbo.ICShipmentItems.ICShipmentItemQty AS ViewStandardWoodShpQty
	                                        ,dbo.ICShipmentItems.ICShipmentItemQty AS ViewStandardWoodShpCBM
                                            ,dbo.ICShipmentItems.ICShipmentItemCostTot AS ViewStandardWoodShpPrice
	                                        ,0 AS ViewStandardWoodRcpQty
	                                        ,0 AS ViewStandardWoodRcpCBM
                                            ,0 AS ViewStandardWoodRcpPrice
	                                        ,(-1) * dbo.ICShipmentItems.ICShipmentItemQty AS ViewStandardWoodEndQty
	                                        ,(-1) * dbo.ICShipmentItems.ICShipmentItemQty AS ViewStandardWoodEndCBM
                                            ,(-1) * dbo.ICShipmentItems.ICShipmentItemCostTot AS ViewStandardWoodEndPrice
	                                        ,dbo.ICShipmentItems.FK_ICStockID AS FK_ICStockID
	                                        FROM dbo.ICShipmentItems 
	                                        INNER JOIN dbo.ICProducts ON dbo.ICShipmentItems.FK_ICProductID=dbo.ICProducts.ICProductID
	                                        INNER JOIN dbo.ICProductGroups ON dbo.ICProductGroups.ICProductGroupID=dbo.ICProducts.FK_ICProductGroupID
	                                        WHERE dbo.ICShipmentItems.AAStatus='Alive' AND dbo.ICProducts.AAStatus='Alive' AND dbo.ICProductGroups.AAStatus='Alive'
	                                        AND dbo.ICProductGroups.ICProductGroupNo='{0}'
	                                        AND
	                                        (
		                                        dbo.ICShipmentItems.FK_ICShipmentID IN (SELECT ICShipmentID FROM dbo.ICShipments WHERE AAStatus='Alive' {6})
		                                        OR
		                                        dbo.ICShipmentItems.FK_PPProductionOrdrID IN (SELECT PPProductionOrdrID FROM dbo.PPProductionOrdrs WHERE AAStatus='Alive' {4})
	                                        )
	
	                                        UNION ALL
	
	                                        SELECT
	                                        dbo.ICProducts.ICProductID AS FK_ICProductID
	                                        ,dbo.ICProducts.FK_ICProductColorSchemaID AS FK_ICProductColorSchemaID
	                                        ,dbo.ICProducts.FK_ICProductStandardID AS FK_ICProductStandardID
	                                        ,dbo.ICProducts.FK_ICProductModelID AS FK_ICProductModelID
	                                        ,dbo.ICProducts.FK_ICProductGroupID AS FK_ICProductGroupID
	                                        ,dbo.ICTransferItems.ICTransferItemLotNo AS ViewStandardWoodSerialNo
	                                        ,(-1) * dbo.ICTransferItems.ICTransferItemQty AS ViewStandardWoodBeginQty
	                                        ,(-1) * dbo.ICTransferItems.ICTransferItemQty AS ViewStandardWoodBeginCBM
                                            ,(-1) * dbo.ICTransferItems.ICTransferItemCostTot AS ViewStandardWoodBeginPrice
	                                        ,0 AS ViewStandardWoodShpQty
	                                        ,0 AS ViewStandardWoodShpCBM
                                            ,0 AS ViewStandardWoodShpPrice
	                                        ,0 AS ViewStandardWoodRcpQty
	                                        ,0 AS ViewStandardWoodRcpCBM
                                            ,0 AS ViewStandardWoodRcpPrice
	                                        ,(-1) * dbo.ICTransferItems.ICTransferItemQty AS ViewStandardWoodEndQty
	                                        ,(-1) * dbo.ICTransferItems.ICTransferItemQty AS ViewStandardWoodEndCBM
                                            ,(-1) * dbo.ICTransferItems.ICTransferItemCostTot AS ViewStandardWoodEndPrice
	                                        ,dbo.ICTransferItems.FK_ICFromStockID AS FK_ICStockID
	                                        FROM dbo.ICTransferItems 
	                                        INNER JOIN dbo.ICProducts ON dbo.ICTransferItems.FK_ICProductID=dbo.ICProducts.ICProductID
	                                        INNER JOIN dbo.ICProductGroups ON dbo.ICProductGroups.ICProductGroupID=dbo.ICProducts.FK_ICProductGroupID
	                                        WHERE dbo.ICTransferItems.AAStatus='Alive' AND dbo.ICProducts.AAStatus='Alive' AND dbo.ICProductGroups.AAStatus='Alive'
	                                        AND dbo.ICProductGroups.ICProductGroupNo='{0}'
	                                        AND dbo.ICTransferItems.FK_ICTransferID IN (SELECT ICTransferID FROM dbo.ICTransfers WHERE AAStatus='Alive' {7})
	
	                                        UNION ALL
	
	                                        SELECT
	                                        dbo.ICProducts.ICProductID AS FK_ICProductID
	                                        ,dbo.ICProducts.FK_ICProductColorSchemaID AS FK_ICProductColorSchemaID
	                                        ,dbo.ICProducts.FK_ICProductStandardID AS FK_ICProductStandardID
	                                        ,dbo.ICProducts.FK_ICProductModelID AS FK_ICProductModelID
	                                        ,dbo.ICProducts.FK_ICProductGroupID AS FK_ICProductGroupID
	                                        ,dbo.ICTransferItems.ICTransferItemLotNo AS ViewStandardWoodSerialNo
	                                        ,dbo.ICTransferItems.ICTransferItemQty AS ViewStandardWoodBeginQty
	                                        ,dbo.ICTransferItems.ICTransferItemQty AS ViewStandardWoodBeginCBM
                                            ,dbo.ICTransferItems.ICTransferItemCostTot AS ViewStandardWoodBeginPrice
	                                        ,0 AS ViewStandardWoodShpQty
	                                        ,0 AS ViewStandardWoodShpCBM
                                            ,0 AS ViewStandardWoodShpPrice
	                                        ,0 AS ViewStandardWoodRcpQty
	                                        ,0 AS ViewStandardWoodRcpCBM
                                            ,0 AS ViewStandardWoodRcpPrice
	                                        ,dbo.ICTransferItems.ICTransferItemQty AS ViewStandardWoodEndQty
	                                        ,dbo.ICTransferItems.ICTransferItemQty AS ViewStandardWoodEndCBM
                                            ,dbo.ICTransferItems.ICTransferItemCostTot AS ViewStandardWoodEndPrice
	                                        ,dbo.ICTransferItems.FK_ICToStockID AS FK_ICStockID
	                                        FROM dbo.ICTransferItems 
	                                        INNER JOIN dbo.ICProducts ON dbo.ICTransferItems.FK_ICProductID=dbo.ICProducts.ICProductID
	                                        INNER JOIN dbo.ICProductGroups ON dbo.ICProductGroups.ICProductGroupID=dbo.ICProducts.FK_ICProductGroupID
	                                        WHERE dbo.ICTransferItems.AAStatus='Alive' AND dbo.ICProducts.AAStatus='Alive' AND dbo.ICProductGroups.AAStatus='Alive'
	                                        AND dbo.ICProductGroups.ICProductGroupNo='{0}'
	                                        AND dbo.ICTransferItems.FK_ICTransferID IN (SELECT ICTransferID FROM dbo.ICTransfers WHERE AAStatus='Alive' {7})
	
	                                        UNION ALL
	
	                                        SELECT
	                                        dbo.ICProducts.ICProductID AS FK_ICProductID
	                                        ,dbo.ICProducts.FK_ICProductColorSchemaID AS FK_ICProductColorSchemaID
	                                        ,dbo.ICProducts.FK_ICProductStandardID AS FK_ICProductStandardID
	                                        ,dbo.ICProducts.FK_ICProductModelID AS FK_ICProductModelID
	                                        ,dbo.ICProducts.FK_ICProductGroupID AS FK_ICProductGroupID
	                                        ,dbo.ICTransferItems.ICTransferItemLotNo AS ViewStandardWoodSerialNo
	                                        ,0 AS ViewStandardWoodBeginQty
	                                        ,0 AS ViewStandardWoodBeginCBM
                                            ,0 AS ViewStandardWoodBeginPrice
	                                        ,dbo.ICTransferItems.ICTransferItemQty AS ViewStandardWoodShpQty
	                                        ,dbo.ICTransferItems.ICTransferItemQty AS ViewStandardWoodShpCBM
                                            ,dbo.ICTransferItems.ICTransferItemCostTot AS ViewStandardWoodShpPrice
	                                        ,0 AS ViewStandardWoodRcpQty
	                                        ,0 AS ViewStandardWoodRcpCBM
                                            ,0 AS ViewStandardWoodRcpPrice
	                                        ,(-1) * dbo.ICTransferItems.ICTransferItemQty AS ViewStandardWoodEndQty
	                                        ,(-1) * dbo.ICTransferItems.ICTransferItemQty AS ViewStandardWoodEndCBM
                                            ,(-1) * dbo.ICTransferItems.ICTransferItemCostTot AS ViewStandardWoodEndPrice
	                                        ,dbo.ICTransferItems.FK_ICFromStockID AS FK_ICStockID
	                                        FROM dbo.ICTransferItems 
	                                        INNER JOIN dbo.ICProducts ON dbo.ICTransferItems.FK_ICProductID=dbo.ICProducts.ICProductID
	                                        INNER JOIN dbo.ICProductGroups ON dbo.ICProductGroups.ICProductGroupID=dbo.ICProducts.FK_ICProductGroupID
	                                        WHERE dbo.ICTransferItems.AAStatus='Alive' AND dbo.ICProducts.AAStatus='Alive' AND dbo.ICProductGroups.AAStatus='Alive'
	                                        AND dbo.ICProductGroups.ICProductGroupNo='{0}'
	                                        AND dbo.ICTransferItems.FK_ICTransferID IN (SELECT ICTransferID FROM dbo.ICTransfers WHERE AAStatus='Alive' {8})
	
	                                        UNION ALL
	
	                                        SELECT
	                                        dbo.ICProducts.ICProductID AS FK_ICProductID
	                                        ,dbo.ICProducts.FK_ICProductColorSchemaID AS FK_ICProductColorSchemaID
	                                        ,dbo.ICProducts.FK_ICProductStandardID AS FK_ICProductStandardID
	                                        ,dbo.ICProducts.FK_ICProductModelID AS FK_ICProductModelID
	                                        ,dbo.ICProducts.FK_ICProductGroupID AS FK_ICProductGroupID
	                                        ,dbo.ICTransferItems.ICTransferItemLotNo AS ViewStandardWoodSerialNo
	                                        ,0 AS ViewStandardWoodBeginQty
	                                        ,0 AS ViewStandardWoodBeginCBM
                                            ,0 AS ViewStandardWoodBeginPrice
	                                        ,0 AS ViewStandardWoodShpQty
	                                        ,0 AS ViewStandardWoodShpCBM
                                            ,0 AS ViewStandardWoodShpPrice
	                                        ,dbo.ICTransferItems.ICTransferItemQty AS ViewStandardWoodRcpQty
	                                        ,dbo.ICTransferItems.ICTransferItemQty AS ViewStandardWoodRcpCBM
                                            ,dbo.ICTransferItems.ICTransferItemCostTot AS ViewStandardWoodRcpPrice
	                                        ,dbo.ICTransferItems.ICTransferItemQty AS ViewStandardWoodEndQty
	                                        ,dbo.ICTransferItems.ICTransferItemQty AS ViewStandardWoodEndCBM
                                            ,dbo.ICTransferItems.ICTransferItemCostTot AS ViewStandardWoodEndPrice
	                                        ,dbo.ICTransferItems.FK_ICToStockID AS FK_ICStockID
	                                        FROM dbo.ICTransferItems 
	                                        INNER JOIN dbo.ICProducts ON dbo.ICTransferItems.FK_ICProductID=dbo.ICProducts.ICProductID
	                                        INNER JOIN dbo.ICProductGroups ON dbo.ICProductGroups.ICProductGroupID=dbo.ICProducts.FK_ICProductGroupID
	                                        WHERE dbo.ICTransferItems.AAStatus='Alive' AND dbo.ICProducts.AAStatus='Alive' AND dbo.ICProductGroups.AAStatus='Alive'
	                                        AND dbo.ICProductGroups.ICProductGroupNo='{0}'
	                                        AND dbo.ICTransferItems.FK_ICTransferID IN (SELECT ICTransferID FROM dbo.ICTransfers WHERE AAStatus='Alive' {8})
	
	                                        UNION ALL
	
	                                        SELECT
	                                        dbo.ICProducts.ICProductID AS FK_ICProductID
	                                        ,dbo.ICProducts.FK_ICProductColorSchemaID AS FK_ICProductColorSchemaID
	                                        ,dbo.ICProducts.FK_ICProductStandardID AS FK_ICProductStandardID
	                                        ,dbo.ICProducts.FK_ICProductModelID AS FK_ICProductModelID
	                                        ,dbo.ICProducts.FK_ICProductGroupID AS FK_ICProductGroupID
	                                        ,dbo.ICAdjInvItems.ICAdjInvItemLotNo AS ViewStandardWoodSerialNo
	                                        ,(-1) * dbo.ICAdjInvItems.ICAdjInvItemQty AS ViewStandardWoodBeginQty
	                                        ,(-1) * dbo.ICAdjInvItems.ICAdjInvItemQty AS ViewStandardWoodBeginCBM
                                            ,(-1) * dbo.ICAdjInvItems.ICAdjInvItemCostTot AS ViewStandardWoodBeginPrice
	                                        ,0 AS ViewStandardWoodShpQty
	                                        ,0 AS ViewStandardWoodShpCBM
                                            ,0 AS ViewStandardWoodShpPrice
	                                        ,0 AS ViewStandardWoodRcpQty
	                                        ,0 AS ViewStandardWoodRcpCBM
                                            ,0 AS ViewStandardWoodRcpPrice
	                                        ,(-1) * dbo.ICAdjInvItems.ICAdjInvItemQty AS ViewStandardWoodEndQty
	                                        ,(-1) * dbo.ICAdjInvItems.ICAdjInvItemQty AS ViewStandardWoodEndCBM
                                            ,(-1) * dbo.ICAdjInvItems.ICAdjInvItemCostTot AS ViewStandardWoodEndPrice
	                                        ,dbo.ICAdjInvItems.FK_ICStockID AS FK_ICStockID
	                                        FROM dbo.ICAdjInvItems 
	                                        INNER JOIN dbo.ICProducts ON dbo.ICAdjInvItems.FK_ICProductID=dbo.ICProducts.ICProductID
	                                        INNER JOIN dbo.ICProductGroups ON dbo.ICProductGroups.ICProductGroupID=dbo.ICProducts.FK_ICProductGroupID
	                                        WHERE dbo.ICAdjInvItems.AAStatus='Alive' AND dbo.ICProducts.AAStatus='Alive' AND dbo.ICProductGroups.AAStatus='Alive'
	                                        AND dbo.ICProductGroups.ICProductGroupNo='{0}'
	                                        AND dbo.ICAdjInvItems.ICAdjInvItemTypeCombo = 'DecQty'
	                                        AND dbo.ICAdjInvItems.FK_ICAdjInvID IN (SELECT ICAdjInvID FROM dbo.ICAdjInvs WHERE AAStatus='Alive' {9})
	
	                                        UNION ALL
	
	                                        SELECT
	                                        dbo.ICProducts.ICProductID AS FK_ICProductID
	                                        ,dbo.ICProducts.FK_ICProductColorSchemaID AS FK_ICProductColorSchemaID
	                                        ,dbo.ICProducts.FK_ICProductStandardID AS FK_ICProductStandardID
	                                        ,dbo.ICProducts.FK_ICProductModelID AS FK_ICProductModelID
	                                        ,dbo.ICProducts.FK_ICProductGroupID AS FK_ICProductGroupID
	                                        ,dbo.ICAdjInvItems.ICAdjInvItemLotNo AS ViewStandardWoodSerialNo
	                                        ,dbo.ICAdjInvItems.ICAdjInvItemQty AS ViewStandardWoodBeginQty
	                                        ,dbo.ICAdjInvItems.ICAdjInvItemQty AS ViewStandardWoodBeginCBM
                                            ,dbo.ICAdjInvItems.ICAdjInvItemCostTot AS ViewStandardWoodBeginPrice
	                                        ,0 AS ViewStandardWoodShpQty
	                                        ,0 AS ViewStandardWoodShpCBM
                                            ,0 AS ViewStandardWoodShpPrice
	                                        ,0 AS ViewStandardWoodRcpQty
	                                        ,0 AS ViewStandardWoodRcpCBM
                                            ,0 AS ViewStandardWoodRcpPrice
	                                        ,dbo.ICAdjInvItems.ICAdjInvItemQty AS ViewStandardWoodEndQty
	                                        ,dbo.ICAdjInvItems.ICAdjInvItemQty AS ViewStandardWoodEndCBM
                                            ,dbo.ICAdjInvItems.ICAdjInvItemCostTot AS ViewStandardWoodEndPrice
	                                        ,dbo.ICAdjInvItems.FK_ICStockID AS FK_ICStockID
	                                        FROM dbo.ICAdjInvItems 
	                                        INNER JOIN dbo.ICProducts ON dbo.ICAdjInvItems.FK_ICProductID=dbo.ICProducts.ICProductID
	                                        INNER JOIN dbo.ICProductGroups ON dbo.ICProductGroups.ICProductGroupID=dbo.ICProducts.FK_ICProductGroupID
	                                        WHERE dbo.ICAdjInvItems.AAStatus='Alive' AND dbo.ICProducts.AAStatus='Alive' AND dbo.ICProductGroups.AAStatus='Alive'
	                                        AND dbo.ICProductGroups.ICProductGroupNo='{0}'
	                                        AND dbo.ICAdjInvItems.ICAdjInvItemTypeCombo = 'IncQty'
	                                        AND dbo.ICAdjInvItems.FK_ICAdjInvID IN (SELECT ICAdjInvID FROM dbo.ICAdjInvs WHERE AAStatus='Alive' {9})
	
	                                        UNION ALL
	
	                                        SELECT
	                                        dbo.ICProducts.ICProductID AS FK_ICProductID
	                                        ,dbo.ICProducts.FK_ICProductColorSchemaID AS FK_ICProductColorSchemaID
	                                        ,dbo.ICProducts.FK_ICProductStandardID AS FK_ICProductStandardID
	                                        ,dbo.ICProducts.FK_ICProductModelID AS FK_ICProductModelID
	                                        ,dbo.ICProducts.FK_ICProductGroupID AS FK_ICProductGroupID
	                                        ,dbo.ICAdjInvItems.ICAdjInvItemLotNo AS ViewStandardWoodSerialNo
	                                        ,0 AS ViewStandardWoodBeginQty
	                                        ,0 AS ViewStandardWoodBeginCBM
                                            ,0 AS ViewStandardWoodBeginPrice
	                                        ,dbo.ICAdjInvItems.ICAdjInvItemQty AS ViewStandardWoodShpQty
	                                        ,dbo.ICAdjInvItems.ICAdjInvItemQty AS ViewStandardWoodShpCBM
                                            ,dbo.ICAdjInvItems.ICAdjInvItemCostTot AS ViewStandardWoodShpPrice
	                                        ,0 AS ViewStandardWoodRcpQty
	                                        ,0 AS ViewStandardWoodRcpCBM
                                            ,0 AS ViewStandardWoodRcpPrice
	                                        ,(-1) * dbo.ICAdjInvItems.ICAdjInvItemQty AS ViewStandardWoodEndQty
	                                        ,(-1) * dbo.ICAdjInvItems.ICAdjInvItemQty AS ViewStandardWoodEndCBM
                                            ,(-1) * dbo.ICAdjInvItems.ICAdjInvItemCostTot AS ViewStandardWoodEndPrice
	                                        ,dbo.ICAdjInvItems.FK_ICStockID AS FK_ICStockID
	                                        FROM dbo.ICAdjInvItems 
	                                        INNER JOIN dbo.ICProducts ON dbo.ICAdjInvItems.FK_ICProductID=dbo.ICProducts.ICProductID
	                                        INNER JOIN dbo.ICProductGroups ON dbo.ICProductGroups.ICProductGroupID=dbo.ICProducts.FK_ICProductGroupID
	                                        WHERE dbo.ICAdjInvItems.AAStatus='Alive' AND dbo.ICProducts.AAStatus='Alive' AND dbo.ICProductGroups.AAStatus='Alive'
	                                        AND dbo.ICProductGroups.ICProductGroupNo='{0}'
	                                        AND dbo.ICAdjInvItems.ICAdjInvItemTypeCombo = 'DecQty'
	                                        AND dbo.ICAdjInvItems.FK_ICAdjInvID IN (SELECT ICAdjInvID FROM dbo.ICAdjInvs WHERE AAStatus='Alive' {10})
	
	                                        UNION ALL
	
	                                        SELECT
	                                        dbo.ICProducts.ICProductID AS FK_ICProductID
	                                        ,dbo.ICProducts.FK_ICProductColorSchemaID AS FK_ICProductColorSchemaID
	                                        ,dbo.ICProducts.FK_ICProductStandardID AS FK_ICProductStandardID
	                                        ,dbo.ICProducts.FK_ICProductModelID AS FK_ICProductModelID
	                                        ,dbo.ICProducts.FK_ICProductGroupID AS FK_ICProductGroupID
	                                        ,dbo.ICAdjInvItems.ICAdjInvItemLotNo AS ViewStandardWoodSerialNo
	                                        ,0 AS ViewStandardWoodBeginQty
	                                        ,0 AS ViewStandardWoodBeginCBM
                                            ,0 AS ViewStandardWoodBeginPrice
	                                        ,0 AS ViewStandardWoodShpQty
	                                        ,0 AS ViewStandardWoodShpCBM
                                            ,0 AS ViewStandardWoodShpPrice
	                                        ,dbo.ICAdjInvItems.ICAdjInvItemQty AS ViewStandardWoodRcpQty
	                                        ,dbo.ICAdjInvItems.ICAdjInvItemQty AS ViewStandardWoodRcpCBM
                                            ,dbo.ICAdjInvItems.ICAdjInvItemCostTot AS ViewStandardWoodRcpPrice
	                                        ,dbo.ICAdjInvItems.ICAdjInvItemQty AS ViewStandardWoodEndQty
	                                        ,dbo.ICAdjInvItems.ICAdjInvItemQty AS ViewStandardWoodEndCBM
                                            ,dbo.ICAdjInvItems.ICAdjInvItemCostTot AS ViewStandardWoodEndPrice
	                                        ,dbo.ICAdjInvItems.FK_ICStockID AS FK_ICStockID
	                                        FROM dbo.ICAdjInvItems 
	                                        INNER JOIN dbo.ICProducts ON dbo.ICAdjInvItems.FK_ICProductID=dbo.ICProducts.ICProductID
	                                        INNER JOIN dbo.ICProductGroups ON dbo.ICProductGroups.ICProductGroupID=dbo.ICProducts.FK_ICProductGroupID
	                                        WHERE dbo.ICAdjInvItems.AAStatus='Alive' AND dbo.ICProducts.AAStatus='Alive' AND dbo.ICProductGroups.AAStatus='Alive'
	                                        AND dbo.ICProductGroups.ICProductGroupNo='{0}'
	                                        AND dbo.ICAdjInvItems.ICAdjInvItemTypeCombo = 'IncQty'
	                                        AND dbo.ICAdjInvItems.FK_ICAdjInvID IN (SELECT ICAdjInvID FROM dbo.ICAdjInvs WHERE AAStatus='Alive' {10})
	
                                        ) AS TB
                                        GROUP BY FK_ICProductID, FK_ICProductColorSchemaID, FK_ICProductStandardID, FK_ICProductModelID, ViewStandardWoodSerialNo, FK_ICStockID, FK_ICProductGroupID
                                       ", strProductGroupNo, ConvertDateFromDateToByColumn("ICReceiptDate", null, dtFrom.AddDays(-1)), ConvertDateFromDateToByColumn("PPProductionOrdrDate", null, dtFrom.AddDays(-1)), ConvertDateFromDateToByColumn("ICReceiptDate", dtFrom, dtTo), ConvertDateFromDateToByColumn("PPProductionOrdrDate", dtFrom, dtTo), ConvertDateFromDateToByColumn("ICShipmentDate", null, dtFrom.AddDays(-1)), ConvertDateFromDateToByColumn("ICShipmentDate", dtFrom, dtTo), ConvertDateFromDateToByColumn("ICTransferDate", null, dtFrom.AddDays(-1)), ConvertDateFromDateToByColumn("ICTransferDate", dtFrom, dtTo), ConvertDateFromDateToByColumn("ICAdjInvDate", null, dtFrom.AddDays(-1)), ConvertDateFromDateToByColumn("ICAdjInvDate", dtFrom, dtTo));
            return dal.GetDataSet(str);
        }

        #endregion

        #region Query

        public DataSet GetAllDataInv(DateTime dtFrom, DateTime dtTo,string strStockType)
        {
            DateTime dteBeginFrom = new DateTime(1900, 01, 01);
            DateTime dteBeginEnd = dtFrom.AddDays(-1);
            string strQuery = string.Format(@"SELECT 
                            ICProductTypeNo
                            ,ICProductID
                            ,ICProductNo
                            ,ICProductName,ICProductLength,ICProductWidth,ICProductHeight
                            ,ICProductVolume,ICStockNo
                            ,SUM(BeginQty)as BeginQty
                            ,Round(SUM( BeginCBM),6) as BeginCBM
                            ,Round(SUM(BeginTotalCost),6) as BeginTotalCost
                            ,SUM (RcpQty) as RcpQty
                            ,Round(SUM (RcpCBM),6) as RcpCBM
                            ,Round(SUM (RcpTotalCost),6) as RcpTotalCost
                            ,SUM (ShpQty) as ShpQty
                            ,Round(SUM (ShpCBM),6) as ShpCBM
                            ,Round(SUM (ShpTotalCost),6) as ShpTotalCost
                            ,SUM(BeginQty)+SUM (RcpQty)-SUM (ShpQty) as EndQty
                            ,Round(SUM(BeginCBM),6)+Round(SUM (RcpCBM),6)-Round(SUM (ShpCBM),6) as EndCBM
                            ,Round(SUM(BeginTotalCost),6)+Round(SUM (RcpTotalCost),6)-Round(SUM (ShpTotalCost),6) as EndTotalCost
                            FROM
                             (
                               ---------------------------------------------------------------------------------------------------
                            -----------------------------------------------------------------------------------------------------  
                            --- Ton dau ky
                              ---------------------------------------------------------------------------------------------------
                            -----------------------------------------------------------------------------------------------------  
                             --Receipt
                            select ICProductTypes.ICProductTypeNo,ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM as ICProductVolume,ICStockNo,SUM(ICReceiptItemQty) as BeginQty,sum(ICReceiptItemQty*ICProductMaterialCBM) as BeginCBM 
                            ,sum(ICReceiptItemCostTot) as BeginTotalCost
                            , 0 as RcpQty, 0 as RcpCBM, 0 as RcpTotalCost
							, 0 as ShpQty, 0 as ShpCBM, 0 as ShpTotalCost
                            from ICReceiptItems inner join ICProducts on ICReceiptItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICReceipts on ICReceipts.ICReceiptID=ICReceiptItems.FK_ICReceiptID inner join
                            ICStocks on ICStocks.ICStockID=ICReceiptItems.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICReceiptItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICReceipts.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{4}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP' OR ICProductTypeNo='TPVAI')
                            AND CONVERT(VARCHAR(10), [ICReceiptDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                            AND CONVERT(VARCHAR(10), [ICReceiptDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM
                                     ,ICProductTypes.ICProductTypeNo,ICProducts.ICProductID
               Union All    
       
       --Receipt in ProductionOrdr                     
     select ICProductTypes.ICProductTypeNo,ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM as ICProductVolume,ICStockNo,SUM(ICReceiptItemQty) as BeginQty,sum(ICReceiptItemQty*ICProductMaterialCBM) as BeginCBM 
                            ,sum(ICReceiptItemCostTot) as BeginTotalCost
                            , 0 as RcpQty, 0 as RcpCBM, 0 as RcpTotalCost
							, 0 as ShpQty, 0 as ShpCBM, 0 as ShpTotalCost
                            from ICReceiptItems inner join ICProducts on ICReceiptItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join PPProductionOrdrs on PPProductionOrdrs.PPProductionOrdrID=ICReceiptItems.FK_PPProductionOrdrID inner join
                            ICStocks on ICStocks.ICStockID=ICReceiptItems.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICReceiptItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND PPProductionOrdrs.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{4}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP' OR ICProductTypeNo='TPVAI')
                            AND CONVERT(VARCHAR(10), [PPProductionOrdrDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                            AND CONVERT(VARCHAR(10), [PPProductionOrdrDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM
                                        ,ICProductTypes.ICProductTypeNo,ICProducts.ICProductID
       Union All
       
 --Transfer In
       select ICProductTypes.ICProductTypeNo,ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM as ICProductVolume,ICStockNo,SUM(ICTransferItemQty) As BeginQty,sum(ICTransferItemQty*ICProductMaterialCBM) as BeginCBM 
                            ,sum(ICTransferItemCostTot) as BeginTotalCost
                            , 0 as RcpQty, 0 as RcpCBM, 0 as RcpTotalCost
							, 0 as ShpQty, 0 as ShpCBM, 0 as ShpTotalCost
                            from ICTransferItems inner join ICProducts on ICTransferItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICTransfers on ICTransfers.ICTransferID=ICTransferItems.FK_ICTransferID inner join
                            ICStocks on ICStocks.ICStockID=ICTransferItems.FK_ICToStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICTransferItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICTransfers.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{4}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP' OR ICProductTypeNo='TPVAI')
                            AND CONVERT(VARCHAR(10), [ICTransferDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                            AND CONVERT(VARCHAR(10), [ICTransferDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM
                                ,ICProductTypes.ICProductTypeNo,ICProducts.ICProductID
        Union All
        
-- Adj IncQty
				select ICProductTypes.ICProductTypeNo,ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM as ICProductVolume,ICStockNo,SUM(ICAdjInvItemQty) AS BeginQty,sum(ICAdjInvItemQty*ICProductMaterialCBM) as BeginCBM 
                            ,sum(ICAdjInvItemCostTot) as BeginTotalCost
                            , 0 as RcpQty, 0 as RcpCBM, 0 as RcpTotalCost
							, 0 as ShpQty, 0 as ShpCBM, 0 as ShpTotalCost
                            from ICAdjInvItems 
							inner join ICProducts on ICAdjInvItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICAdjInvs on ICAdjInvs.ICAdjInvID=ICAdjInvItems.FK_ICAdjInvID inner join
                            ICStocks on ICStocks.ICStockID=ICAdjInvItems.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICAdjInvItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICAdjInvs.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{4}'
							AND ICAdjInvItemTypeCombo='IncQty'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP' OR ICProductTypeNo='TPVAI')
                            AND CONVERT(VARCHAR(10), [ICAdjInvDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                            AND CONVERT(VARCHAR(10), [ICAdjInvDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM
                                    ,ICProductTypes.ICProductTypeNo,ICProducts.ICProductID
       Union All
-- Shipment
					select ICProductTypes.ICProductTypeNo,ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM as ICProductVolume,ICStockNo,SUM(-1*ICShipmentItemQty) as BeginQty,sum(-1*ICShipmentItemQty*ICProductMaterialCBM) as BeginCBM 
                            ,sum(-1*ICShipmentItemCostTot) as BeginTotalCost
                            , 0 as RcpQty, 0 as RcpCBM, 0 as RcpTotalCost
							, 0 as ShpQty, 0 as ShpCBM, 0 as ShpTotalCost
                            from ICShipmentItems inner join ICProducts on ICShipmentItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICShipments on ICShipments.ICShipmentID=ICShipmentItems.FK_ICShipmentID inner join
                            ICStocks on ICStocks.ICStockID=ICShipmentItems.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICShipmentItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICShipments.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{4}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP' OR ICProductTypeNo='TPVAI')
                            AND CONVERT(VARCHAR(10), [ICShipmentDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                            AND CONVERT(VARCHAR(10), [ICShipmentDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM
                                        ,ICProductTypes.ICProductTypeNo,ICProducts.ICProductID
       Union All 
--Shipment in Producion
       select ICProductTypes.ICProductTypeNo,ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM as ICProductVolume,ICStockNo,SUM(-1*ICShipmentItemQty) as BeginQty,sum(-1*ICShipmentItemQty*ICProductMaterialCBM) as BeginCBM  
                            ,sum(-1*ICShipmentItemCostTot) as BeginTotalCost
                            , 0 as RcpQty, 0 as RcpCBM, 0 as RcpTotalCost
							, 0 as ShpQty, 0 as ShpCBM, 0 as ShpTotalCost
                            from ICShipmentItems inner join ICProducts on ICShipmentItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join PPProductionOrdrs on PPProductionOrdrs.PPProductionOrdrID=ICShipmentItems.FK_PPProductionOrdrID inner join
                            ICStocks on ICStocks.ICStockID=ICShipmentItems.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICShipmentItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND PPProductionOrdrs.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{4}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP' OR ICProductTypeNo='TPVAI')
                            AND CONVERT(VARCHAR(10), [PPProductionOrdrDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                            AND CONVERT(VARCHAR(10), [PPProductionOrdrDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM
                                ,ICProductTypes.ICProductTypeNo,ICProducts.ICProductID
  Union All
-- Transfer Out
			select ICProductTypes.ICProductTypeNo,ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM as ICProductVolume,ICStockNo,SUM(-1*ICTransferItemQty) As BeginQty,sum(-1*ICTransferItemQty*ICProductMaterialCBM) as BeginCBM 
                            ,sum(-1*ICTransferItemCostTot) as BeginTotalCost
                            , 0 as RcpQty, 0 as RcpCBM, 0 as RcpTotalCost
							, 0 as ShpQty, 0 as ShpCBM, 0 as ShpTotalCost
                            from ICTransferItems inner join ICProducts on ICTransferItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICTransfers on ICTransfers.ICTransferID=ICTransferItems.FK_ICTransferID inner join
                            ICStocks on ICStocks.ICStockID=ICTransferItems.FK_ICFromStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICTransferItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICTransfers.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{4}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP' OR ICProductTypeNo='TPVAI')
                            AND CONVERT(VARCHAR(10), [ICTransferDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                            AND CONVERT(VARCHAR(10), [ICTransferDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM
                                        ,ICProductTypes.ICProductTypeNo,ICProducts.ICProductID
     Union All
-- Adj Dec    
     select ICProductTypes.ICProductTypeNo,ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM as ICProductVolume,ICStockNo,SUM(-1*ICAdjInvItemQty) as BeginQty,sum(-1*ICAdjInvItemQty*ICProductMaterialCBM) as BeginCBM 
                            ,sum(-1*ICAdjInvItemCostTot) as BeginTotalCost
                            , 0 as RcpQty, 0 as RcpCBM, 0 as RcpTotalCost
							, 0 as ShpQty, 0 as ShpCBM, 0 as ShpTotalCost
                            from ICAdjInvItems 
							inner join ICProducts on ICAdjInvItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICAdjInvs on ICAdjInvs.ICAdjInvID=ICAdjInvItems.FK_ICAdjInvID inner join
                            ICStocks on ICStocks.ICStockID=ICAdjInvItems.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICAdjInvItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICAdjInvs.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{4}'
							AND ICAdjInvItemTypeCombo='DecQty'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP' OR ICProductTypeNo='TPVAI')
                            AND CONVERT(VARCHAR(10), [ICAdjInvDate], 112)>= CONVERT(VARCHAR(10), '{0}', 112)
                            AND CONVERT(VARCHAR(10), [ICAdjInvDate], 112)<= CONVERT(VARCHAR(10), '{1}', 112)
                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM
                                    ,ICProductTypes.ICProductTypeNo,ICProducts.ICProductID
  ---------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------  
--- Nhap trong ky
  ---------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------  
--Receipt
Union All
select ICProductTypes.ICProductTypeNo,ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM as ICProductVolume,ICStockNo
                            , 0 as BeginQty,0 as BeginCBM, 0 as BeginTotalCost
							,SUM(ICReceiptItemQty) as RcpQty,sum(ICReceiptItemQty*ICProductMaterialCBM) as RcpCBM 
                            ,sum(ICReceiptItemCostTot) as RcpTotalCost
							, 0 as ShpQty, 0 as ShpCBM, 0 as ShpTotalCost
                            from ICReceiptItems inner join ICProducts on ICReceiptItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICReceipts on ICReceipts.ICReceiptID=ICReceiptItems.FK_ICReceiptID inner join
                            ICStocks on ICStocks.ICStockID=ICReceiptItems.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICReceiptItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICReceipts.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{4}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP' OR ICProductTypeNo='TPVAI')
                            AND CONVERT(VARCHAR(10), [ICReceiptDate], 112)>= CONVERT(VARCHAR(10), '{2}', 112)
                            AND CONVERT(VARCHAR(10), [ICReceiptDate], 112)<= CONVERT(VARCHAR(10), '{3}', 112)
                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM
                                ,ICProductTypes.ICProductTypeNo,ICProducts.ICProductID
               Union All    
       
       --Receipt in ProductionOrdr                     
     select ICProductTypes.ICProductTypeNo,ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM as ICProductVolume,ICStockNo
							, 0 as BeginQty,0 as BeginCBM, 0 as BeginTotalCost
							,SUM(ICReceiptItemQty) as RcpQty,sum(ICReceiptItemQty*ICProductMaterialCBM) as RcpCBM 
                            ,sum(ICReceiptItemCostTot) as RcpTotalCost
							, 0 as ShpQty, 0 as ShpCBM, 0 as ShpTotalCost
                            from ICReceiptItems inner join ICProducts on ICReceiptItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join PPProductionOrdrs on PPProductionOrdrs.PPProductionOrdrID=ICReceiptItems.FK_PPProductionOrdrID inner join
                            ICStocks on ICStocks.ICStockID=ICReceiptItems.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICReceiptItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND PPProductionOrdrs.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{4}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP' OR ICProductTypeNo='TPVAI')
                            AND CONVERT(VARCHAR(10), [PPProductionOrdrDate], 112)>= CONVERT(VARCHAR(10), '{2}', 112)
                            AND CONVERT(VARCHAR(10), [PPProductionOrdrDate], 112)<= CONVERT(VARCHAR(10), '{3}', 112)
                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM
                                    ,ICProductTypes.ICProductTypeNo,ICProducts.ICProductID
       Union All
       
 --Transfer In
       select ICProductTypes.ICProductTypeNo,ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM as ICProductVolume,ICStockNo
							, 0 as BeginQty, 0 as BeginCBM, 0 as BeginTotalCost
							,SUM(ICTransferItemQty) As RcpQty,sum(ICTransferItemQty*ICProductMaterialCBM) as RcpCBM 
                            ,sum(ICTransferItemCostTot) as RcpTotalCost
							, 0 as ShpQty, 0 as ShpCBM, 0 as ShpTotalCost
                            from ICTransferItems inner join ICProducts on ICTransferItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICTransfers on ICTransfers.ICTransferID=ICTransferItems.FK_ICTransferID inner join
                            ICStocks on ICStocks.ICStockID=ICTransferItems.FK_ICToStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICTransferItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICTransfers.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{4}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP' OR ICProductTypeNo='TPVAI')
                            AND CONVERT(VARCHAR(10), [ICTransferDate], 112)>= CONVERT(VARCHAR(10), '{2}', 112)
                            AND CONVERT(VARCHAR(10), [ICTransferDate], 112)<= CONVERT(VARCHAR(10), '{3}', 112)
                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM
                                    ,ICProductTypes.ICProductTypeNo,ICProducts.ICProductID
        Union All
        
-- Adj IncQty
				select ICProductTypes.ICProductTypeNo,ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM as ICProductVolume,ICStockNo
                            , 0 as BeginQty, 0 as BeginCBM, 0 as BeginTotalCost
							,SUM(ICAdjInvItemQty) AS RcpQty,sum(ICAdjInvItemQty*ICProductMaterialCBM) as RcpCBM 
                            ,sum(ICAdjInvItemCostTot) as RcpTotalCost
							, 0 as ShpQty, 0 as ShpCBM, 0 as ShpTotalCost
                            from ICAdjInvItems 
							inner join ICProducts on ICAdjInvItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICAdjInvs on ICAdjInvs.ICAdjInvID=ICAdjInvItems.FK_ICAdjInvID inner join
                            ICStocks on ICStocks.ICStockID=ICAdjInvItems.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICAdjInvItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICAdjInvs.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{4}'
							AND ICAdjInvItemTypeCombo='IncQty'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP' OR ICProductTypeNo='TPVAI')
                            AND CONVERT(VARCHAR(10), [ICAdjInvDate], 112)>= CONVERT(VARCHAR(10), '{2}', 112)
                            AND CONVERT(VARCHAR(10), [ICAdjInvDate], 112)<= CONVERT(VARCHAR(10), '{3}', 112)
                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM
                                    ,ICProductTypes.ICProductTypeNo,ICProducts.ICProductID
							
  ---------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------  
--- Xuat trong ky
  ---------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------  
      Union All
-- Shipment
					select ICProductTypes.ICProductTypeNo,ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM as ICProductVolume,ICStockNo
							,0 as BeginQty,0 as BeginCBM 
                            ,0 as BeginTotalCost
                            , 0 as RcpQty, 0 as RcpCBM, 0 as RcpTotalCost
							,SUM(ICShipmentItemQty) as ShpQty,sum(ICShipmentItemQty*ICProductMaterialCBM) as ShpCBM 
                            ,sum(ICShipmentItemCostTot) as ShpTotalCost
                            from ICShipmentItems inner join ICProducts on ICShipmentItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICShipments on ICShipments.ICShipmentID=ICShipmentItems.FK_ICShipmentID inner join
                            ICStocks on ICStocks.ICStockID=ICShipmentItems.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICShipmentItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICShipments.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{4}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP' OR ICProductTypeNo='TPVAI')
                            AND CONVERT(VARCHAR(10), [ICShipmentDate], 112)>= CONVERT(VARCHAR(10), '{2}', 112)
                            AND CONVERT(VARCHAR(10), [ICShipmentDate], 112)<= CONVERT(VARCHAR(10), '{3}', 112)
                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM
                                    ,ICProductTypes.ICProductTypeNo,ICProducts.ICProductID
       Union All 
--Shipment in Producion
       select ICProductTypes.ICProductTypeNo,ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM as ICProductVolume,ICStockNo
							,0 as BeginQty,0 as BeginCBM 
                            ,0 as BeginTotalCost
                            , 0 as RcpQty, 0 as RcpCBM, 0 as RcpTotalCost
							,SUM(ICShipmentItemQty) as ShpQty,sum(ICShipmentItemQty*ICProductMaterialCBM) as ShpCBM 
                            ,sum(ICShipmentItemCostTot) as ShpTotalCost
                            from ICShipmentItems inner join ICProducts on ICShipmentItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join PPProductionOrdrs on PPProductionOrdrs.PPProductionOrdrID=ICShipmentItems.FK_PPProductionOrdrID inner join
                            ICStocks on ICStocks.ICStockID=ICShipmentItems.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICShipmentItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND PPProductionOrdrs.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{4}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP' OR ICProductTypeNo='TPVAI')
                            AND CONVERT(VARCHAR(10), [PPProductionOrdrDate], 112)>= CONVERT(VARCHAR(10), '{2}', 112)
                            AND CONVERT(VARCHAR(10), [PPProductionOrdrDate], 112)<= CONVERT(VARCHAR(10), '{3}', 112)
                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM
                                ,ICProductTypes.ICProductTypeNo,ICProducts.ICProductID
  Union All
-- Transfer Out
			select ICProductTypes.ICProductTypeNo,ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM as ICProductVolume,ICStockNo
							,0 As BeginQty,0 as BeginCBM 
                            ,0 as BeginTotalCost
                            , 0 as RcpQty, 0 as RcpCBM, 0 as RcpTotalCost
							,SUM(ICTransferItemQty) As ShpQty,sum(ICTransferItemQty*ICProductMaterialCBM) as ShpCBM 
                            ,sum(ICTransferItemCostTot) as ShpTotalCost
                            from ICTransferItems inner join ICProducts on ICTransferItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICTransfers on ICTransfers.ICTransferID=ICTransferItems.FK_ICTransferID inner join
                            ICStocks on ICStocks.ICStockID=ICTransferItems.FK_ICFromStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICTransferItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICTransfers.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{4}'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP' OR ICProductTypeNo='TPVAI')
                            AND CONVERT(VARCHAR(10), [ICTransferDate], 112)>= CONVERT(VARCHAR(10), '{2}', 112)
                            AND CONVERT(VARCHAR(10), [ICTransferDate], 112)<= CONVERT(VARCHAR(10), '{3}', 112)
                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM
                                      ,ICProductTypes.ICProductTypeNo,ICProducts.ICProductID
     Union All
-- Adj Dec    
     select ICProductTypes.ICProductTypeNo,ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM as ICProductVolume,ICStockNo
							,0 as BeginQty,0 as BeginCBM 
                            ,0 as BeginTotalCost
                            , 0 as RcpQty, 0 as RcpCBM, 0 as RcpTotalCost
							,SUM(ICAdjInvItemQty) as ShpQty,sum(ICAdjInvItemQty*ICProductMaterialCBM) as ShpCBM 
                            ,sum(ICAdjInvItemCostTot) as ShpTotalCost
                            from ICAdjInvItems 
							inner join ICProducts on ICAdjInvItems.FK_ICProductID = ICProducts.ICProductID
                            inner join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
                            inner join ICAdjInvs on ICAdjInvs.ICAdjInvID=ICAdjInvItems.FK_ICAdjInvID inner join
                            ICStocks on ICStocks.ICStockID=ICAdjInvItems.FK_ICStockID inner join PPPhaseCfgs on ICStocks.ICStockID=PPPhaseCfgs.FK_ICStockID
                            inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                            where 
                            ICAdjInvItems.AAStatus='Alive' 
                            AND ICProducts.AAStatus='Alive' 
                            AND ICProductTypes.AAStatus='Alive' 
                            AND ICAdjInvs.AAStatus='Alive' 
                            AND ICStocks.AAStatus='Alive' 
                            AND PPPhaseCfgs.AAStatus='Alive'
                            AND ICStockTypes.AAStatus='Alive'
                            AND ICStockTypes.ICStockTypeNo='{4}'
							AND ICAdjInvItemTypeCombo='DecQty'
                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP' OR ICProductTypeNo='TPVAI')
                            AND CONVERT(VARCHAR(10), [ICAdjInvDate], 112)>= CONVERT(VARCHAR(10), '{2}', 112)
                            AND CONVERT(VARCHAR(10), [ICAdjInvDate], 112)<= CONVERT(VARCHAR(10), '{3}', 112)
                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProductMaterialCBM
                                        ,ICProductTypes.ICProductTypeNo,ICProducts.ICProductID
                          ) 
                          as ABC
                        group by ICProductTypeNo,ICProductID,ICProductNo
                        ,ICProductName,ICProductLength,ICProductWidth,ICProductHeight
                        ,ICProductVolume,ICStockNo
                        having SUM(BeginQty)<>0 or SUM(RcpQty)<>0 or Sum(ShpQty)<>0
                        order by ICProductNo,ICStockNo
                        ", dteBeginFrom.ToString("yyyyMMdd"), dteBeginEnd.ToString("yyyyMMdd"), dtFrom.ToString("yyyyMMdd"), dtTo.ToString("yyyyMMdd"),strStockType);
            return dal.GetDataSet(strQuery);
        }

        #endregion
    }
	#endregion
}