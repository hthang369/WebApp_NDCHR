using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region ViewSTModuleDescs
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:ViewSTModuleDescsController
	//Created Date:Friday, October 17, 2014
	//-----------------------------------------------------------
	
	public class ViewSTModuleDescsController:BaseBusinessController
	{
		public ViewSTModuleDescsController()
		{
			dal= new DALBaseProvider("ViewSTModuleDescs",typeof(ViewSTModuleDescsInfo));
		}

        public DataSet GetModuleIsUsed()
        {
            string strQuery = string.Format(@"select STModuleDescriptionID as FK_STModuleDescriptionID from  STModuleDescriptions where STModuleID in (
                                                            select STModuleID from STModuleToUserGroupSections
                                                            where STUserGroupSectionID in (Select ADUserGroupSectionID from ADUserGroupSections where ADUserGroupID=1) )
                                                            ");
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAllModule()
        {
            string strQuery = string.Format(@"select STModuleDescriptionID as FK_STModuleDescriptionID from  STModuleDescriptions where STModuleID in (
                                                            select STModuleID from STModules
                                                            )");
            return dal.GetDataSet(strQuery);
        }


        public DataSet GetSTFieldByModule(String strConQueryModule)
        {
            string strQuery = string.Format(@"select RTRIM(LTRIM(STFieldText)) AS GEDictionaryText
                                              from STFields 
                                              where STScreenID in (select STScreenID from STScreens where {0})
                                                      AND STFieldType <> 'GMCLookupEdit' 
                                                      AND STFieldType <> 'GMCTextBox'    
                                                      AND STFieldType <> 'GMCPanelControl'  
                                                      AND STFieldType <> 'GMCLookupEdit'    
                                                      AND STFieldType <> 'TextBoxMaskBox' 
                                                      AND STFieldType <> 'GMCComboBox'
                                                      AND STFieldType <> 'GMCMemoEdit'
                                                      AND STFieldType <> 'GMCDateEdit'
                                                      AND STFieldType <> 'GMCTabControl'
                                                      AND STFieldType <> 'GMCPopupContainerEdit'
                                                      AND STFieldType <> 'GMCGridLookupEdit'
                                                      AND STFieldType <> 'GMCPopupContainerControl'
                                                      AND STFieldText <> ''     
                                                GROUP BY  STFieldText 
                                                            ", strConQueryModule);
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetGridColumn(String strConQueryModule)
        {
            string strQuery = string.Format(@"select DISTINCT RTRIM(LTRIM(STGridColumnCaption)) from STGridColumns where FK_STFieldID in 
                                                        (
	                                                        select STFieldID from STFields where STScreenID in (select STScreenID from STScreens where {0})
                                                        )
                                                            ", strConQueryModule);
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetConfigValue(String strConQueryModule)
        {
            string strQuery = string.Format(@"select DISTINCT RTRIM(LTRIM(ADConfigText)) from ADConfigValues where AAStatus='Alive' AND ADConfigKeyGroup in
                                                            (select CASE 
                                                                        WHEN SUBSTRING (STFieldDataMember ,3 , len(STFieldDataMember) ) like '%Combo'
                                                                           THEN SUBSTRING(SUBSTRING ( STFieldDataMember ,3 , 100 ),0,len(SUBSTRING ( STFieldDataMember ,3 , 100 ))-4)
                                                                           ELSE SUBSTRING (STFieldDataMember ,3 , 100 ) 
                                                                   END as ADConfigKeyGroup
                                                                   from STFields where STScreenID in (select STScreenID from STScreens where {0}))
                                                            ", strConQueryModule);
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetSreen(String strConQueryModule)
        {
            string strQuery = string.Format(@"select DISTINCT RTRIM(LTRIM(STScreenText)) from STScreens where {0}
                                                            ", strConQueryModule);
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetModule(String strConQueryModule)
        {
            string strQuery = string.Format(@"select DISTINCT RTRIM(LTRIM(STModuleDescriptionDescription)) from STModuleDescriptions where {0}
                                                            ", strConQueryModule);
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetToolbar(String strConQueryModule)
        {
            string strQuery = string.Format(@"select DISTINCT RTRIM(LTRIM(STToolbarCaption)) from STToolBars where {0}
                                                            ", strConQueryModule);
            return dal.GetDataSet(strQuery);
        }

        public String GetADConfigKeyValue(String strADConfigKeyDesc)
        {
            DataSet ds = new DataSet();
            String strADConfigKeyValue = string.Empty;

            string strQuery = string.Format(@"  SELECT ADConfigKeyValue
                                                FROM dbo.ADConfigValues
                                                WHERE AAStatus ='Alive' AND ADConfigKeyGroup ='DictionaryType'
                                                      AND ADConfigKeyDesc = '{0}'
                                            ", strADConfigKeyDesc);
            ds = dal.GetDataSet(strQuery);
            strADConfigKeyValue = ds.Tables[0].Rows[0][0].ToString();

            return strADConfigKeyValue;
        }

	}
	#endregion
}