using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region ViewWarantyStatistics
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:ViewWarantyStatisticsController
	//Created Date:22 Tháng Năm 2012
	//-----------------------------------------------------------
	
	public class ViewWarantyStatisticsController:BaseBusinessController
	{
		public ViewWarantyStatisticsController()
		{
			dal= new DALBaseProvider("ViewWarantyStatistics",typeof(ViewWarantyStatisticsInfo));
		}

        public DataSet GetStatisticsProductGroups(DateTime dtFrom, DateTime dtTo)
        {
            String strQueryGroup = String.Format(@"SELECT ICProductGroups.ICProductGroupID as GroupID, ICProductGroups.ICProductGroupNo as GroupNo, SUM(CMWarantyHistoryItems.CMWarantyHistoryItemQty)
                                                FROM 
                                                (((CMWarantyHistoryItems INNER Join ICProducts ON CMWarantyHistoryItems.FK_ICProductID = ICProducts.ICProductID)
                                                INNER JOIN CMWarantyHistorys ON CMWarantyHistoryItems.FK_CMWarantyHistoryID = CMWarantyHistorys.CMWarantyHistoryID)
                                                INNER JOIN ICProductGroups ON ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID)
                                                WHERE 
                                                CMWarantyHistoryItems.AAStatus = 'Alive' 
                                                AND ICProductGroups.AAStatus = 'Alive'
                                                AND ICProducts.AAStatus = 'Alive'
                                                AND CMWarantyHistorys.AASTatus = 'Alive'
                                                AND {0}
                                                Group By ICProductGroupID, ICProductGroupNo
                                                ", DALUtil.GenerateBeetween("CMWarantyHistoryDate", dtFrom, dtTo));

            String strQueryNoneGroup = String.Format(@"SELECT 0 as GroupID, 'Other' as GroupNo, SUM(CMWarantyHistoryItems.CMWarantyHistoryItemQty)
                                                FROM 
                                                (((CMWarantyHistoryItems INNER Join ICProducts ON CMWarantyHistoryItems.FK_ICProductID = ICProducts.ICProductID)
                                                INNER JOIN CMWarantyHistorys ON CMWarantyHistoryItems.FK_CMWarantyHistoryID = CMWarantyHistorys.CMWarantyHistoryID)
                                                INNER JOIN ICProductGroups ON ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID)
                                                WHERE 
                                                CMWarantyHistoryItems.AAStatus = 'Alive' 
                                                AND ICProductGroups.AAStatus <> 'Alive'
                                                AND ICProducts.AAStatus = 'Alive'
                                                AND {0} 
                                                AND CMWarantyHistorys.AASTatus = 'Alive'
                                                ", DALUtil.GenerateBeetween("CMWarantyHistoryDate", dtFrom, dtTo));

            String strQuery = strQueryGroup + " UNION ALL " + strQueryNoneGroup; 

            return dal.GetDataSet(strQuery);
        }
        public DataSet GetStatisticsByGroups(int iGroupID, DateTime dtFrom, DateTime dtTo)
        {
            String strQueryGroup = String.Empty;
            if (iGroupID > 0)
            {
                strQueryGroup = String.Format(@"SELECT ICProducts.ICProductID as ProductID, ICProducts.ICProductNo as Producto, SUM(CMWarantyHistoryItems.CMWarantyHistoryItemQty)
                                                FROM 
                                                (((CMWarantyHistoryItems INNER Join ICProducts ON CMWarantyHistoryItems.FK_ICProductID = ICProducts.ICProductID)
                                                INNER JOIN CMWarantyHistorys ON CMWarantyHistoryItems.FK_CMWarantyHistoryID = CMWarantyHistorys.CMWarantyHistoryID)
                                                INNER JOIN ICProductGroups ON ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID)
                                                WHERE 
                                                CMWarantyHistoryItems.AAStatus = 'Alive' 
                                                AND ICProducts.AAStatus = 'Alive'
                                                AND CMWarantyHistorys.AASTatus = 'Alive'
                                                AND {0}
                                                AND ICProductGroupID = {1}
                                                GROUP BY ICProducts.ICProductID, ICProducts.ICProductNo
                                                ", DALUtil.GenerateBeetween("CMWarantyHistoryDate", dtFrom, dtTo), iGroupID);
            }
            if (iGroupID == 0)
            {
                strQueryGroup = String.Format(@"SELECT ICProducts.ICProductID as ProductID, ICProducts.ICProductNo as Producto, SUM(CMWarantyHistoryItems.CMWarantyHistoryItemQty)
                                                FROM 
                                                (((CMWarantyHistoryItems INNER Join ICProducts ON CMWarantyHistoryItems.FK_ICProductID = ICProducts.ICProductID)
                                                INNER JOIN CMWarantyHistorys ON CMWarantyHistoryItems.FK_CMWarantyHistoryID = CMWarantyHistorys.CMWarantyHistoryID)
                                                INNER JOIN ICProductGroups ON ICProducts.FK_ICProductGroupID = ICProductGroups.ICProductGroupID)
                                                WHERE 
                                                CMWarantyHistoryItems.AAStatus = 'Alive' 
                                                AND ICProducts.AAStatus = 'Alive'
                                                AND CMWarantyHistorys.AASTatus = 'Alive'
                                                AND {0}
                                                AND ICProductGroupID not IN (SELECT ICProductGroupID FROM ICProductGroups WHERE AAStatus = 'Alive')
                                                GROUP BY ICProducts.ICProductID, ICProducts.ICProductNo
                                                ", DALUtil.GenerateBeetween("CMWarantyHistoryDate", dtFrom, dtTo));
            }

            String strQuery = strQueryGroup;

            return dal.GetDataSet(strQuery);
        }

        public DataSet GetStatisticsSuppliers(DateTime dtFrom, DateTime dtTo)
        {
            String strQuerySupplier = String.Format(@"SELECT APSuppliers.APSupplierID as SupplierID, APSuppliers.APSupplierNo as SupplierNo, SUM(CMWarantyHistoryItems.CMWarantyHistoryItemQty)
                                                FROM 
                                                (((CMWarantyHistoryItems INNER Join ICProducts ON CMWarantyHistoryItems.FK_ICProductID = ICProducts.ICProductID)
                                                INNER JOIN CMWarantyHistorys ON CMWarantyHistoryItems.FK_CMWarantyHistoryID = CMWarantyHistorys.CMWarantyHistoryID)
                                                INNER JOIN APSuppliers ON ICProducts.FK_APSupplierID = APSuppliers.APSupplierID)
                                                WHERE 
                                                CMWarantyHistoryItems.AAStatus = 'Alive' 
                                                AND APSuppliers.AAStatus = 'Alive'
                                                AND ICProducts.AAStatus = 'Alive'
                                                AND CMWarantyHistorys.AASTatus = 'Alive'
                                                AND {0}
                                                Group By APSupplierID, APSupplierNo
                                                ", DALUtil.GenerateBeetween("CMWarantyHistoryDate", dtFrom, dtTo));

            String strQueryNoneSupplier = String.Format(@"SELECT 0 as SupplierID, 'Other' as SupplierNo, SUM(CMWarantyHistoryItems.CMWarantyHistoryItemQty)
                                                FROM 
                                                (((CMWarantyHistoryItems INNER Join ICProducts ON CMWarantyHistoryItems.FK_ICProductID = ICProducts.ICProductID)
                                                INNER JOIN CMWarantyHistorys ON CMWarantyHistoryItems.FK_CMWarantyHistoryID = CMWarantyHistorys.CMWarantyHistoryID)
                                                INNER JOIN APSuppliers ON ICProducts.FK_APSupplierID = APSuppliers.APSupplierID)
                                                WHERE 
                                                CMWarantyHistoryItems.AAStatus = 'Alive' 
                                                AND APSuppliers.AAStatus <> 'Alive'
                                                AND ICProducts.AAStatus = 'Alive'
                                                AND CMWarantyHistorys.AASTatus = 'Alive'
                                                AND {0}
                                                Group By APSupplierID, APSupplierNo
                                                ", DALUtil.GenerateBeetween("CMWarantyHistoryDate", dtFrom, dtTo));

            String strQuery = strQuerySupplier + " UNION ALL " + strQueryNoneSupplier;

            return dal.GetDataSet(strQuery);
        }
        public DataSet GetStatisticsBySupplier(int iSupplierID, DateTime dtFrom, DateTime dtTo)
        {
            String strQuerySupplier = String.Empty;
            if (iSupplierID > 0)
            {
                strQuerySupplier = String.Format(@"SELECT ICProducts.ICProductID as ProductID, ICProducts.ICProductNo as Producto, SUM(CMWarantyHistoryItems.CMWarantyHistoryItemQty)
                                                FROM 
                                                (((CMWarantyHistoryItems INNER Join ICProducts ON CMWarantyHistoryItems.FK_ICProductID = ICProducts.ICProductID)
                                                INNER JOIN CMWarantyHistorys ON CMWarantyHistoryItems.FK_CMWarantyHistoryID = CMWarantyHistorys.CMWarantyHistoryID)
                                                INNER JOIN APSuppliers ON ICProducts.FK_APSupplierID = APSuppliers.APSupplierID)
                                                WHERE 
                                                CMWarantyHistoryItems.AAStatus = 'Alive' 
                                                AND APSuppliers.AAStatus = 'Alive'
                                                AND ICProducts.AAStatus = 'Alive'
                                                AND CMWarantyHistorys.AASTatus = 'Alive'
                                                AND {0}
                                                AND APSuppliers.APSupplierID = {1} 
                                                GROUP BY ICProducts.ICProductID, ICProducts.ICProductNo
                                                ", DALUtil.GenerateBeetween("CMWarantyHistoryDate", dtFrom, dtTo), iSupplierID);
            }
            else if (iSupplierID == 0)
            {
                strQuerySupplier = String.Format(@"SELECT ICProducts.ICProductID as ProductID, ICProducts.ICProductNo as Producto, SUM(CMWarantyHistoryItems.CMWarantyHistoryItemQty)
                                                FROM 
                                                (((CMWarantyHistoryItems INNER Join ICProducts ON CMWarantyHistoryItems.FK_ICProductID = ICProducts.ICProductID)
                                                INNER JOIN CMWarantyHistorys ON CMWarantyHistoryItems.FK_CMWarantyHistoryID = CMWarantyHistorys.CMWarantyHistoryID)
                                                INNER JOIN APSuppliers ON ICProducts.FK_APSupplierID = APSuppliers.APSupplierID)
                                                WHERE 
                                                CMWarantyHistoryItems.AAStatus = 'Alive' 
                                                AND APSuppliers.AAStatus = 'Alive'
                                                AND ICProducts.AAStatus = 'Alive'
                                                AND CMWarantyHistorys.AASTatus = 'Alive'
                                                AND {0}
                                                AND APSuppliers.APSupplierID not IN (SELECT APSupplierID FROM APSuppliers WHERE AAStatus <> 'Alive')
                                                GROUP BY ICProducts.ICProductID, ICProducts.ICProductNo
                                                ", DALUtil.GenerateBeetween("CMWarantyHistoryDate", dtFrom, dtTo));
            }


            return dal.GetDataSet(strQuerySupplier);
        }

        public DataSet GetStatisticsCustomerGroups(DateTime dtFrom, DateTime dtTo)
        {
            String strQueryCustomerGroups = String.Format(@"SELECT ARCustomerGroups.ARCustomerGroupID as CustomerGroupID, ARCustomerGroups.ARCustomerGroupNo as CustomerGroupNo, SUM(CMWarantyHistoryItems.CMWarantyHistoryItemQty)
                                                                FROM 
                                                                (((CMWarantyHistoryItems INNER JOIN CMWarantyHistorys ON CMWarantyHistoryItems.FK_CMWarantyHistoryID = CMWarantyHistorys.CMWarantyHistoryID)
                                                                INNER JOIN ARCustomers ON CMWarantyHistorys.FK_ARCustomerID = ARCustomers.ARCustomerID)
                                                                INNER JOIN ARCustomerGroups ON ARCustomerGroups.ARCustomerGroupID = ARCustomers.FK_ARCustomerGroupID)
                                                                WHERE 
                                                                CMWarantyHistoryItems.AAStatus = 'Alive' 
                                                                AND ARCustomers.AAStatus = 'Alive'
                                                                AND ARCustomerGroups.AAStatus = 'Alive'
                                                                AND CMWarantyHistorys.AASTatus = 'Alive'
                                                                AND {0}
                                                                GROUP BY ARCustomerGroups.ARCustomerGroupID, ARCustomerGroups.ARCustomerGroupNo
                                                ", DALUtil.GenerateBeetween("CMWarantyHistoryDate", dtFrom, dtTo));

            String strQueryNoneCustomerGroups = String.Format(@"SELECT 0 as CustomerGroupID, 'Other' as CustomerGroupNo, SUM(CMWarantyHistoryItems.CMWarantyHistoryItemQty)
                                                                FROM 
                                                                (((CMWarantyHistoryItems INNER JOIN CMWarantyHistorys ON CMWarantyHistoryItems.FK_CMWarantyHistoryID = CMWarantyHistorys.CMWarantyHistoryID)
                                                                INNER JOIN ARCustomers ON CMWarantyHistorys.FK_ARCustomerID = ARCustomers.ARCustomerID)
                                                                INNER JOIN ARCustomerGroups ON ARCustomerGroups.ARCustomerGroupID = ARCustomers.FK_ARCustomerGroupID)
                                                                WHERE 
                                                                CMWarantyHistoryItems.AAStatus = 'Alive' 
                                                                AND (ARCustomers.AAStatus <> 'Alive'
                                                                OR ARCustomerGroups.AAStatus <> 'Alive')
                                                                AND CMWarantyHistorys.AASTatus = 'Alive'
                                                                AND {0}
                                                                GROUP BY ARCustomerGroups.ARCustomerGroupID, ARCustomerGroups.ARCustomerGroupNo
                                                ", DALUtil.GenerateBeetween("CMWarantyHistoryDate", dtFrom, dtTo));

            String strQuery = strQueryCustomerGroups + " UNION ALL " + strQueryNoneCustomerGroups;

            return dal.GetDataSet(strQuery);
        }
        public DataSet GetStatisticsByCustomerGroup(int iCustGroupID, DateTime dtFrom, DateTime dtTo)
        {
            String strQueryCustomerGroups = String.Empty;
            if (iCustGroupID > 0)
            {
                strQueryCustomerGroups = String.Format(@"SELECT ARCustomers.ARCustomerID as CustID, ARCustomers.ARCustomerNo as CustNo, SUM(CMWarantyHistoryItems.CMWarantyHistoryItemQty)
                                                            FROM 
                                                            (((CMWarantyHistoryItems INNER JOIN CMWarantyHistorys ON CMWarantyHistoryItems.FK_CMWarantyHistoryID = CMWarantyHistorys.CMWarantyHistoryID)
                                                            INNER JOIN ARCustomers ON CMWarantyHistorys.FK_ARCustomerID = ARCustomers.ARCustomerID)
                                                            INNER JOIN ARCustomerGroups ON ARCustomerGroups.ARCustomerGroupID = ARCustomers.FK_ARCustomerGroupID)
                                                            WHERE 
                                                            CMWarantyHistoryItems.AAStatus = 'Alive' 
                                                            AND ARCustomers.AAStatus = 'Alive'
                                                            AND ARCustomerGroups.AAStatus = 'Alive'
                                                            AND CMWarantyHistorys.AASTatus = 'Alive'
                                                            AND {0}
                                                            AND ARCustomerGroupID = {1}
                                                            GROUP BY ARCustomers.ARCustomerID, ARCustomers.ARCustomerNo
                                                            ", DALUtil.GenerateBeetween("CMWarantyHistoryDate", dtFrom, dtTo), iCustGroupID);

            }
            else if (iCustGroupID == 0)
            {
                strQueryCustomerGroups = String.Format(@"SELECT ARCustomers.ARCustomerID as CustID, ARCustomers.ARCustomerNo as CustNo, SUM(CMWarantyHistoryItems.CMWarantyHistoryItemQty)
                                                            FROM 
                                                            (((CMWarantyHistoryItems INNER JOIN CMWarantyHistorys ON CMWarantyHistoryItems.FK_CMWarantyHistoryID = CMWarantyHistorys.CMWarantyHistoryID)
                                                            INNER JOIN ARCustomers ON CMWarantyHistorys.FK_ARCustomerID = ARCustomers.ARCustomerID)
                                                            INNER JOIN ARCustomerGroups ON ARCustomerGroups.ARCustomerGroupID = ARCustomers.FK_ARCustomerGroupID)
                                                            WHERE 
                                                            CMWarantyHistoryItems.AAStatus = 'Alive' 
                                                            AND ARCustomerGroups.AAStatus = 'Alive'
                                                            AND CMWarantyHistorys.AASTatus = 'Alive'
                                                            AND {0}
                                                            AND
                                                            (
                                                            ARCustomers.AAStatus <> 'Alive'
                                                            OR
                                                            (
                                                            ARCustomers.AAStatus <> 'Alive'
                                                            AND ARCustomerGroupID not in (SELECT ARCustomerGroupID FROM ARCustomerGroups WHERE AAStatus <> 'Alive')
                                                            )
                                                            )       
                                                            GROUP BY ARCustomers.ARCustomerID, ARCustomers.ARCustomerNo
                                                            ", DALUtil.GenerateBeetween("CMWarantyHistoryDate", dtFrom, dtTo));
            }

            return dal.GetDataSet(strQueryCustomerGroups);
        }
        public DataSet GetStatisticsByCustomer(int iCustID, DateTime dtFrom, DateTime dtTo)
        {
            String strQueryCustomerGroups = String.Empty;
            if (iCustID > 0)
            {
                strQueryCustomerGroups = String.Format(@"SELECT ICProducts.ICProductID as ProductID, ICProducts.ICProductNo as Producto, SUM(CMWarantyHistoryItems.CMWarantyHistoryItemQty)
                                                            FROM 
                                                            (((CMWarantyHistoryItems INNER JOIN CMWarantyHistorys ON CMWarantyHistoryItems.FK_CMWarantyHistoryID = CMWarantyHistorys.CMWarantyHistoryID)
                                                            INNER JOIN ICProducts ON ICProducts.ICProductID = CMWarantyHistoryItems.FK_ICProductID)
                                                            INNER JOIN ARCustomers ON CMWarantyHistorys.FK_ARCustomerID = ARCustomers.ARCustomerID)
                                                            WHERE 
                                                            CMWarantyHistoryItems.AAStatus = 'Alive' 
                                                            AND ARCustomers.AAStatus = 'Alive'
                                                            AND CMWarantyHistorys.AASTatus = 'Alive'
                                                            AND {0}
                                                            AND ARCustomerID = {1}
                                                            GROUP BY ARCustomers.ARCustomerID, ARCustomers.ARCustomerNo
                                                            ", DALUtil.GenerateBeetween("CMWarantyHistoryDate", dtFrom, dtTo), iCustID);

            }
            else if (iCustID == 0)
            {
                strQueryCustomerGroups = String.Format(@"SELECT ICProducts.ICProductID as ProductID, ICProducts.ICProductNo as Producto, SUM(CMWarantyHistoryItems.CMWarantyHistoryItemQty)
                                                            FROM 
                                                            (((CMWarantyHistoryItems INNER JOIN CMWarantyHistorys ON CMWarantyHistoryItems.FK_CMWarantyHistoryID = CMWarantyHistorys.CMWarantyHistoryID)
                                                            INNER JOIN ICProducts ON ICProducts.ICProductID = CMWarantyHistoryItems.FK_ICProductID)
                                                            INNER JOIN ARCustomers ON CMWarantyHistorys.FK_ARCustomerID = ARCustomers.ARCustomerID)
                                                            WHERE 
                                                            CMWarantyHistoryItems.AAStatus = 'Alive' 
                                                            AND ARCustomers.AAStatus <> 'Alive'
                                                            AND CMWarantyHistorys.AASTatus = 'Alive'
                                                            AND {0}
                                                            AND ARCustomerID = {1}
                                                            GROUP BY ARCustomers.ARCustomerID, ARCustomers.ARCustomerNo
                                                            ", DALUtil.GenerateBeetween("CMWarantyHistoryDate", dtFrom, dtTo));
            }

            return dal.GetDataSet(strQueryCustomerGroups);
        }

        public DataSet GetTopProductWaranty(int iTop, DateTime dtFrom, DateTime dtTo)
        {
            String strQuery = String.Format(@"select top({0}) ICProductID, SUM(CMWarantyHistoryItems.CMWarantyHistoryItemQty) as Qty
                                                from 
                                                ((CMWarantyHistoryItems INNER JOIN CMWarantyHistorys ON FK_CMWarantyHistoryID = CMWarantyHistorys.CMWarantyHistoryID)
                                                INNER JOIN ICProducts ON CMWarantyHistoryItems.FK_ICProductID = ICProducts.ICProductID)
                                                WHERE
                                                CMWarantyHistoryItems.AAStatus = 'ALive'
                                                AND CMWarantyHistorys.AAStatus = 'ALive'
                                                AND ICProducts.AAStatus = 'ALive'
                                                AND {1}
                                                GROUP BY ICProductID
                                                ORDER BY Qty DESC
                                                ", iTop, DALUtil.GenerateBeetween("CMWarantyHistoryDate", dtFrom, dtTo));

            return dal.GetDataSet(strQuery);
        }

        public DataSet GetTopSupplierWaranty(int iTop, DateTime dtFrom, DateTime dtTo)
        {
            String strQuery = String.Format(@"select top({0}) APSupplierID, SUM(CMWarantyHistoryItems.CMWarantyHistoryItemQty) as Qty
                                                from 
                                                (((CMWarantyHistoryItems INNER JOIN CMWarantyHistorys ON FK_CMWarantyHistoryID = CMWarantyHistorys.CMWarantyHistoryID)
                                                INNER JOIN ICProducts ON CMWarantyHistoryItems.FK_ICProductID = ICProducts.ICProductID)
                                                INNER JOIN APSuppliers ON ICProducts.FK_APSupplierID = APSuppliers.APSupplierID)
                                                WHERE
                                                CMWarantyHistoryItems.AAStatus = 'ALive'
                                                AND CMWarantyHistorys.AAStatus = 'ALive'
                                                AND ICProducts.AAStatus = 'ALive'
                                                AND APSuppliers.AAStatus = 'Alive'
                                                AND {1}
                                                GROUP BY APSupplierID
                                                ORDER BY Qty DESC
                                                ", iTop, DALUtil.GenerateBeetween("CMWarantyHistoryDate", dtFrom, dtTo));

            return dal.GetDataSet(strQuery);
        }

        public DataSet GetTopCustomerWaranty(int iTop, DateTime dtFrom, DateTime dtTo)
        {
            String strQuery = String.Format(@"select top({0}) ARCustomerID, SUM(CMWarantyHistoryItems.CMWarantyHistoryItemQty) as Qty
                                                from 
                                                (((CMWarantyHistoryItems INNER JOIN CMWarantyHistorys ON FK_CMWarantyHistoryID = CMWarantyHistorys.CMWarantyHistoryID)
                                                INNER JOIN ICProducts ON CMWarantyHistoryItems.FK_ICProductID = ICProducts.ICProductID)
                                                INNER JOIN ARCustomers ON CMWarantyHistorys.FK_ARCustomerID = ARCustomers.ARCustomerID)
                                                WHERE
                                                CMWarantyHistoryItems.AAStatus = 'ALive'
                                                AND CMWarantyHistorys.AAStatus = 'ALive'
                                                AND ICProducts.AAStatus = 'ALive'
                                                AND ARCustomers.AAStatus = 'Alive'
                                                AND {1}
                                                GROUP BY ARCustomerID
                                                ORDER BY Qty DESC
                                                ", iTop, DALUtil.GenerateBeetween("CMWarantyHistoryDate", dtFrom, dtTo));

            return dal.GetDataSet(strQuery);
        }


	}
	#endregion
}