using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region ViewShpMonitors
	//-----------------------------------------------------------
	//Generated By: Expert Studio
	//Class:ViewShpMonitorsController
	//Created Date:Tuesday, March 19, 2013
	//-----------------------------------------------------------
	
	public class ViewShpMonitorsController:BaseBusinessController
	{
		public ViewShpMonitorsController()
		{
			dal= new DALBaseProvider("ViewShpMonitors",typeof(ViewShpMonitorsInfo));
		}
        /// <summary>
        /// Viet Nguyen 2013.04.17
        /// Lấy dữ liệu xuất kho sản phẩm theo kho, từng ngày trong tháng, đồng thời check định mức xem phù hợp k.
        /// ValidNorm >0 định mức k phù hợp.
        /// </summary>
        public DataSet GetAllShpItemByProductTypeGroupProductNoPhaseInRange(int iProductTypeID, int iProductGroupID, string strProductNo, int iPhaseCfgID, int iPeriod, int iYear)
        {
            // Init Query
            string str = string.Format(@"
                     select FK_ICProductID,ProductNo,ProductName,ICProductStkUOM,FK_ICStockID,ICStockNo,Day,SUM(ShippedQty) as ShippedQty
                    ,SUM(ValidNorm) as ValidNorm
                    From (");
            // lay xuat kho trong nhập xuất quy trình
            str += GetShpQtyCheckValidNormInProductionByDate(iProductTypeID, iProductGroupID, strProductNo, iPhaseCfgID, iPeriod, iYear) + " Union All "
                // lấy xuất kho trong Shipment
                    + GetShpQtyInShpByDate(iProductTypeID, iProductGroupID, strProductNo, iPhaseCfgID, iPeriod, iYear)
                // Lấy xuất kho trong chuyển kho
                    + " Union All " + GetShpQtyInTransferByDate(iProductTypeID, iProductGroupID, strProductNo, iPhaseCfgID, iPeriod, iYear)
                // Final Query
            + string.Format(@" ) as ABC
                    Group by FK_ICProductID,ProductNo,ProductName,ICProductStkUOM,FK_ICStockID,Day,ICStockNo
                    ORDER BY FK_ICProductID,Day");
            return dal.GetDataSet(str);
        }

        /// <summary>
        /// Viet Nguyen 2013.04.17
        /// Lấy sản phẩm,kho ,số lượng xuất, định mức, số lượng thành phẩm trong nhập xuất quy trình theo phiếu.
        /// </summary>
        public string GetShpQtyAndNormQtyInProduction(int iProductTypeID, int iProductGroupID, string strProductNo, int iPhaseCfgID, int iPeriod, int iYear)
        {
            string strQuery = string.Format(@"SELECT ICShipmentItems.FK_ICProductID as ICProductID,ICProductNo as ProductNo,ICProductName as ProductName
									    ,icproducts.ICProductStkUOM,ICShipmentItems.FK_ICStockID,ICStockNo
									    , day(PPProductionOrdrs.PPProductionOrdrDate) AS Day
									    ,ICShipmentItems.ICShipmentItemQty   
									    ,CASE 
										    When (RcpItem.FK_ICProductID= ICShipmentItems.FK_ICProductID) THEN 1
										    ELSE ISNULL((SELECT TOP 1 NormRM.PPNormRMQty FROM dbo.PPNormRMs NormRM WHERE NormRM.FK_ICProductID=ICShipmentItems.FK_ICProductID AND NormRM.FK_PPPhaseCfgID = ICShipmentItems.FK_PPPhaseCfgID AND FK_PPNormID IN (SELECT Norm.PPNormID FROM dbo.PPNorms Norm WHERE Norm.AAStatus='Alive' AND Norm.FK_ICProductID=RcpItem.FK_ICProductID) ), 0)
									     END AS NormFGQty			 
									     ,RcpItem.FK_ICProductID,RcpItem.ICReceiptItemQty		
										      FROM 
                                                (select FK_PPProductionOrdrID,FK_ICProductID,FK_ICStockID,FK_ICProductIDWO,FK_PPWOID,FK_PPPhaseCfgID,AAStatus,SUM(ICShipmentItemQty) as ICShipmentItemQty  from ICShipmentItems
											    group by FK_PPProductionOrdrID,FK_ICProductID,FK_ICStockID,FK_ICProductIDWO,FK_PPWOID,FK_PPPhaseCfgID,AAStatus) as ICShipmentItems
										    INNER JOIN PPProductionOrdrs ON PPProductionOrdrs.PPProductionOrdrID = ICShipmentItems.FK_PPProductionOrdrID
										    INNER JOIN icproducts ON ICProducts.ICProductID = ICShipmentItems.FK_ICProductID
										    INNER JOIN ICStocks on ICStocks.ICStockID=ICShipmentItems.FK_ICStockID
									       Left JOIN
                                                (select FK_PPProductionOrdrID,FK_ICProductID,FK_ICStockID,FK_PPWOID,FK_PPPhaseCfgID,AAStatus,SUM(ICReceiptItemQty) as ICReceiptItemQty  from ICReceiptItems
											    group by FK_PPProductionOrdrID,FK_ICProductID,FK_ICStockID,FK_PPWOID,FK_PPPhaseCfgID,AAStatus) as RcpItem
                                            ON (RcpItem.FK_PPProductionOrdrID=PPProductionOrdrs.PPProductionOrdrID AND RcpItem.FK_ICProductID = ICShipmentItems.FK_ICProductIDWO AND RcpItem.FK_PPWOID=ICShipmentItems.FK_PPWOID)
										    WHERE MONTH(PPProductionOrdrs.PPProductionOrdrDate)={4}AND YEAR(PPProductionOrdrs.PPProductionOrdrDate)={5}
										    AND ICShipmentItems.AAStatus='Alive' AND PPProductionOrdrs.AAStatus='Alive' AND icproducts.AAStatus='Alive'
										    AND (ICProductNo LIKE '%{2}%' or '{2}'='') AND (ICProducts.FK_ICProductTypeID={0} or {0}=0) AND (ICProducts.FK_ICProductGroupID={1} or {1}=0)
										    AND (ICShipmentItems.FK_PPPhaseCfgID={3} or {3}=0)
                                            AND PPProductionOrdrs.PPProductionOrdrTypeCombo LIKE 'ProductionOrdr'
                                            AND (RcpItem.AAStatus='Alive' or RcpItem.AAStatus is NULL)
                ", iProductTypeID, iProductGroupID, strProductNo, iPhaseCfgID, iPeriod, iYear);
            return strQuery;
        }
        /// <summary>
        /// Viet Nguyen 2013.04.17
        /// Lấy sản phẩm,kho ,số lượng xuất, định mức, số lượng thành phẩm,Kiểm tra mỗi row xem định mức và số lượng thực xuất có phù hợp không trong nhập xuất quy trình theo phiếu.
        /// </summary>
        public string GetShpQtyCheckValidNormInProduction(int iProductTypeID, int iProductGroupID, string strProductNo, int iPhaseCfgID, int iPeriod, int iYear)
        {
            string str = string.Format(@" select * 
						                ,Case
							                when(ICReceiptItemQty*NormFGQty)<>ICShipmentItemQty then 1
							                else  0
						                 END as ValidNorm
					                 from 
					                  ( 
                                         {0}
                                      ) as fdf", GetShpQtyAndNormQtyInProduction(iProductTypeID, iProductGroupID, strProductNo, iPhaseCfgID, iPeriod, iYear));
            return str;
        }
        /// <summary>
        /// Viet Nguyen 2013.04.17
        /// Lấy sản phẩm,kho ,số lượng xuất, định mức, số lượng thành phẩm,Kiểm tra mỗi row xem định mức và số lượng thực xuất có phù hợp không trong nhập xuất quy trình theo ngày
        /// </summary>
        public string GetShpQtyCheckValidNormInProductionByDate(int iProductTypeID, int iProductGroupID, string strProductNo, int iPhaseCfgID, int iPeriod, int iYear)
        {
            string str = string.Format(@" select ICProductID as FK_ICProductID,ProductNo,ProductName,ICProductStkUOM,FK_ICStockID,ICStockNo
					                 ,Day
					                 ,SUM(ICShipmentItemQty) as ShippedQty
					                 ,SUM(ValidNorm) as ValidNorm
					                 from 
					                 (
                                         {0}
                                      )  as ProductionOrdrByDay                                     
					                  group by  ICProductID,ProductNo,ProductName,ICProductStkUOM,FK_ICStockID,ICStockNo,Day
                                     ", GetShpQtyCheckValidNormInProduction(iProductTypeID, iProductGroupID, strProductNo, iPhaseCfgID, iPeriod, iYear));
            return str;
        }
        /// <summary>
        /// Viet Nguyen 2013.04.17
        /// Lấy sản phẩm,kho, số lượng xuất trong xuất kho theo từng ngày.
        /// </summary>
        public string GetShpQtyInShpByDate(int iProductTypeID, int iProductGroupID, string strProductNo, int iPhaseCfgID, int iPeriod, int iYear)
        {
            string strQuery = string.Format(@" SELECT ICProductID as FK_ICProductID,ICProductNo as ProductNo,ICProductName as ProductName,icproducts.ICProductStkUOM,ICShipmentItems.FK_ICStockID ,ICStockNo
                    ,day(ICShipments.ICShipmentDate) AS Day,SUM(ICShipmentItems.ICShipmentItemQty) as ShippedQty
                    ,0 as ValidNorm
                      FROM ICShipmentItems 
                    INNER JOIN ICShipments ON ICShipments.ICShipmentID = ICShipmentItems.FK_ICShipmentID
                    INNER JOIN icproducts ON ICProducts.ICProductID = ICShipmentItems.FK_ICProductID
                    INNER JOIN ICStocks on ICStocks.ICStockID=ICShipmentItems.FK_ICStockID
                    WHERE MONTH(ICShipments.ICShipmentDate)={4}AND YEAR(ICShipments.ICShipmentDate)={5}
                    AND ICShipmentItems.AAStatus='Alive' AND ICShipments.AAStatus='Alive' AND icproducts.AAStatus='Alive'
                    AND (ICProductNo LIKE '%{2}%' or '{2}'='') AND (ICProducts.FK_ICProductTypeID={0} or {0}=0) AND (ICProducts.FK_ICProductGroupID={1} or {1}=0)
                    AND (ICShipmentItems.FK_PPPhaseCfgID={3} or {3}=0)
                    GROUP BY ICProductID,ICProductNo,icproducts.ICProductStkUOM,ICShipments.ICShipmentDate,ICProductName,ICShipmentItems.FK_ICStockID,ICStockNo
                ", iProductTypeID, iProductGroupID, strProductNo, iPhaseCfgID, iPeriod, iYear);
            return strQuery;
        }
        /// <summary>
        /// Viet Nguyen 2013.04.17
        /// Lấy sản phẩm, kho, số lượng xuất trong xuất kho trong chuyển kho từng ngày.
        /// </summary>
        public string GetShpQtyInTransferByDate(int iProductTypeID, int iProductGroupID, string strProductNo, int iPhaseCfgID, int iPeriod, int iYear)
        {
            string strQuery = string.Format(@" SELECT ICProductID as FK_ICProductID,ICProductNo as ProductNo,ICProductName as ProductName,icproducts.ICProductStkUOM,ICTransferItems.FK_ICFromStockID as  FK_ICStockID,ICStockNo
                    ,day(ICTransfers.ICTransferDate) AS Day,SUM(ICTransferItems.ICTransferItemQty) as ShippedQty
                    ,0 as ValidNorm
                      FROM ICTransferItems 
                    INNER JOIN ICTransfers ON ICTransfers.ICTransferID = ICTransferItems.FK_ICTransferID
                    INNER JOIN icproducts ON ICProducts.ICProductID = ICTransferItems.FK_ICProductID
                    INNER JOIN ICStocks on ICStocks.ICStockID=ICTransferItems.FK_ICFromStockID
                    WHERE MONTH(ICTransfers.ICTransferDate)={4}AND YEAR(ICTransfers.ICTransferDate)={5}
                    AND ICTransferItems.AAStatus='Alive' AND ICTransfers.AAStatus='Alive' AND icproducts.AAStatus='Alive'
                    AND (ICProductNo LIKE '%{2}%' or '{2}'='') AND (ICProducts.FK_ICProductTypeID={0} or {0}=0) AND (ICProducts.FK_ICProductGroupID={1} or {1}=0)
                    AND ({3}=0)
                    GROUP BY ICProductID,ICProductNo,icproducts.ICProductStkUOM,ICTransfers.ICTransferDate,ICProductName,ICTransferItems.FK_ICFromStockID,ICStockNo
                ", iProductTypeID, iProductGroupID, strProductNo, iPhaseCfgID, iPeriod, iYear);
            return strQuery;
        }
	}
	#endregion
}