using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
    #region ViewTheoDoiHaoHutGheps
    //-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:ViewDeAssemblyFollowUpsController
	//Created Date:Wednesday, March 27, 2013
	//-----------------------------------------------------------
	
	public class ViewTheoDoiHaoHutGhepsController:BaseBusinessController
	{
        public ViewTheoDoiHaoHutGhepsController()
		{
            dal = new DALBaseProvider("ViewTheoDoiHaoHutGheps", typeof(ViewTheoDoiHaoHutGhepsInfo));
		}

        public DataSet GetAllDataByPhaseCfg(int iPhaseCfgID,DateTime dtFrom,DateTime dtTo)
        {
            String strDate = DALUtil.GenerateBeetween("PPProductionOrdrDate", dtFrom, dtTo);
            String strQuery = String.Format(@"SELECT      ICProductColorSchemas.ICProductColorSchemaNo AS ProductColorSchemaNo,
                                                            NVL.FK_ICProductColorSchemaID,
					                                                NVL.ICProductNo  ,
                                                                    NVL.ICProductID AS FK_ICProductID,
					                                                TP.ICProductNo AS ICProductFGNo,
                                                                    TP.ICProductID AS FK_ICProductFGID,
					                                                ShipmentItem.ICShipmentItemVolume AS CBMTho,
					                                                ReceiptItem.ICReceiptItemVolume AS CBMTinh,
					                                                (ShipmentItem.ICShipmentItemVolume-ReceiptItem.ICReceiptItemVolume) AS DeAssemblyQty,
					                                                --CASE WHEN (ReceiptItem.ICReceiptItemQty*TP.ICProductMaterialCBM)>0
						                                                --THEN ROUND((ShipmentItem.ICShipmentItemQty-(ReceiptItem.ICReceiptItemQty*TP.ICProductMaterialCBM))/(ReceiptItem.ICReceiptItemQty*TP.ICProductMaterialCBM)*100,2) 
					                                                --ELSE 100 END  DeAssemblyPct,
                                                                    ReceiptItem.ICReceiptItemQty AS FGQty,
                                                                    ShipmentItem.ICShipmentItemQty AS Qty,
                                                                    0 AS DeAssemblyPct,
					                                                PPProductionOrdrs.PPProductionOrdrDate AS Date,
                                                                    ReceiptItem.FK_PPPhaseCfgID
                                                                    ,PPProductionOrdrs.PPProductionOrdrID as ViewTheoDoiHaoHutGhepID
			                                                FROM         dbo.PPProductionOrdrs 
																		INNER JOIN  ( SELECT AAStatus,FK_ICProductID,SUM(ICReceiptItemQty) AS ICReceiptItemQty,FK_PPProductionOrdrID,FK_PPPhaseCfgID,SUM(ICReceiptItemVolume) AS ICReceiptItemVolume FROM dbo.ICReceiptItems  WHERE AAStatus='Alive' GROUP BY FK_PPProductionOrdrID,FK_ICProductID,FK_PPPhaseCfgID,AAStatus) AS ReceiptItem ON ReceiptItem.FK_PPProductionOrdrID=PPProductionOrdrs.PPProductionOrdrID
								                                        INNER JOIN  ( SELECT AAStatus,FK_ICProductID,FK_ICProductIDWO,SUM(ICShipmentItemQty) AS ICShipmentItemQty,FK_PPProductionOrdrID,FK_PPPhaseCfgID,SUM(ICShipmentItemVolume) AS ICShipmentItemVolume FROM dbo.ICShipmentItems  WHERE AAStatus='Alive' GROUP BY FK_PPProductionOrdrID,FK_ICProductID,FK_ICProductIDWO,FK_PPPhaseCfgID,AAStatus) AS ShipmentItem ON ShipmentItem.FK_PPProductionOrdrID =PPProductionOrdrs.PPProductionOrdrID
																	                                                AND ShipmentItem.FK_ICProductIDWO=ReceiptItem.FK_ICProductID 
					                                                  INNER JOIN dbo.ICProducts AS NVL ON  ShipmentItem.FK_ICProductID = NVL.ICProductID 
					                                                  INNER JOIN dbo.ICProducts AS TP ON ReceiptItem.FK_ICProductID = TP.ICProductID AND ShipmentItem.FK_ICProductIDWO = TP.ICProductID
					                                                  INNER JOIN dbo.ICProductColorSchemas ON NVL.FK_ICProductColorSchemaID = dbo.ICProductColorSchemas.ICProductColorSchemaID
			                                                WHERE	PPProductionOrdrs.AAStatus='Alive'
					                                                AND ReceiptItem.AAStatus='Alive'
					                                                AND ShipmentItem.AAStatus='Alive'
					                                                AND ICProductColorSchemas.AAStatus='Alive'
					                                                AND ReceiptItem.FK_PPPhaseCfgID={0}  AND ShipmentItem.FK_PPPhaseCfgID={0}
			                                                        AND {1}
                                                ORDER BY PPProductionOrdrDate", iPhaseCfgID, strDate);
            return GetDataSet(strQuery);
        }
        public DataSet GetAllObjectRCBInRange(DateTime dtFromDate, DateTime dtToDate, string strProductTypeNo)
        {
            string strDate = DALUtil.GenerateBeetween("PPProductionOrdrDate", dtFromDate, dtToDate);
            string strQuery = String.Format(@"  SELECT	PPProductionOrdrDate,
		                                                ICProductStandardNo,
		                                                ICProductModelNo,
                                                        ProductName,
		                                                ICProductClassNo,
		                                                ICProductClassQty,
		                                                ICProductColorSchemaNo as ProductColorSchemaNo,
		                                                ICShipmentItems.FK_PPProductionOrdrID,
		                                                ICShipmentItemLotNo,
		                                                ICShipmentItemQty,
		                                                ICReceiptItemQty,
		                                                ICReceiptItemProductionTypeCombo 
                                                FROM
                                                (
	                                                SELECT	FK_PPProductionOrdrID,
			                                                ICShipmentItemLotNo,
			                                                ICProductModelNo,
			                                                ICProductClassNo,
			                                                ICProductClassQty,
			                                                SUM(ICShipmentItemQty) as ICShipmentItemQty,
			                                                (
				                                                SELECT DISTINCT ICProductNo +'; '
				                                                FROM dbo.ICShipmentItems
					                                                INNER JOIN dbo.ICProducts ON dbo.ICShipmentItems.FK_ICProductID = dbo.ICProducts.ICProductID
					                                                INNER JOIN dbo.ICProductGroups ON dbo.ICProducts.FK_ICProductGroupID = dbo.ICProductGroups.ICProductGroupID
					                                                INNER JOIN dbo.ICProductModels ON dbo.ICProducts.FK_ICProductModelID = dbo.ICProductModels.ICProductModelID
					                                                INNER JOIN dbo.ICProductClasss ON dbo.ICProducts.FK_ICProductClassID = dbo.ICProductClasss.ICProductClassID
				                                                WHERE dbo.ICShipmentItems.FK_PPProductionOrdrID > 0 AND dbo.ICProductGroups.ICProductGroupNo = '{1}'
					                                                AND dbo.ICShipmentItems.FK_PPProductionOrdrID = ShpItem.FK_PPProductionOrdrID
					                                                AND dbo.ICShipmentItems.ICShipmentItemLotNo = ShpItem.ICShipmentItemLotNo
					                                                AND dbo.ICProductModels.ICProductModelNo = ProductModel.ICProductModelNo
					                                                AND dbo.ICProductClasss.ICProductClassNo = ProductClass.ICProductClassNo
					                                                AND dbo.ICProductClasss.ICProductClassQty = ProductClass.ICProductClassQty
				                                                FOR XML PATH('')
			                                                ) AS ProductName
	                                                FROM dbo.ICShipmentItems ShpItem
	                                                INNER JOIN dbo.ICProducts Product ON ShpItem.FK_ICProductID = Product.ICProductID
	                                                INNER JOIN dbo.ICProductGroups ProductGroup ON Product.FK_ICProductGroupID = ProductGroup.ICProductGroupID
	                                                INNER JOIN dbo.ICProductModels ProductModel ON Product.FK_ICProductModelID = ProductModel.ICProductModelID
	                                                INNER JOIN dbo.ICProductClasss ProductClass ON Product.FK_ICProductClassID = ProductClass.ICProductClassID
	                                                WHERE ShpItem.FK_PPProductionOrdrID > 0 AND ProductGroup.ICProductGroupNo = '{1}'
	                                                GROUP BY FK_PPProductionOrdrID, ICShipmentItemLotNo, ICProductModelNo, ICProductClassNo, ICProductClassQty
                                                ) AS ICShipmentItems
                                                INNER JOIN
                                                (
	                                                SELECT FK_ICProductID,FK_PPProductionOrdrID,ICReceiptItemLotNo,ICReceiptItemProductionTypeCombo,SUM(ICReceiptItemQty) as ICReceiptItemQty
	                                                FROM dbo.ICReceiptItems WHERE AAStatus = 'Alive' AND FK_PPProductionOrdrID > 0
	                                                GROUP BY FK_ICProductID,FK_PPProductionOrdrID,ICReceiptItemLotNo,ICReceiptItemProductionTypeCombo
                                                ) AS ICReceiptItems
                                                ON (ICShipmentItems.FK_PPProductionOrdrID=ICReceiptItems.FK_PPProductionOrdrID AND ICShipmentItems.ICShipmentItemLotNo=ICReceiptItems.ICReceiptItemLotNo)
                                                INNER JOIN PPProductionOrdrs ON PPProductionOrdrs.PPProductionOrdrID=ICShipmentItems.FK_PPProductionOrdrID
                                                INNER JOIN ICProducts AS ICProductRcps ON ICReceiptItems.FK_ICProductID=ICProductRcps.ICProductID
                                                INNER JOIN ICProductColorSchemas ON ICProductRcps.FK_ICProductColorSchemaID=ICProductColorSchemas.ICProductColorSchemaID
                                                INNER JOIN ICProductStandards ON ICProductRcps.FK_ICProductStandardID=ICProductStandards.ICProductStandardID
                                                WHERE {0}
                                                ORDER BY ICShipmentItems.FK_PPProductionOrdrID,ICShipmentItemLotNo,ICReceiptItemProductionTypeCombo Desc", strDate, strProductTypeNo);
            return dal.GetDataSet(strQuery);
        }
    }
	#endregion
}