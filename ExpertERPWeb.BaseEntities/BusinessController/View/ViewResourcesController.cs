using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region ViewResources
	//-----------------------------------------------------------
	//Generated By: Expert Studio
	//Class:ViewResourcesController
	//Created Date:26 Tháng Sáu 2013
	//-----------------------------------------------------------
	
	public class ViewResourcesController:BaseBusinessController
	{
		public ViewResourcesController()
		{
			dal= new DALBaseProvider("ViewResources",typeof(ViewResourcesInfo));
		}
        public DataSet GetAllDataByProductPlnAndDate(int iPPProductPlnID,int iPPResourceID, DateTime dteFromDate, DateTime dteToDate)
        {
            string strQueryByProductPln = string.Empty;
            if (iPPProductPlnID > 0)
                strQueryByProductPln = "PPProductPlnItemDetails.FK_PPProductPlnID,";
            string strQueryDate=DALUtil.GenerateBeetween("PPProductPlnItemDetails.PPProductPlnItemDetailDate",dteFromDate,dteToDate);
            string strQuery = string.Format(@"select {3} PPProductPlnItemDetails.PPProductPlnItemDetailDate as ViewResourceDate,PPRoutingOperationResources.FK_PPResourceID
                            ,PPResources.PPResourceCapacityQty as ViewResourceCapacityQty, SUM(PPProductPlnItemDetailQty*PPProductPlnItemDetailProductionFactorQty/
											                                                            (Case
												                                                             when PPProductPlnItemDetailRate=0 then 1
													                                                            else PPProductPlnItemDetailRate
											                                                                 END 
											                                                              )
											                                                       ) as ViewResourceUsedCapacityQty
											                                                from PPProductPlnItemDetails
                                                inner join PPRoutingOperations on PPRoutingOperations.FK_PPRoutingID=PPProductPlnItemDetails.FK_PPRoutingID
								                                                AND PPRoutingOperations.FK_PPPhaseCfgID=PPProductPlnItemDetails.FK_PPPhaseCfgID
                                                inner join PPRoutingOperationResources on PPRoutingOperationResources.FK_PPRoutingID=PPProductPlnItemDetails.FK_PPRoutingID
								                                                   AND PPRoutingOperationResources.FK_PPRoutingOperationID=PPRoutingOperations.PPRoutingOperationID
                                                inner join PPResources on PPRoutingOperationResources.FK_PPResourceID=PPResources.PPResourceID
                                                where PPProductPlnItemDetails.AAStatus='Alive' AND PPRoutingOperations.AAStatus='Alive' AND PPRoutingOperationResources.AAStatus='Alive' 
                                                     AND PPResources.AAStatus='Alive' 
                                                     AND (PPProductPlnItemDetails.FK_PPProductPlnID={0} or {0}=0) AND {1}
                                                     AND (PPRoutingOperationResources.FK_PPResourceID={2} or {2}=0)
                                                group by {3} PPProductPlnItemDetails.PPProductPlnItemDetailDate,PPRoutingOperationResources.FK_PPResourceID,PPResources.PPResourceCapacityQty
                                                ", iPPProductPlnID, strQueryDate, iPPResourceID, strQueryByProductPln);
            return dal.GetDataSet(strQuery);
        }
	}
	#endregion
}