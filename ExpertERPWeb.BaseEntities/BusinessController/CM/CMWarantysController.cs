using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region CMWarantys
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:CMWarantysController
	//Created Date:Thursday, June 23, 2011
	//-----------------------------------------------------------
	
	public class CMWarantysController:BaseBusinessController
	{
		public CMWarantysController()
		{
			dal= new DALBaseProvider("CMWarantys",typeof(CMWarantysInfo));
		}

        public CMWarantysInfo GetWarantyByWarantyIDAndSerial(int iWarantyID, int iProductID, String strSerial)
        {
            String strQuery = String.Empty;
            if (String.IsNullOrEmpty(strSerial))
            {
                strQuery = String.Format(@"SELECT * FROM [dbo].CMWarantys
                                         WHERE
                                        CMWarantyID = {0}
                                        AND 
	                                    ([AAStatus]='Alive')
                                        AND 
                                        (
                                            CMWarantyID IN (SELECT FK_CMWarantyID FROM CMWarantyItems WHERE AAStatus = 'Alive' AND CMWarantyItems.FK_ICProductID = {1})
                                            OR 
                                            CMWarantyID IN (SELECT DISTINCT  CMWarantyHistorys.FK_CMWarantyID
                                            FROM   CMWarantys INNER JOIN CMWarantyHistorys ON CMWarantys.CMWarantyID = CMWarantyHistorys.FK_CMWarantyID 
                                            INNER JOIN   CMWarantyHistoryItems  ON CMWarantyHistorys.CMWarantyHistoryID = CMWarantyHistoryItems.FK_CMWarantyHistoryID
                                            WHERE CMWarantyHistorys.AAStatus='Alive'
                                            AND CMWarantyHistoryItems.AAStatus='Alive'
                                            AND CMWarantyHistoryItems.FK_ICProductID = {1})
                                        )", iWarantyID, iProductID);
            }
            else
            {
                strQuery = String.Format(@"SELECT * FROM [dbo].CMWarantys
                                         WHERE
                                        CMWarantyID = {0}
                                        AND 
	                                    ([AAStatus]='Alive')
                                        AND 
                                        (
                                            CMWarantyID IN (SELECT FK_CMWarantyID FROM CMWarantyItems WHERE AAStatus = 'Alive' AND CMWarantyItems.FK_ICProductID = {1} AND CMWarantyItems.CMWarantyItemSerialNo LIKE '%{2}%')
                                            OR 
                                            CMWarantyID IN (SELECT DISTINCT  CMWarantyHistorys.FK_CMWarantyID
                                            FROM   CMWarantys INNER JOIN CMWarantyHistorys ON CMWarantys.CMWarantyID = CMWarantyHistorys.FK_CMWarantyID 
                                            INNER JOIN   CMWarantyHistoryItems  ON CMWarantyHistorys.CMWarantyHistoryID = CMWarantyHistoryItems.FK_CMWarantyHistoryID
                                            WHERE CMWarantyHistorys.AAStatus='Alive'
                                            AND CMWarantyHistoryItems.AAStatus='Alive'
                                            AND CMWarantyHistoryItems.FK_ICProductID = {1}
                                            AND (CMWarantyHistoryItems.CMWarantyHistoryItemSerial LIKE '%{2}%'
                                            OR CMWarantyHistoryItems.CMWarantyHistoryItemReplacementSerial LIKE '%{2}%'
                                            OR CMWarantyHistoryItems.CMWarantyHistoryItemBorrowSerial LIKE '%{2}%'))
                                        )", iWarantyID,iProductID, strSerial);
            }
            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (CMWarantysInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);

            return null;
        }
	}
	#endregion
}