using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region PPProductPlnItems
	//-----------------------------------------------------------
	//Generated By: Expert Studio
	//Class:PPProductPlnItemsController
	//Created Date:Tuesday, September 27, 2011
	//-----------------------------------------------------------
	
	public class PPProductPlnItemsController:BaseBusinessController
	{
		public PPProductPlnItemsController()
		{
			dal= new DALBaseProvider("PPProductPlnItems",typeof(PPProductPlnItemsInfo));
		}
        public override int CreateObject(BusinessObject obj)
        {
            ((PPProductPlnItemsInfo)obj).AASelected = false;
            return base.CreateObject(obj);
        }
        public DataSet GetAllDataByPPProductPlnAndType(int iPPProductPlnID, string strType)
        {
            string strQuery = string.Format(@"Select * from PPProductPlnItems where AAStatus='Alive' and FK_PPProductPlnID={0}
                                                and PPProductPlnItemTypeCombo='{1}' ORDER BY PPProductPlnItemPriority ASC", iPPProductPlnID, strType);
            return dal.GetDataSet(strQuery);
        }
        public PPProductPlnItemsInfo GetObjectByPPProductPlnProductAndType(int iPPProductPlnID, int iProductID,string strType)
        {
            string strQuery = string.Format(@"Select * from PPProductPlnItems where AAStatus='Alive' and FK_PPProductPlnID={0}
                                                and (PPProductPlnItemTypeCombo='{1}' or '{1}'='') AND FK_ICProductID={2}", iPPProductPlnID, strType, iProductID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (PPProductPlnItemsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            return null;
        }
        public double GetSumPlnQtyForProductInPeriod(int iProductID, int iPeriod, int iYear)
        {
            string strQuery = string.Format(@"Select SUM(PPProductPlnItemQty) from PPProductPlnItems 
                                                    where AAStatus='Alive'  
                                                    AND FK_ICProductID = {0}
                                                    and FK_PPProductPlnID IN (SELECT PPProductPlnID FROM PPProductPlns
                                                                                WHERE AAStatus = 'Alive'
                                                                                AND PPProductPlnPeriod = {1} 
                                                                                AND PPProductPlnYear = {2})", iProductID, iPeriod, iYear);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 
                                    && ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value )
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            
            return 0;
        }

        public double GetSumPlnReceiptedQtyForProductInPeriod(int iProductID, int iPeriod, int iYear)
        {
            string strQuery = string.Format(@"Select SUM(PPProductPlnItemReceiptQty) from PPProductPlnItems 
                                                    where AAStatus='Alive'  
                                                    AND FK_ICProductID = {0}
                                                    and FK_PPProductPlnID IN (SELECT PPProductPlnID FROM PPProductPlns
                                                                                WHERE AAStatus = 'Alive'
                                                                                AND PPProductPlnPeriod = {1} 
                                                                                AND PPProductPlnYear = {2})", iProductID, iPeriod, iYear);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 
                                    && ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value )
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            return 0;
        }   
        public PPProductPlnItemsInfo GetProductPlnItemByProductInPeriod(int iProductID, int iPeriod, int iYear)
        {
            string strQuery = string.Format(@"Select * from PPProductPlnItems 
                                                    where AAStatus='Alive'  
                                                    AND FK_ICProductID = {0}
                                                    and FK_PPProductPlnID IN (SELECT PPProductPlnID FROM PPProductPlns
                                                                                WHERE AAStatus = 'Alive'
                                                                                AND PPProductPlnPeriod = {1} 
                                                                                AND PPProductPlnYear = {2})", iProductID, iPeriod, iYear);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (PPProductPlnItemsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            return null;
        }
        public DataSet GetAllDataByShpPlanFollowUp(int iProductTypeID)
        {
            string strQuery = string.Format(@"select PPNormRMSLevel2.FK_ICProductID as FK_ICProductID,sum(ViewEstMaterialQty*PPNormRMS.PPNormRMQty*PPNormRMSLevel2.PPNormRMQty) as PPProductPlnItemQty,
                                            FK_ICProductStandard1CutID,FK_ICProductStandard2CutID,FK_ICProductStandard3CutID,FK_ICProductModelID,FK_ICProductColorSchemaID
                                    , sum(ViewEstMaterialQty*PPNormRMS.PPNormRMQty*PPNormRMSLevel2.PPNormRMQty*(ICProductLength+15)*ICProductWidth*ICProductHeight/1000000000) as PPProductPlnItemTotalCBM
                                            from 
                                            ViewEstMaterials 
                                            inner join PPNorms on ViewEstMaterials.FK_ICProductID=PPNorms.FK_ICProductID
                                            inner join PPNormRMS on PPNorms.PPNormID=PPNormRMS.FK_PPNormID
                                            inner join PPNorms as PPNormsLevel2 on PPNormsLevel2.FK_ICProductID=PPNormRMS.FK_ICProductID
                                            inner join PPNormRMS as PPNormRMSLevel2 on PPNormRMSLevel2.FK_PPNormID=PPNormsLevel2.PPNormID
                                            inner join ICProducts on ICProducts.ICProductID=PPNormRMSLevel2.FK_ICProductID
                                            where (ICProducts.FK_ICProductTypeID={0} or {0}=0) AND PPNorms.AAStatus='Alive' AND PPNormsLevel2.AAStatus='Alive'
                                                AND ICProducts.AAStatus='Alive' 
                                            group by PPNormRMSLevel2.FK_ICProductID,FK_ICProductStandard1CutID,FK_ICProductStandard2CutID,FK_ICProductStandard3CutID
                                                ,FK_ICProductModelID,FK_ICProductColorSchemaID"
                                            , iProductTypeID);
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAllDataByProductPlnTypeAndExistRDetail(int iPPProductPlnID, string strType)
        {
            string strQuery = string.Format(@"Select ICProducts.ICProductID as ICProductSemiDetailProductID ,ICProducts.ICProductNo as ICProductSemiDetailProductNo
                                            ,ICProducts.ICProductMaterialCBM as ICProductVolume
                                                ,ICProductSemi.ICProductID as ICProductSemiProductID,ICProductSemi.ICProductNo as ICProductSemiProductNo
                                                ,FGProduct.ICProductID as ICFGProductID,FGProduct.ICProductNo as ICFGProductNo,PPProductPlnItemRDetailQty as PPProductPlnItemDetailQty
                                                ,PPProductPlnItemPriority
                                                from PPProductPlnItems
                                                inner join ICProducts on ICProducts.ICProductID=PPProductPlnItems.FK_ICProductID
                                                inner join ICProducts as ICProductSemi on ICProductSemi.ICProductID=PPProductPlnItems.FK_ICSemiProductID
                                                inner join ICProducts as FGProduct on FGProduct.ICProductID=PPProductPlnItems.FK_ICFGProductID
                                                where PPProductPlnItems.AAStatus='Alive' and FK_PPProductPlnID={0}
                                                 AND (PPProductPlnItemTypeCombo='{1}')
                                                 AND ICProducts.AAStatus='Alive' AND ICProductSemi.AAStatus='Alive' AND FGProduct.AAStatus='Alive'
                                                --AND PPProductPlnItemRDetailQty>0 
                                                Order By PPProductPlnItemPriority", iPPProductPlnID, strType);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataByProductPlnTypeAndExistRDetail(int iPPProductPlnID, string strType,string strStockType)
        {
            string strQuery = string.Format(@"Select ICProducts.ICProductID as ICProductSemiDetailProductID ,ICProducts.ICProductNo as ICProductSemiDetailProductNo
                                            ,ICProducts.ICProductMaterialCBM as ICProductVolume
                                                ,ICProductSemi.ICProductID as ICProductSemiProductID,ICProductSemi.ICProductNo as ICProductSemiProductNo
                                                ,FGProduct.ICProductID as ICFGProductID,FGProduct.ICProductNo as ICFGProductNo,PPProductPlnItemQty as PPProductPlnItemDetailQty
                                                ,PPProductPlnItemNeedToProcessQty as PPProductPlnItemDetailRQty
                                                ,PPProductPlnItemPriority,PPPhaseCfgID,PPPhaseCfgNo,ICProductivityPhaseRate
                                                ,ARSOs.ARSOID, ARSONo
                                                from PPProductPlnItems
                                                inner join ARSOs on PPProductPlnItems.FK_ARSOID=ARSOs.ARSOID
                                                inner join ICProducts on ICProducts.ICProductID=PPProductPlnItems.FK_ICProductID
                                                inner join ICProducts as ICProductSemi on ICProductSemi.ICProductID=PPProductPlnItems.FK_ICSemiProductID
                                                inner join ICProducts as FGProduct on FGProduct.ICProductID=PPProductPlnItems.FK_ICFGProductID
                                                inner join PPPhaseCfgs on 0=0
                                                inner join ICStocks on PPPhaseCfgs.FK_ICStockID=ICStocks.ICStockID
                                                inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                                                Left join ICProductivityPhases on ICProductivityPhases.FK_PPPhaseCfgID=PPPhaseCfgs.PPPhaseCfgID and ICProducts.ICProductID=ICProductivityPhases.FK_ICProductID
                                                where PPProductPlnItems.AAStatus='Alive' and FK_PPProductPlnID={0}
                                                 AND (PPProductPlnItemTypeCombo='{1}')
                                                 AND ICProducts.AAStatus='Alive' AND ICProductSemi.AAStatus='Alive' AND FGProduct.AAStatus='Alive'
                                                AND PPPhaseCfgs.AAStatus='Alive' AND ICStocks.AAStatus='Alive' AND ICStockTypes.AAStatus='Alive'
                                                 AND ARSOs.AAStatus='Alive'
                                                 AND ICStockTypeNo='{2}'
                                                Order By PPProductPlnItemPriority,PPPhaseCfgs.PPPhaseCfgSortOrder", iPPProductPlnID, strType, strStockType);
            return dal.GetDataSet(strQuery);
        }
        public DataSet GetAllDataByProductPlnTypeAndExistRDetailNew(int iPPProductPlnID, string strType, string strStockType)
        {
            string strQuery = string.Format(@"Select ICProducts.ICProductID as ICProductSemiDetailProductID ,ICProducts.ICProductNo as ICProductSemiDetailProductNo
                                            ,ICProducts.ICProductMaterialCBM as ICProductVolume
                                                ,ICProductSemi.ICProductID as ICProductSemiProductID,ICProductSemi.ICProductNo as ICProductSemiProductNo
                                                ,FGProduct.ICProductID as ICFGProductID,FGProduct.ICProductNo as ICFGProductNo
                                                ,PPProductPlnItemPriority,PPPhaseCfgID,PPPhaseCfgNo,ICProductivityPhaseRate
                                                ,PPProductPlnItemNeedToProcessQty,SUM(PPProductPlnItemDetailInv) as PPProductPlnItemDetailQty
                                                from PPProductPlnItems
                                                inner join ICProducts on ICProducts.ICProductID=PPProductPlnItems.FK_ICProductID
                                                inner join ICProducts as ICProductSemi on ICProductSemi.ICProductID=PPProductPlnItems.FK_ICSemiProductID
                                                inner join ICProducts as FGProduct on FGProduct.ICProductID=PPProductPlnItems.FK_ICFGProductID
                                                inner join PPPhaseCfgs on 0=0
                                                inner join ICStocks on PPPhaseCfgs.FK_ICStockID=ICStocks.ICStockID
                                                inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                                                inner join ICProductivityPhases on ICProductivityPhases.FK_PPPhaseCfgID=PPPhaseCfgs.PPPhaseCfgID and ICProducts.ICProductID=ICProductivityPhases.FK_ICProductID
                                                left join PPProductPlnItemDetails on PPProductPlnItemDetails.FK_ICProductFGID=PPProductPlnItems.FK_ICFGProductID 
																		AND PPProductPlnItemDetails.FK_ICProductSemiProductID=PPProductPlnItems.FK_ICSemiProductID 
																	AND PPProductPlnItemDetails.FK_ICProductSemiDetailProductID=PPProductPlnItems.FK_ICProductID
                                                where PPProductPlnItems.AAStatus='Alive' and PPProductPlnItems.FK_PPProductPlnID={0}
                                                 AND (PPProductPlnItemTypeCombo='{1}')
                                                 AND ICProducts.AAStatus='Alive' AND ICProductSemi.AAStatus='Alive' AND FGProduct.AAStatus='Alive'
                                                AND PPPhaseCfgs.AAStatus='Alive' AND ICStocks.AAStatus='Alive' AND ICStockTypes.AAStatus='Alive'
                                                 AND ICStockTypeNo={2}
                                                 Group by ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductMaterialCBM,ICProductSemi.ICProductID
                                                 ,ICProductSemi.ICProductNo,FGProduct.ICProductID,FGProduct.ICProductNo
                                                 ,PPProductPlnItemPriority,PPPhaseCfgID,PPPhaseCfgNo,ICProductivityPhaseRate,PPProductPlnItemNeedToProcessQty
                                                Order By PPProductPlnItemPriority", iPPProductPlnID, strType, strStockType);
            return dal.GetDataSet(strQuery);
        }

        /// <summary>
        /// Trung - 14-12-2012 / Get Danh Sach Thanh Pham De Truy Van Ke Hoach San Xuat Chi Tiet Thanh Pham
        /// </summary>
        /// <param name="iPPProductPlnID"></param>
        /// <param name="strProductPlnType"></param>
        /// <returns></returns>
        public DataSet GetAll_ThanhPhamByProductPlnIDAndType(int iPPProductPlnID, string strType)
        {
            string strQuery = string.Format(@"SELECT	ICProducts.ICProductID as ICProductSemiProductID,
		                                                ICProducts.ICProductNo as ICProductSemiProductNo,
		                                                ProductLevel2.ICProductID as ICProductSemiDetailProductID,
		                                                ProductLevel2.ICProductNo as ICProductSemiDetailProductNo,
		                                                ICProducts.ICProductMaterialCBM as ICProductVolume,
                                                        ProductLevel2.FK_ICProductColorSchemaID as FK_ICProductColorSchemaID,
                                                        ICProductColorSchemaNo,
		                                                PPProductPlnItems.PPProductPlnItemPriority as PPProductPlnItemPriority,
                                                        PPProductPlnItems.PPProductPlnItemNeedToProcessQty as PPNormRMQty
                                            FROM PPProductPlnItems 
                                                INNER JOIN PPNorms on PPProductPlnItems.FK_ICProductID=PPNorms.FK_ICProductID
                                                INNER JOIN ICProducts on ICProducts.ICProductID = PPNorms.FK_ICProductID
                                                INNER JOIN PPNormRMS on PPNorms.PPNormID=PPNormRMs.FK_PPNormID
                                                INNER JOIN ICProducts as ProductLevel2 on ProductLevel2.ICProductID=PPNormRMS.FK_ICProductID
                                                INNER JOIN ICProductColorSchemas on ICProductColorSchemas.ICProductColorSchemaID=ProductLevel2.FK_ICProductColorSchemaID
                                                INNER JOIN ICProductTypes on ProductLevel2.FK_ICProductTypeID=ICProductTypes.ICProductTypeID
                                            WHERE   PPProductPlnItems.AAStatus='Alive' AND PPNorms.AAStatus='Alive' 
                                                    AND PPProductPlnItems.FK_PPProductPlnID={0}
                                                    AND PPProductPlnItems.PPProductPlnItemTypeCombo='{1}'
                                                    AND ICProductTypes.ICProductTypeNo='BTP'
                                                    Order by PPProductPlnItemPriority", iPPProductPlnID, strType);
            return dal.GetDataSet(strQuery);
        }

        /// <summary>
        /// Viet Nguyen - 2013-03-07 
        /// Get Danh Sach Thanh Pham De Truy Van Ke Hoach San Xuat Chi Tiet Thanh Pham
        /// </summary>
        public DataSet GetAll_ThanhPhamByProductPlnIDAndType(int iPPProductPlnID, string strProductPlnType,string strStockType)
        {
            string strQuery = string.Format(@"Select ICProducts.ICProductID as ICProductSemiProductID ,ICProducts.ICProductNo as ICProductSemiProductNo
                                                ,ICProducts.ICProductMaterialCBM as ICProductVolume
                                                    ,FGProduct.ICProductID as ICFGProductID,FGProduct.ICProductNo as ICFGProductNo,PPProductPlnItemQty as PPProductPlnItemDetailQty
                                                    ,PPProductPlnItemPriority,PPPhaseCfgID,PPPhaseCfgNo,ICProductivityPhaseRate
                                                    ,ICProductColorSchemas.ICProductColorSchemaID as FK_ICProductColorSchemaID,ICProductColorSchemaNo
                                                    from PPProductPlnItems
                                                    inner join ICProducts on ICProducts.ICProductID=PPProductPlnItems.FK_ICProductID
                                                    inner join ICProducts as FGProduct on FGProduct.ICProductID=PPProductPlnItems.FK_ICFGProductID
                                                    INNER JOIN ICProductColorSchemas on ICProductColorSchemas.ICProductColorSchemaID=FGProduct.FK_ICProductColorSchemaID
                                                    inner join PPPhaseCfgs on 0=0
                                                    inner join ICStocks on PPPhaseCfgs.FK_ICStockID=ICStocks.ICStockID
                                                    inner join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
                                                    Left join ICProductivityPhases on ICProductivityPhases.FK_PPPhaseCfgID=PPPhaseCfgs.PPPhaseCfgID and ICProducts.ICProductID=ICProductivityPhases.FK_ICProductID
                                                    where PPProductPlnItems.AAStatus='Alive' and FK_PPProductPlnID={0}
                                                     AND (PPProductPlnItemTypeCombo='{1}')
                                                     AND ICProducts.AAStatus='Alive' AND FGProduct.AAStatus='Alive'
                                                    AND PPPhaseCfgs.AAStatus='Alive' AND ICStocks.AAStatus='Alive' AND ICStockTypes.AAStatus='Alive'
                                                     AND ICStockTypeNo='{2}'
                                                    Order By PPProductPlnItemPriority,PPPhaseCfgs.PPPhaseCfgSortOrder", iPPProductPlnID, strProductPlnType, strStockType);
            return dal.GetDataSet(strQuery);
        }

        /// <summary>
        /// Viet Nguyen 2013.01.03
        /// Get Have To Process Of ProductPln
        /// Have To Process = Need To Process - OnWO
        /// </summary>
        public double GetTotalHaveToProcessInRange(int iFromPeriod, int iFromYear, int iToPeriod, int iToYear,int iProductID)
        {
            string strQuery = string.Format(@"Select SUM(PPProductPlnItemNeedToProcessQty-PPProductPlnItemWOQty) from PPProductPlnItems where FK_ICProductID={0} and AAStatus='Alive'
                                        AND FK_PPProductPlnID in (Select PPProductPlnID from PPProductPlns where AAStatus='Alive'
                                                AND PPProductPlnYear*12+PPProductPlnPeriod>={1} 
                                                AND PPProductPlnYear*12+PPProductPlnPeriod<={2})", iProductID, iFromYear * 12 + iFromPeriod, iToYear * 12 + iToPeriod);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0
                                    && ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            return 0;
        }

        /// <summary>
        /// Viet Nguyen 2013.01.09
        /// Get ProductPlnItem By Product, SemiProduct, FGProduct In ProductPln
        /// </summary>
        public PPProductPlnItemsInfo GetObjectByPPProductPlnAndProduct(int iPPProductPlnID, int iProductID,int iSemiProduct,int iFGProduct)
        {
            string strQuery = string.Format(@"Select * from PPProductPlnItems where AAStatus='Alive' and FK_PPProductPlnID={0}
                                                AND FK_ICProductID={1} AND FK_ICSemiProductID={2} and FK_ICFGProductID={3}", iPPProductPlnID, iProductID, iSemiProduct, iFGProduct);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (PPProductPlnItemsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            return null;
        }

        /// <summary>
        /// Viet Nguyen 2013.01.11
        /// Get Data For ProdutPln FollowUp By ProductPlnID and ProductPlnType
        /// </summary>
        public DataSet GetAllDataFollowUpByPPProductPlnAndType(int iPPProductPlnID, string strType)
        {
            string strQuery = string.Format(@"Select ICProducts.ICProductID,ICProducts.ICProductNo,ICProducts.ICProductName,PPProductPlnItemPriority
                                              ,(ICProductMaterialCBM*PPProductPlnItemQty) as PPProductPlnItemTotalCBM,PPProductPlnItemQty
                                              , PPProductPlnItems.FK_ICSemiProductID,PPProductPlnItems.FK_ICFGProductID , PPProductPlnItems.FK_ARSOID,ARSOs.ARSONo as ARSONo
                                              from PPProductPlnItems
                                              inner join ICProducts on PPProductPlnItems.FK_ICProductID=ICProducts.ICProductID
                                                inner join ARSOs ON ARSOs.ARSOID=PPProductPlnItems.FK_ARSOID
                                              where PPProductPlnItems.AAStatus='Alive' and (ARSOs.AAStatus='Alive' OR ARSOs.ARSOID=0)
                                                    and ICProducts.AAStatus='Alive' and 
                                                FK_PPProductPlnID={0}
                                                and PPProductPlnItemTypeCombo='{1}' 
                                                ORDER BY FK_ICFGProductID,FK_ICSemiProductID,PPProductPlnItems.FK_ICProductID", iPPProductPlnID, strType);
            return dal.GetDataSet(strQuery);
        }

        /// <summary>
        /// Viet Nguyen 2013.01.24
        /// Get Qty In ProductPln By SO & ProductID
        /// </summary>
        public double GetQtyInProductPlnByProductAndSOID(int iProductID,int iARSOID)
        {
            string strQuery = string.Format(@"Select SUM(PPProductPlnItemQty) from PPProductPlnItems where AAStatus='Alive' AND FK_ICProductID={0} AND FK_ARSOID={1}", iProductID, iARSOID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                try
                {
                    return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
                }
                catch (System.Exception ex)
                {

                }
            }
            return 0;
        }

        public DataSet GetAllDataByPPProductPlnTypeAndSO(int iPPProductPlnID, string strType, int iARSOID)
        {
            string strQuery = string.Format(@"Select * from PPProductPlnItems where AAStatus='Alive' and FK_PPProductPlnID={0}
                                                and PPProductPlnItemTypeCombo='{1}' AND FK_ARSOID={2} ORDER BY PPProductPlnItemPriority,FK_ICSemiProductID", iPPProductPlnID, strType, iARSOID);
            return dal.GetDataSet(strQuery);
        }

        /// <summary>
        /// Viet Nguyen 2013.01.09
        /// Get ProductPlnItem By Product, SemiProduct, FGProduct, SOID In ProductPln
        /// </summary>
        public PPProductPlnItemsInfo GetObjectByPPProductPlnProductAndSO(int iPPProductPlnID, int iProductID, int iSemiProduct, int iFGProduct,int iARSOID)
        {
            string strQuery = string.Format(@"Select * from PPProductPlnItems where AAStatus='Alive' and FK_PPProductPlnID={0}
                                                AND FK_ICProductID={1} AND FK_ICSemiProductID={2} and FK_ICFGProductID={3} AND FK_ARSOID={4}", iPPProductPlnID, iProductID, iSemiProduct, iFGProduct, iARSOID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (PPProductPlnItemsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            return null;
        }

        public DataSet GetTonKhoCongDoan_TheoDoiKHSX(int PPProductPlnID, String strProductProductPlnType, String strStockTypeKhuA)
        {
            string strQuery = String.Format(@"SELECT 
                                ICProductNo ,
                                ICProductName,
                                PPProductPlanItemDesc,
                                PPProductPlnItemFromDate,
                                PPProductPlnItemToDate,
                                PPProductPlnItemLastFinishDate,
                                FK_ARSOID,
                                ARSONo,
                                ICProductLength,
                                ICProductWidth,
                                ICProductHeight ,
                                ICProductVolume,
                                ICStockNo,
                                ICStockTypeID, 
                                PPProductPlnID,
                                PPProductPlnNo,
                                PPWOID
                                ,SUM(BeginQty)as BeginQty
                                ,Round(SUM( BeginCBM),6) as BeginCBM
                                ,Round(SUM(BeginTotalCost),6) as BeginTotalCost
                                ,SUM (RcpQty) as RcpQty
                                ,Round(SUM (RcpCBM),6) as RcpCBM
                                ,Round(SUM (RcpTotalCost),6) as RcpTotalCost
                                ,SUM (ShpQty) as ShpQty
                                ,Round(SUM (ShpCBM),6) as ShpCBM
                                ,Round(SUM (ShpTotalCost),6) as ShpTotalCost
                                ,SUM(BeginQty)+SUM (RcpQty)-SUM (ShpQty) as EndQty
                                ,Round(SUM(BeginCBM),6)+Round(SUM (RcpCBM),6)-Round(SUM (ShpCBM),6) as EndCBM
                                ,Round(SUM(BeginTotalCost),6)+Round(SUM (RcpTotalCost),6)-Round(SUM (ShpTotalCost),6) as EndTotalCost,
                                WOQty AS WOQty,
                                FinishQty,
                                Qty,
                                SchedStatus,
                                PerformanceStatus
                                FROM
                                (	--Receipt           
			                            SELECT     dbo.ICProducts.ICProductNo,
			                                        dbo.ICProducts.ICProductName,
			                                        dbo.PPProductPlnItems.PPProductPlanItemDesc,
			                                        dbo.PPProductPlnItems.PPProductPlnItemFromDate, 
                                                    dbo.PPProductPlnItems.PPProductPlnItemToDate,
			                                        dbo.PPProductPlnItems.PPProductPlnItemLastFinishDate,
                                                    dbo.PPProductPlnItems.FK_ARSOID, dbo.ARSOs.ARSONo, 
                                                    dbo.ICProducts.ICProductLength,
                                                    dbo.ICProducts.ICProductWidth,
                                                    dbo.ICProducts.ICProductHeight,
                                                    dbo.ICProducts.ICProductMaterialCBM AS ICProductVolume,
                                                    dbo.ICStocks.ICStockNo, 
                                                    0 as BeginQty,
			                                        dbo.ICProductTypes.ICProductTypeNo,
			                                        0 as BeginCBM, 
			                                        0 as BeginTotalCost, 
			                                        dbo.ICStockTypes.ICStockTypeID,
                                                    dbo.PPProductPlns.PPProductPlnID,
                                                    dbo.PPProductPlns.PPProductPlnNo, 
			                                        dbo.PPWOs.PPWOID,
			                                        SUM(dbo.ICReceiptItems.ICReceiptItemQty) AS RcpQty,
			                                        SUM(ICReceiptItemQty*ICProducts.ICProductMaterialCBM) as RcpCBM,
                                                    SUM(ICReceiptItemCostTot) as RcpTotalCost,
                                                    0 as ShpQty, 
                                                    0 as ShpCBM, 
                                                    0 as ShpTotalCost,
                                                    dbo.PPProductPlnItems.PPProductPlnItemWOQty AS WOQty,
                                                    dbo.PPProductPlnItems.PPProductPlnItemFinishQty AS FinishQty, 
			                                        dbo.PPProductPlnItems.PPProductPlnItemQty AS Qty , 
			                                        dbo.PPProductPlnItems.PPProductPlnItemSchedStatusCombo AS SchedStatus, 
			                                        dbo.PPProductPlnItems.PPProductPlnItemPerfomanceStatusCombo AS PerformanceStatus
                                        FROM         dbo.PPProductPlnItems 
						                                        INNER JOIN dbo.PPProductPlns ON dbo.PPProductPlnItems.FK_PPProductPlnID = dbo.PPProductPlns.PPProductPlnID 
                                                              INNER JOIN dbo.PPWOs ON dbo.PPProductPlns.PPProductPlnID = dbo.PPWOs.FK_PPProductPlnID 
                                                              INNER JOIN dbo.ARSOs ON dbo.PPProductPlnItems.FK_ARSOID = dbo.ARSOs.ARSOID AND dbo.PPWOs.FK_ARSOID = dbo.ARSOs.ARSOID 
                                                              INNER JOIN dbo.ICReceiptItems ON dbo.PPWOs.PPWOID = dbo.ICReceiptItems.FK_PPWOID 
                                                              INNER JOIN dbo.ICProducts ON  dbo.PPProductPlnItems.FK_ICProductID = dbo.ICProducts.ICProductID AND 
                                                              dbo.ICReceiptItems.FK_ICProductID = dbo.ICProducts.ICProductID
                                                              INNER JOIN dbo.ICProductTypes ON dbo.ICProducts.FK_ICProductTypeID = dbo.ICProductTypes.ICProductTypeID 
                                                              INNER JOIN dbo.ICStocks ON  dbo.ICReceiptItems.FK_ICStockID = dbo.ICStocks.ICStockID 
                                                              INNER JOIN dbo.ICStockTypes ON dbo.ICStocks.FK_ICStockTypeID = dbo.ICStockTypes.ICStockTypeID
                                        WHERE 
				                            (ICProducts.AAStatus='Alive' OR ICProducts.AAStatus IS NULL)
				                            AND PPProductPlnItems.AAStatus='Alive' AND PPProductPlns.AAStatus='Alive'
				                            AND PPWOs.AAStatus='Alive' AND ARSOs.AAStatus='Alive' 
				                            AND (ICProductTypes.AAStatus='Alive' OR ICProductTypes.AAStatus IS NULL)
				                            AND (ICStocks.AAStatus='Alive' OR ICStocks.AAStatus IS NULL)
				                            AND (ICStockTypes.AAStatus='Alive' OR ICStockTypes.AAStatus IS NULL)
											AND (PPProductPlnItems.FK_PPProductPlnID={0} OR 0={0})
                                            AND dbo.ICReceiptItems.AAStatus='Alive' AND dbo.ICReceiptItems.FK_PPProductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus='Alive')
											AND PPProductPlnItemTypeCombo='{1}'
				                            AND ICStockTypes.ICStockTypeNo='{2}'
				                            Group by ICProductNo,
				                            ICStockNo,
				                            ICProducts.ICProductName,
				                            ICProducts.ICProductLength,
				                            ICProducts.ICProductWidth,
				                            ICProducts.ICProductHeight,
				                            ICProducts.ICProductMaterialCBM,
				                            ICProductTypeNo,
				                             ICStockTypeID,
				                             dbo.PPProductPlns.PPProductPlnID,
											dbo.PPProductPlns.PPProductPlnNo,
											PPWOs.PPWOID,
											PPProductPlnItems.PPProductPlanItemDesc,
					                            PPProductPlnItems.PPProductPlnItemFromDate,
					                            PPProductPlnItems.PPProductPlnItemToDate,
					                            PPProductPlnItems.PPProductPlnItemLastFinishDate,
					                             PPProductPlnItems.PPProductPlnItemQty,
					                             PPProductPlnItems.PPProductPlnItemFinishQty,
					                             PPProductPlnItems.PPProductPlnItemWOQty,
					                             PPProductPlnItems.PPProductPlnItemSchedStatusCombo,
					                            PPProductPlnItems.PPProductPlnItemPerfomanceStatusCombo,
					                            PPProductPlnItems.FK_ARSOID,ARSOs.ARSONo
                                   Union All
		                            --Transfer In
			                            SELECT     dbo.ICProducts.ICProductNo,
			                                    dbo.ICProducts.ICProductName,
			                                    dbo.PPProductPlnItems.PPProductPlanItemDesc,
			                                    dbo.PPProductPlnItems.PPProductPlnItemFromDate, 
                                                dbo.PPProductPlnItems.PPProductPlnItemToDate,
			                                    dbo.PPProductPlnItems.PPProductPlnItemLastFinishDate,
                                                dbo.PPProductPlnItems.FK_ARSOID, dbo.ARSOs.ARSONo, 
                                                dbo.ICProducts.ICProductLength,
                                                dbo.ICProducts.ICProductWidth,
                                                dbo.ICProducts.ICProductHeight,
                                                dbo.ICProducts.ICProductMaterialCBM AS ICProductVolume,
                                                dbo.ICStocks.ICStockNo, 
                                                0 as BeginQty,
			                                    dbo.ICProductTypes.ICProductTypeNo,
			                                    0 as BeginCBM, 
			                                    0 as BeginTotalCost, 
			                                    dbo.ICStockTypes.ICStockTypeID,
                                                dbo.PPProductPlns.PPProductPlnID,
                                                dbo.PPProductPlns.PPProductPlnNo, 
			                                    dbo.PPWOs.PPWOID,
			                                    SUM(dbo.ICTransferItems.ICTransferItemQty) AS RcpQty,
			                                    SUM(ICTransferItemQty*ICProducts.ICProductMaterialCBM) as RcpCBM,
                                                SUM(ICTransferItemCostTot) as RcpTotalCost,
                                                0 as ShpQty, 
                                                0 as ShpCBM, 
                                                0 as ShpTotalCost,
                                                dbo.PPProductPlnItems.PPProductPlnItemWOQty AS WOQty,
                                                    dbo.PPProductPlnItems.PPProductPlnItemFinishQty AS FinishQty, 
			                                        dbo.PPProductPlnItems.PPProductPlnItemQty AS Qty , 
			                                        dbo.PPProductPlnItems.PPProductPlnItemSchedStatusCombo AS SchedStatus, 
			                                        dbo.PPProductPlnItems.PPProductPlnItemPerfomanceStatusCombo AS PerformanceStatus
                                    FROM         dbo.PPProductPlnItems 
						                                    INNER JOIN dbo.PPProductPlns ON dbo.PPProductPlnItems.FK_PPProductPlnID = dbo.PPProductPlns.PPProductPlnID 
                                                          INNER JOIN dbo.PPWOs ON dbo.PPProductPlns.PPProductPlnID = dbo.PPWOs.FK_PPProductPlnID 
                                                          INNER JOIN dbo.ARSOs ON dbo.PPProductPlnItems.FK_ARSOID = dbo.ARSOs.ARSOID AND dbo.PPWOs.FK_ARSOID = dbo.ARSOs.ARSOID 
                                                          INNER JOIN dbo.ICTransferItems ON dbo.PPWOs.PPWOID = dbo.ICTransferItems.FK_PPWOID 
                                                          INNER JOIN dbo.ICProducts ON  dbo.PPProductPlnItems.FK_ICProductID = dbo.ICProducts.ICProductID AND 
                                                          dbo.ICTransferItems.FK_ICProductID = dbo.ICProducts.ICProductID
                                                          INNER JOIN dbo.ICProductTypes ON dbo.ICProducts.FK_ICProductTypeID = dbo.ICProductTypes.ICProductTypeID 
                                                          INNER JOIN dbo.ICStocks ON  dbo.ICTransferItems.FK_ICToStockID = dbo.ICStocks.ICStockID 
                                                          INNER JOIN dbo.ICStockTypes ON dbo.ICStocks.FK_ICStockTypeID = dbo.ICStockTypes.ICStockTypeID
                                    WHERE 
				                                                                (ICProducts.AAStatus='Alive' OR ICProducts.AAStatus IS NULL)
				                            AND PPProductPlnItems.AAStatus='Alive' AND PPProductPlns.AAStatus='Alive'
				                            AND PPWOs.AAStatus='Alive' AND ARSOs.AAStatus='Alive' 
				                            AND (ICProductTypes.AAStatus='Alive' OR ICProductTypes.AAStatus IS NULL)
				                            AND (ICStocks.AAStatus='Alive' OR ICStocks.AAStatus IS NULL)
				                            AND (ICStockTypes.AAStatus='Alive' OR ICStockTypes.AAStatus IS NULL)
                                            AND dbo.ICTransferItems.AAStatus='Alive' AND dbo.ICTransferItems.FK_ICTransferID IN (SELECT ICTransferID FROM ICTransfers WHERE AAStatus='Alive')
											AND (PPProductPlnItems.FK_PPProductPlnID={0} OR 0={0})
											AND PPProductPlnItemTypeCombo='{1}'
				                            AND ICStockTypes.ICStockTypeNo='{2}'
				                            Group by ICProductNo,
				                            ICStockNo,
				                            ICProductName,
				                            ICProductLength,
				                            ICProductWidth,
				                            ICProductHeight,
				                            ICProductMaterialCBM,
				                            ICProductTypeNo,
				                             ICStockTypeID,
				                             dbo.PPProductPlns.PPProductPlnID,
											dbo.PPProductPlns.PPProductPlnNo,
											PPWOs.PPWOID,
											PPProductPlnItems.PPProductPlanItemDesc,
					                            PPProductPlnItems.PPProductPlnItemFromDate,
					                            PPProductPlnItems.PPProductPlnItemToDate,
					                            PPProductPlnItems.PPProductPlnItemLastFinishDate,
					                             PPProductPlnItems.PPProductPlnItemQty,
					                             PPProductPlnItems.PPProductPlnItemFinishQty,
					                             PPProductPlnItems.PPProductPlnItemWOQty,
					                             PPProductPlnItems.PPProductPlnItemSchedStatusCombo,
					                            PPProductPlnItems.PPProductPlnItemPerfomanceStatusCombo,
					                            PPProductPlnItems.FK_ARSOID,ARSOs.ARSONo
                                -- Xuat trong ky
                                  Union All
			                           		SELECT     dbo.ICProducts.ICProductNo,
			                                        dbo.ICProducts.ICProductName,
			                                        dbo.PPProductPlnItems.PPProductPlanItemDesc,
			                                        dbo.PPProductPlnItems.PPProductPlnItemFromDate, 
                                                    dbo.PPProductPlnItems.PPProductPlnItemToDate,
			                                        dbo.PPProductPlnItems.PPProductPlnItemLastFinishDate,
                                                    dbo.PPProductPlnItems.FK_ARSOID, dbo.ARSOs.ARSONo, 
                                                    dbo.ICProducts.ICProductLength,
                                                    dbo.ICProducts.ICProductWidth,
                                                    dbo.ICProducts.ICProductHeight,
                                                    dbo.ICProducts.ICProductMaterialCBM AS ICProductVolume,
                                                    dbo.ICStocks.ICStockNo, 
                                                    0 as BeginQty,
			                                        dbo.ICProductTypes.ICProductTypeNo,
			                                        0 as BeginCBM, 
			                                        0 as BeginTotalCost, 
			                                        dbo.ICStockTypes.ICStockTypeID,
                                                    dbo.PPProductPlns.PPProductPlnID,
                                                    dbo.PPProductPlns.PPProductPlnNo, 
			                                        dbo.PPWOs.PPWOID,
                                                    0 as RcpQty, 
                                                    0 as RcpCBM, 
                                                    0 as ShpCBM,
                                                    SUM(dbo.ICShipmentItems.ICShipmentItemQty) AS ShpQty,
			                                        SUM(ICShipmentItemQty*ICProducts.ICProductMaterialCBM) as ShpTotalCost,
                                                    SUM(ICShipmentItemCostTot) as RcpTotalCost,
                                                    dbo.PPProductPlnItems.PPProductPlnItemWOQty AS WOQty,
                                                    dbo.PPProductPlnItems.PPProductPlnItemFinishQty AS FinishQty, 
			                                        dbo.PPProductPlnItems.PPProductPlnItemQty AS Qty , 
			                                        dbo.PPProductPlnItems.PPProductPlnItemSchedStatusCombo AS SchedStatus, 
			                                        dbo.PPProductPlnItems.PPProductPlnItemPerfomanceStatusCombo AS PerformanceStatus
                                        FROM         dbo.PPProductPlnItems 
						                                        INNER JOIN dbo.PPProductPlns ON dbo.PPProductPlnItems.FK_PPProductPlnID = dbo.PPProductPlns.PPProductPlnID 
                                                              INNER JOIN dbo.PPWOs ON dbo.PPProductPlns.PPProductPlnID = dbo.PPWOs.FK_PPProductPlnID 
                                                              INNER JOIN dbo.ARSOs ON dbo.PPProductPlnItems.FK_ARSOID = dbo.ARSOs.ARSOID AND dbo.PPWOs.FK_ARSOID = dbo.ARSOs.ARSOID 
                                                              INNER JOIN dbo.ICShipmentItems ON dbo.PPWOs.PPWOID = dbo.ICShipmentItems.FK_PPWOID 
                                                              INNER JOIN dbo.ICProducts ON  dbo.PPProductPlnItems.FK_ICProductID = dbo.ICProducts.ICProductID AND 
                                                              dbo.ICShipmentItems.FK_ICProductID = dbo.ICProducts.ICProductID
                                                              INNER JOIN dbo.ICProductTypes ON dbo.ICProducts.FK_ICProductTypeID = dbo.ICProductTypes.ICProductTypeID 
                                                              INNER JOIN dbo.ICStocks ON  dbo.ICShipmentItems.FK_ICStockID = dbo.ICStocks.ICStockID 
                                                              INNER JOIN dbo.ICStockTypes ON dbo.ICStocks.FK_ICStockTypeID = dbo.ICStockTypes.ICStockTypeID
                                        WHERE 
				                            (ICProducts.AAStatus='Alive' OR ICProducts.AAStatus IS NULL)
				                            AND PPProductPlnItems.AAStatus='Alive' AND PPProductPlns.AAStatus='Alive'
				                            AND PPWOs.AAStatus='Alive' AND ARSOs.AAStatus='Alive' 
				                            AND (ICProductTypes.AAStatus='Alive' OR ICProductTypes.AAStatus IS NULL)
				                            AND (ICStocks.AAStatus='Alive' OR ICStocks.AAStatus IS NULL)
				                            AND (ICStockTypes.AAStatus='Alive' OR ICStockTypes.AAStatus IS NULL)
                                             AND dbo.ICShipmentItems.AAStatus='Alive' AND dbo.ICShipmentItems.FK_PPProductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus='Alive')
											AND (PPProductPlnItems.FK_PPProductPlnID={0} OR 0={0})
											AND PPProductPlnItemTypeCombo='{1}'
				                            AND ICStockTypes.ICStockTypeNo='{2}'
				                            Group by ICProductNo,
				                            ICStockNo,
				                            ICProductName,
				                            ICProductLength,
				                            ICProductWidth,
				                            ICProductHeight,
				                            ICProductMaterialCBM,
				                            ICProductTypeNo,
				                             ICStockTypeID,
				                             dbo.PPProductPlns.PPProductPlnID,
											dbo.PPProductPlns.PPProductPlnNo,
											PPWOs.PPWOID,
											PPProductPlnItems.PPProductPlanItemDesc,
					                            PPProductPlnItems.PPProductPlnItemFromDate,
					                            PPProductPlnItems.PPProductPlnItemToDate,
					                            PPProductPlnItems.PPProductPlnItemLastFinishDate,
					                             PPProductPlnItems.PPProductPlnItemQty,
					                             PPProductPlnItems.PPProductPlnItemFinishQty,
					                             PPProductPlnItems.PPProductPlnItemWOQty,
					                             PPProductPlnItems.PPProductPlnItemSchedStatusCombo,
					                            PPProductPlnItems.PPProductPlnItemPerfomanceStatusCombo,
					                            PPProductPlnItems.FK_ARSOID,ARSOs.ARSONo
                              Union All
                            -- Transfer Out
			                            SELECT     dbo.ICProducts.ICProductNo,
			                                dbo.ICProducts.ICProductName,
			                                dbo.PPProductPlnItems.PPProductPlanItemDesc,
			                                dbo.PPProductPlnItems.PPProductPlnItemFromDate, 
                                            dbo.PPProductPlnItems.PPProductPlnItemToDate,
			                                dbo.PPProductPlnItems.PPProductPlnItemLastFinishDate,
                                            dbo.PPProductPlnItems.FK_ARSOID, dbo.ARSOs.ARSONo, 
                                            dbo.ICProducts.ICProductLength,
                                            dbo.ICProducts.ICProductWidth,
                                            dbo.ICProducts.ICProductHeight,
                                            dbo.ICProducts.ICProductMaterialCBM AS ICProductVolume,
                                            dbo.ICStocks.ICStockNo, 
                                            0 as BeginQty,
			                                dbo.ICProductTypes.ICProductTypeNo,
			                                0 as BeginCBM, 
			                                0 as BeginTotalCost, 
			                                dbo.ICStockTypes.ICStockTypeID,
                                            dbo.PPProductPlns.PPProductPlnID,
                                            dbo.PPProductPlns.PPProductPlnNo, 
			                                dbo.PPWOs.PPWOID,
			                                0 as RcpQty,
                                            0 as RcpCBM,
                                            0 as RcpTotalCost,
                                            SUM(ICTransferItemQty) as ShpQty, 
                                            sum(ICTransferItemQty*ICProductMaterialCBM) as ShpCBM, 
                                            sum(ICTransferItemCostTot) as ShpTotalCost,
                                            dbo.PPProductPlnItems.PPProductPlnItemWOQty AS WOQty,
                                                    dbo.PPProductPlnItems.PPProductPlnItemFinishQty AS FinishQty, 
			                                        dbo.PPProductPlnItems.PPProductPlnItemQty AS Qty , 
			                                        dbo.PPProductPlnItems.PPProductPlnItemSchedStatusCombo AS SchedStatus, 
			                                        dbo.PPProductPlnItems.PPProductPlnItemPerfomanceStatusCombo AS PerformanceStatus
                                FROM         dbo.PPProductPlnItems 
						                                INNER JOIN dbo.PPProductPlns ON dbo.PPProductPlnItems.FK_PPProductPlnID = dbo.PPProductPlns.PPProductPlnID 
                                                      INNER JOIN dbo.PPWOs ON dbo.PPProductPlns.PPProductPlnID = dbo.PPWOs.FK_PPProductPlnID 
                                                      INNER JOIN dbo.ARSOs ON dbo.PPProductPlnItems.FK_ARSOID = dbo.ARSOs.ARSOID AND dbo.PPWOs.FK_ARSOID = dbo.ARSOs.ARSOID 
                                                      INNER JOIN dbo.ICTransferItems ON dbo.PPWOs.PPWOID = dbo.ICTransferItems.FK_PPWOID 
                                                      INNER JOIN dbo.ICProducts ON  dbo.PPProductPlnItems.FK_ICProductID = dbo.ICProducts.ICProductID AND 
                                                      dbo.ICTransferItems.FK_ICProductID = dbo.ICProducts.ICProductID
                                                      INNER JOIN dbo.ICProductTypes ON dbo.ICProducts.FK_ICProductTypeID = dbo.ICProductTypes.ICProductTypeID 
                                                      INNER JOIN dbo.ICStocks ON  dbo.ICStocks.ICStockID =ICTransferItems.FK_ICFromStockID
                                                      INNER JOIN dbo.ICStockTypes ON dbo.ICStocks.FK_ICStockTypeID = dbo.ICStockTypes.ICStockTypeID
                                WHERE 
				                            (ICProducts.AAStatus='Alive' OR ICProducts.AAStatus IS NULL)
				                            AND PPProductPlnItems.AAStatus='Alive' AND PPProductPlns.AAStatus='Alive'
				                            AND PPWOs.AAStatus='Alive' AND ARSOs.AAStatus='Alive' 
				                            AND (ICProductTypes.AAStatus='Alive' OR ICProductTypes.AAStatus IS NULL)
				                            AND (ICStocks.AAStatus='Alive' OR ICStocks.AAStatus IS NULL)
				                            AND (ICStockTypes.AAStatus='Alive' OR ICStockTypes.AAStatus IS NULL)
                                            AND dbo.ICTransferItems.AAStatus='Alive' AND dbo.ICTransferItems.FK_ICTransferID IN (SELECT ICTransferID FROM ICTransfers WHERE AAStatus='Alive')
											AND (PPProductPlnItems.FK_PPProductPlnID={0} OR 0={0})
											AND PPProductPlnItemTypeCombo='{1}'
				                            AND ICStockTypes.ICStockTypeNo='{2}'
				                            Group by ICProductNo,
				                            ICStockNo,
				                            ICProductName,
				                            ICProductLength,
				                            ICProductWidth,
				                            ICProductHeight,
				                            ICProductMaterialCBM,
				                            ICProductTypeNo,
				                             ICStockTypeID,
				                             dbo.PPProductPlns.PPProductPlnID,
											dbo.PPProductPlns.PPProductPlnNo,
											PPWOs.PPWOID,
											PPProductPlnItems.PPProductPlanItemDesc,
					                            PPProductPlnItems.PPProductPlnItemFromDate,
					                            PPProductPlnItems.PPProductPlnItemToDate,
					                            PPProductPlnItems.PPProductPlnItemLastFinishDate,
					                             PPProductPlnItems.PPProductPlnItemQty,
					                             PPProductPlnItems.PPProductPlnItemFinishQty,
					                             PPProductPlnItems.PPProductPlnItemWOQty,
					                             PPProductPlnItems.PPProductPlnItemSchedStatusCombo,
					                            PPProductPlnItems.PPProductPlnItemPerfomanceStatusCombo,
					                            PPProductPlnItems.FK_ARSOID,ARSOs.ARSONo
			                             ) as ABC
                                    GROUP BY ICProductNo ,
				                            ICProductName,
				                            ICProductLength,
				                            ICProductWidth,
				                            ICProductHeight ,
				                            ICProductVolume,
				                            ICStockNo,
				                            ICStockTypeID,
				                            PPProductPlnID,
				                            PPWOID,PPProductPlanItemDesc,
                                PPProductPlnItemFromDate,
                                PPProductPlnItemToDate,PPProductPlnItemLastFinishDate,Qty,FinishQty,WOQty,SchedStatus,
                                PerformanceStatus,FK_ARSOID,ARSONo,PPProductPlnNo
		                            HAVING SUM(BeginQty)<>0 or SUM(RcpQty)<>0 or Sum(ShpQty)<>0
                                    ORDER BY ICProductNo,ARSONo,ICStockNo", PPProductPlnID, strProductProductPlnType, strStockTypeKhuA);
            return GetDataSet(strQuery);
        }

        public DataSet GetAllDatForProductPlnSemiOrderByPriority(int iARShpPlanID, int iProductTypeID)
        {
            string strQuery = string.Format(@"SELECT ARShpPlanItemDetails.ARShpPlanItemDetailOnPOQty - isnull(APSemiOrdPlanQty, 0) as PPProductPlnItemQty
                                            ,ARShpPlanItemPriority as PPProductPlnItemPriority,ARShpPlanItems.FK_ICProductID as FK_ICFGProductID
                                            ,ARShpPlanItemDetails.FK_ICProductID as FK_ICProductID,ARShpPlanItems.FK_ARSOID as FK_ARSOID
                                            ,ICProducts.*
                                              FROM ARShpPlanItems 
                                              INNER JOIN  ARShpPlanItemDetails ON ARShpPlanItemDetails.FK_ARShpPlanItemID = ARShpPlanItems.ARShpPlanItemID 
                                              inner join ICProducts  on ICProducts.ICProductID=ARShpPlanItemDetails.FK_ICProductID
                                                LEFT  join
                                                    (select FK_ARShpPlanItemID,FK_ICProductID,SUM(APSemiOrdPlanQty) as APSemiOrdPlanQty from  APSemiOrdPlans where AAStatus='Alive'
															group by FK_ARShpPlanItemID,FK_ICProductID
															) as APSemiOrdPlans
                                                         on APSemiOrdPlans.FK_ARShpPlanItemID = ARShpPlanItems.ARShpPlanItemID 
                                                        and APSemiOrdPlans.FK_ICProductID=ARShpPlanItemDetails.FK_ICProductID
                                                   where ARShpPlanItems.AAStatus='Alive' AND ARShpPlanItemDetails.AAStatus='Alive'
                                                AND ICProducts.AAStatus='Alive'
                                                AND ARShpPlanItems.FK_ARShpPlanID={0}
                                                AND FK_ICProductTypeID={1}
                                                AND ARShpPlanItemDetails.ARShpPlanItemDetailOnPOQty - isnull(APSemiOrdPlanQty, 0)>0
                                                order by ARShpPlanItemPriority
                                             ", iARShpPlanID, iProductTypeID);
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAllDataByProductPlnSOANDProductivityInRange(int iProductPlnID, int iARSOID,int iPhaseCfg, DateTime FromDate, DateTime ToDate)
        {
            if(FromDate.DayOfWeek==DayOfWeek.Monday)
                FromDate=FromDate.AddDays(-2);
            else
                FromDate=FromDate.AddDays(-1);
            if (ToDate.DayOfWeek == DayOfWeek.Sunday)
                ToDate = ToDate.AddDays(-1);
            string strQuery = string.Format(@"SELECT PPProductPlnItemDetails.PPProductPlnItemDetailInv - ISNULL(PreStartProductPlnItemDetail.PPProductPlnItemDetailInv,0) AS PPProductPlnItemOnDetailQty
                                            ,PPProductPlnItems.*
                                              FROM PPProductPlnItems
                                            INNER JOIN PPProductPlnItemDetails ON PPProductPlnItemDetails.FK_ARSOID = PPProductPlnItems.FK_ARSOID
                                                AND PPProductPlnItems.FK_ICProductID=PPProductPlnItemDetails.FK_ICProductSemiDetailProductID
                                                AND PPProductPlnItems.FK_ICSemiProductID=PPProductPlnItemDetails.FK_ICProductSemiProductID
                                                AND PPProductPlnItems.FK_ICFGProductID=PPProductPlnItemDetails.FK_ICProductFGID
                                            LEFT JOIN 
                                                (SELECT * FROM  PPProductPlnItemDetails AS ABC WHERE {3} AND FK_PPPhaseCfgs={2})
                                             AS PreStartProductPlnItemDetail ON PreStartProductPlnItemDetail.FK_ARSOID = PPProductPlnItems.FK_ARSOID
                                                AND PPProductPlnItems.FK_ICProductID=PreStartProductPlnItemDetail.FK_ICProductSemiDetailProductID
                                                AND PPProductPlnItems.FK_ICSemiProductID=PreStartProductPlnItemDetail.FK_ICProductSemiProductID
                                                AND PPProductPlnItems.FK_ICFGProductID= PreStartProductPlnItemDetail.FK_ICProductFGID
                                             WHERE {4}
                                             AND PPProductPlnItemDetails.FK_PPPhaseCfgs={2}
                                            AND PPProductPlnItems.FK_PPProductPlnID={0} AND PPProductPlnItems.FK_ARSOID={1} AND PPProductPlnItemDetails.FK_PPPhaseCfgs={2}
                                            ", iProductPlnID, iARSOID, iPhaseCfg, DALUtil.GennerateCondition("ABC.PPProductPlnItemDetailDate", CompareType.Equal, FromDate)
                                                , DALUtil.GennerateCondition("PPProductPlnItemDetails.PPProductPlnItemDetailDate", CompareType.Equal, ToDate));
            return dal.GetDataSet(strQuery);
        }

        /// <summary>
        /// Viet Nguyen 2013.03.28
        /// Lấy danh sách các NVL trong NormLevel 2 của KHXH
        /// </summary>
        public DataSet GetDataInNormLevel2ByByARShpPlnIDAndProductType(int iARShpPlnID, int iProductTypeID)
        {
            string strQuery = string.Format(@"select PPNormRMSLevel2.FK_ICProductID as FK_ICProductID,sum(ARShpPlanItemNTSQty*PPNormRMS.PPNormRMQty*PPNormRMSLevel2.PPNormRMQty) as PPProductPlnItemQty,
                                            FK_ICProductStandard1CutID,FK_ICProductStandard2CutID,FK_ICProductStandard3CutID,FK_ICProductModelID,FK_ICProductColorSchemaID
                                    , sum(ARShpPlanItemNTSQty*PPNormRMS.PPNormRMQty*PPNormRMSLevel2.PPNormRMQty*ICProducts.ICProductLength*ICProducts.ICProductWidth*ICProducts.ICProductHeight/1000000000) as PPProductPlnItemTotalCBM
                                                                from 
                                                                ARShpPlanItems 
                                                                inner join PPNorms on ARShpPlanItems.FK_ICProductID=PPNorms.FK_ICProductID
                                                                inner join PPNormRMS on PPNorms.PPNormID=PPNormRMS.FK_PPNormID
                                                                inner join PPNorms as PPNormsLevel2 on PPNormsLevel2.FK_ICProductID=PPNormRMS.FK_ICProductID
                                                                inner join PPNormRMS as PPNormRMSLevel2 on PPNormRMSLevel2.FK_PPNormID=PPNormsLevel2.PPNormID
                                                                inner join ICProducts on ICProducts.ICProductID=PPNormRMSLevel2.FK_ICProductID
                                                                where (ICProducts.FK_ICProductTypeID={1} or {1}=0) AND PPNorms.AAStatus='Alive' AND PPNormsLevel2.AAStatus='Alive'
                                                                    AND ICProducts.AAStatus='Alive' AND ARShpPlanItems.FK_ARShpPlanID={0}
                                                                group by PPNormRMSLevel2.FK_ICProductID,FK_ICProductStandard1CutID,FK_ICProductStandard2CutID,FK_ICProductStandard3CutID
                                                                    ,FK_ICProductModelID,FK_ICProductColorSchemaID"
                                            , iARShpPlnID, iProductTypeID);
            return dal.GetDataSet(strQuery);
        }

        /// <summary>
        /// Viet Nguyen 2013.07.10
        /// Lay danh sach KHSX theo công đoạn đầu trong tồn dở dang công đoạn.
        /// Chủ yếu là lấy nhóm gỗ và số lượng cần xử lý của công đoạn RCB.
        /// </summary>
        public DataSet GetDataByProductPlnAndProductPlnType(int iPPProductPlnID, string  strProductPlnType)
        {
            string strQuery = string.Format(@"select PPProductPlnRoutingItemFirstDayNTPQty as PPProductPlnItemQty
                                                        ,PPProductPlnItemVolume*PPProductPlnRoutingItemFirstDayNTPQty as PPProductPlnItemTotalCBM
                                                                    ,PPProductPlnItems.* from PPProductPlnRoutingItems
                                                                    inner join PPProductPlnItems on PPProductPlnItems.PPProductPlnItemID= PPProductPlnRoutingItems.FK_PPProductPlnItemID
								                                                                    AND PPProductPlnItems.FK_ICProductID=PPProductPlnRoutingItems.FK_ICProductID

                                                                    where PPProductPlnRoutingItems.FK_PPProductPlnID={0}
                                                                    AND PPProductPlnItems.AAStatus='Alive' AND PPProductPlnRoutingItems.AAStatus='Alive'
                                                                    AND PPProductPlnRoutingItems.FK_PPPhaseCfgID in (select  Top 1 FK_PPPhaseCfgID from PPRoutingOperations where AAStatus='Alive'
													                                                                    AND FK_PPRoutingID in ( select FK_PPRoutingID from PPRoutingItems where AAStatus='Alive' AND FK_ICProductID=PPProductPlnItems.FK_ICProductID)
												                                                                    )
                                                                    AND PPProductPlnRoutingItems.PPProductPlnRoutingItemTypeCombo='{1}'"
                                                    , iPPProductPlnID, strProductPlnType);
            return dal.GetDataSet(strQuery);
        }

        /// <summary>
        /// Viet Nguyen 2014.05.22
        /// Xóa ProductPlnItem theo ProductPln và Level phụ thuộc
        /// </summary>
        /// <param name="iProductPlnID"></param>
        /// <param name="iFromLevel"></param>
        /// <param name="iToLevel"></param>
        public void DeleteProductPlnItemByProductPlnAndLevel(int iProductPlnID, int iFromLevel, int iToLevel)
        {
            string strQuery = string.Format(@"WITH    temp ( PPProductPlnItemID, aLevel )
                                              AS ( SELECT   PPProductPlnItemID ,
                                                            1 AS aLevel
                                                   FROM     PPProductPlnItems
                                                   WHERE    AAStatus = 'Alive'
                                                            AND FK_PPProductPlnID = {0}
                                                            AND FK_PPParentProductPlnItemID = 0
                                                   UNION ALL
                                                   SELECT   b.PPProductPlnItemID ,
                                                            a.alevel + 1
                                                   FROM     temp AS a ,
                                                            PPProductPlnItems AS b
                                                   WHERE    a.PPProductPlnItemID = b.FK_PPParentProductPlnItemID
                                                            AND b.AAStatus = 'Alive'
                                                 )
                                                 Update PPProductPlnItems set AAStatus='Delete' where PPProductPlnItemID in (
                                                 Select PPProductPlnItemID from temp WHERE aLevel>={1} AND aLevel<={2})", iProductPlnID, iFromLevel, iToLevel);
            dal.GetDataSet(strQuery);
        }

        /// <summary>
        /// Viet Nguyen 2014.05.22
        /// Get ProductPln Item theo ProductPlnID và Level
        /// </summary>
        /// <param name="iProductPlnID"></param>
        /// <param name="iFromLevel"></param>
        /// <param name="iToLevel"></param>
        public DataSet GetProductPlnItemByProductPlnAndLevel(int iProductPlnID, int iFromLevel, int iToLevel)
        {
            string strQuery = string.Format(@"WITH    temp ( PPProductPlnItemID, aLevel )
                                              AS ( SELECT   PPProductPlnItemID ,
                                                            1 AS aLevel
                                                   FROM     PPProductPlnItems
                                                   WHERE    AAStatus = 'Alive'
                                                            AND FK_PPProductPlnID = {0}
                                                            AND FK_PPParentProductPlnItemID = 0
                                                   UNION ALL
                                                   SELECT   b.PPProductPlnItemID ,
                                                            a.alevel + 1
                                                   FROM     temp AS a ,
                                                            PPProductPlnItems AS b
                                                   WHERE    a.PPProductPlnItemID = b.FK_PPParentProductPlnItemID
                                                            AND b.AAStatus = 'Alive'
                                                 )
                                                 select * from  PPProductPlnItems  where PPProductPlnItemID in (
                                                 Select PPProductPlnItemID from temp WHERE aLevel>={1} AND aLevel<={2})", iProductPlnID, iFromLevel, iToLevel);
            return dal.GetDataSet(strQuery);
        }

        /// <summary>
        /// Viet Nguyen 2014.05.22
        /// Get Max Level from ProductPln
        /// </summary>
        /// <param name="iProductPlnID"></param>
        public int GetMaxLevelFromProductPln(int iProductPlnID)
        {
            string strQuery = string.Format(@"WITH    temp ( PPProductPlnItemID, aLevel )
                                              AS ( SELECT   PPProductPlnItemID ,
                                                            1 AS aLevel
                                                   FROM     PPProductPlnItems
                                                   WHERE    AAStatus = 'Alive'
                                                            AND FK_PPProductPlnID = {0}
                                                            AND FK_PPParentProductPlnItemID = 0
                                                   UNION ALL
                                                   SELECT   b.PPProductPlnItemID ,
                                                            a.alevel + 1
                                                   FROM     temp AS a ,
                                                            PPProductPlnItems AS b
                                                   WHERE    a.PPProductPlnItemID = b.FK_PPParentProductPlnItemID
                                                            AND b.AAStatus = 'Alive'
                                                 )
                                                 SELECT MAX(aLevel) FROM temp", iProductPlnID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return Convert.ToInt32(ds.Tables[0].Rows[0][0]);
            return 0;
        }

        public DataSet GetTonKhoCongDoan_TheoDoiKHSX(int PPProductPlnID)
        {
            #region Query

            string strQuery = String.Format(@"SELECT  ICProductNo ,
                                                    ICProductName ,
                                                    PPProductPlanItemDesc ,
                                                    PPProductPlnItemFromDate ,
                                                    PPProductPlnItemToDate ,
                                                    PPProductPlnItemLastFinishDate ,
                                                    FK_ARSOID ,
                                                    ARSONo ,
                                                    ICProductLength ,
                                                    ICProductWidth ,
                                                    ICProductHeight ,
                                                    ICProductVolume ,
                                                    ICStockNo ,
        
                                                    PPProductPlnID ,
                                                    PPProductPlnNo ,
                                                   
                                                    SUM(BeginQty) AS BeginQty ,
                                                    ROUND(SUM(BeginCBM), 6) AS BeginCBM ,
                                                    ROUND(SUM(BeginTotalCost), 6) AS BeginTotalCost ,
                                                    SUM(RcpQty) AS RcpQty ,
                                                    ROUND(SUM(RcpCBM), 6) AS RcpCBM ,
                                                    ROUND(SUM(RcpTotalCost), 6) AS RcpTotalCost ,
                                                    SUM(ShpQty) AS ShpQty ,
                                                    ROUND(SUM(ShpCBM), 6) AS ShpCBM ,
                                                    ROUND(SUM(ShpTotalCost), 6) AS ShpTotalCost ,
                                                    SUM(BeginQty) + SUM(RcpQty) - SUM(ShpQty) -SUM(NCRQty) AS EndQty ,
                                                    ROUND(SUM(BeginCBM), 6) + ROUND(SUM(RcpCBM), 6) - ROUND(SUM(ShpCBM), 6) AS EndCBM ,
                                                    ROUND(SUM(BeginTotalCost), 6) + ROUND(SUM(RcpTotalCost), 6)
                                                    - ROUND(SUM(ShpTotalCost), 6) AS EndTotalCost ,
                                                    WOQty AS WOQty ,
                                                    FinishQty ,
                                                    Qty ,
                                                    PPProductPlnItemSchedStatusCombo ,
                                                    PPProductPlnItemPerfomanceStatusCombo,
                                                    PPProductPlnItemID,
                                                    SUM(NCRQty) AS NCRQty
                                            FROM    (	--Receipt           
                                                      SELECT    dbo.ICProducts.ICProductNo ,
                                                                dbo.ICProducts.ICProductName ,
                                                                dbo.PPProductPlnItems.PPProductPlanItemDesc ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemFromDate ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemToDate ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemLastFinishDate ,
                                                                dbo.PPProductPlnItems.FK_ARSOID ,
                                                                dbo.ARSOs.ARSONo ,
                                                                dbo.ICProducts.ICProductLength ,
                                                                dbo.ICProducts.ICProductWidth ,
                                                                dbo.ICProducts.ICProductHeight ,
                                                                dbo.ICProducts.ICProductMaterialCBM AS ICProductVolume ,
                                                                dbo.ICStocks.ICStockNo ,
                                                                0 AS BeginQty ,
                    
                                                                0 AS BeginCBM ,
                                                                0 AS BeginTotalCost ,
                    
                                                                dbo.PPProductPlns.PPProductPlnID ,
                                                                dbo.PPProductPlns.PPProductPlnNo ,
                                                                
                                                                SUM(dbo.ICReceiptItems.ICReceiptItemQty) AS RcpQty ,
                                                                SUM(ICReceiptItemQty * ICProducts.ICProductMaterialCBM) AS RcpCBM ,
                                                                SUM(ICReceiptItemCostTot) AS RcpTotalCost ,
                                                                0 AS ShpQty ,
                                                                0 AS ShpCBM ,
                                                                0 AS ShpTotalCost ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemWOQty AS WOQty ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemFinishQty AS FinishQty ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemQty AS Qty ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemSchedStatusCombo AS PPProductPlnItemSchedStatusCombo ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemPerfomanceStatusCombo AS PPProductPlnItemPerfomanceStatusCombo,
                                                                PPProductPlnItemID,
                                                                0 AS NCRQty
                                                      FROM      dbo.PPProductPlnItems
                                                                INNER JOIN dbo.PPProductPlns ON dbo.PPProductPlnItems.FK_PPProductPlnID = dbo.PPProductPlns.PPProductPlnID
                                                                INNER JOIN dbo.PPWOs ON dbo.PPProductPlns.PPProductPlnID = dbo.PPWOs.FK_PPProductPlnID
                                                                INNER JOIN dbo.ARSOs ON dbo.PPProductPlnItems.FK_ARSOID = dbo.ARSOs.ARSOID
                                                                                        AND dbo.PPWOs.FK_ARSOID = dbo.ARSOs.ARSOID
                                                                INNER JOIN dbo.ICReceiptItems ON dbo.PPWOs.PPWOID = dbo.ICReceiptItems.FK_PPWOID
                                                                INNER JOIN dbo.ICProducts ON dbo.PPProductPlnItems.FK_ICProductID = dbo.ICProducts.ICProductID
                                                                                             AND dbo.ICReceiptItems.FK_ICProductID = dbo.ICProducts.ICProductID
                    
                                                                INNER JOIN dbo.ICStocks ON dbo.ICReceiptItems.FK_ICStockID = dbo.ICStocks.ICStockID
                    
                                                      WHERE     ( ICProducts.AAStatus = 'Alive'
                                                                  OR ICProducts.AAStatus IS NULL
                                                                )
                                                                AND PPProductPlnItems.AAStatus = 'Alive'
                                                                AND PPProductPlns.AAStatus = 'Alive'
                                                                AND PPWOs.AAStatus = 'Alive'
                                                                AND ARSOs.AAStatus = 'Alive'
                   
                                                                AND ( ICStocks.AAStatus = 'Alive'
                                                                      OR ICStocks.AAStatus IS NULL
                                                                    )
                    
                                                                AND ( PPProductPlnItems.FK_PPProductPlnID = {0}
                                                                      OR 0 = {0}
                                                                    )
                                                                AND dbo.ICReceiptItems.AAStatus = 'Alive'
                                                                AND dbo.ICReceiptItems.FK_PPProductionOrdrID IN (
                                                                SELECT  PPProductionOrdrID
                                                                FROM    PPProductionOrdrs
                                                                WHERE   AAStatus = 'Alive' )
											

                                                      GROUP BY  ICProductNo ,
                                                                ICStockNo ,
                                                                ICProducts.ICProductName ,
                                                                ICProducts.ICProductLength ,
                                                                ICProducts.ICProductWidth ,
                                                                ICProducts.ICProductHeight ,
                                                                ICProducts.ICProductMaterialCBM ,
                    
                    
                                                                dbo.PPProductPlns.PPProductPlnID ,
                                                                dbo.PPProductPlns.PPProductPlnNo ,
                                                               
                                                                PPProductPlnItems.PPProductPlanItemDesc ,
                                                                PPProductPlnItems.PPProductPlnItemFromDate ,
                                                                PPProductPlnItems.PPProductPlnItemToDate ,
                                                                PPProductPlnItems.PPProductPlnItemLastFinishDate ,
                                                                PPProductPlnItems.PPProductPlnItemQty ,
                                                                PPProductPlnItems.PPProductPlnItemFinishQty ,
                                                                PPProductPlnItems.PPProductPlnItemWOQty ,
                                                                PPProductPlnItems.PPProductPlnItemSchedStatusCombo ,
                                                                PPProductPlnItems.PPProductPlnItemPerfomanceStatusCombo ,
                                                                PPProductPlnItems.FK_ARSOID ,
                                                                ARSOs.ARSONo,
                                                                PPProductPlnItemID
                                                      UNION ALL
		                                                                        --Transfer In
                                                      SELECT    dbo.ICProducts.ICProductNo ,
                                                                dbo.ICProducts.ICProductName ,
                                                                dbo.PPProductPlnItems.PPProductPlanItemDesc ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemFromDate ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemToDate ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemLastFinishDate ,
                                                                dbo.PPProductPlnItems.FK_ARSOID ,
                                                                dbo.ARSOs.ARSONo ,
                                                                dbo.ICProducts.ICProductLength ,
                                                                dbo.ICProducts.ICProductWidth ,
                                                                dbo.ICProducts.ICProductHeight ,
                                                                dbo.ICProducts.ICProductMaterialCBM AS ICProductVolume ,
                                                                dbo.ICStocks.ICStockNo ,
                                                                0 AS BeginQty ,
                    
                                                                0 AS BeginCBM ,
                                                                0 AS BeginTotalCost ,
                    
                                                                dbo.PPProductPlns.PPProductPlnID ,
                                                                dbo.PPProductPlns.PPProductPlnNo ,
                                                                
                                                                SUM(dbo.ICTransferItems.ICTransferItemQty) AS RcpQty ,
                                                                SUM(ICTransferItemQty * ICProducts.ICProductMaterialCBM) AS RcpCBM ,
                                                                SUM(ICTransferItemCostTot) AS RcpTotalCost ,
                                                                0 AS ShpQty ,
                                                                0 AS ShpCBM ,
                                                                0 AS ShpTotalCost ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemWOQty AS WOQty ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemFinishQty AS FinishQty ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemQty AS Qty ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemSchedStatusCombo AS PPProductPlnItemSchedStatusCombo ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemPerfomanceStatusCombo AS PPProductPlnItemPerfomanceStatusCombo,
                                                                PPProductPlnItemID,
                                                                0 AS NCRQty
                                                      FROM      dbo.PPProductPlnItems
                                                                INNER JOIN dbo.PPProductPlns ON dbo.PPProductPlnItems.FK_PPProductPlnID = dbo.PPProductPlns.PPProductPlnID
                                                                INNER JOIN dbo.PPWOs ON dbo.PPProductPlns.PPProductPlnID = dbo.PPWOs.FK_PPProductPlnID
                                                                INNER JOIN dbo.ARSOs ON dbo.PPProductPlnItems.FK_ARSOID = dbo.ARSOs.ARSOID
                                                                                        AND dbo.PPWOs.FK_ARSOID = dbo.ARSOs.ARSOID
                                                                INNER JOIN dbo.ICTransferItems ON dbo.PPWOs.PPWOID = dbo.ICTransferItems.FK_PPWOID
                                                                INNER JOIN dbo.ICProducts ON dbo.PPProductPlnItems.FK_ICProductID = dbo.ICProducts.ICProductID
                                                                                             AND dbo.ICTransferItems.FK_ICProductID = dbo.ICProducts.ICProductID
                    
                                                                INNER JOIN dbo.ICStocks ON dbo.ICTransferItems.FK_ICToStockID = dbo.ICStocks.ICStockID
                    
                                                      WHERE     ( ICProducts.AAStatus = 'Alive'
                                                                  OR ICProducts.AAStatus IS NULL
                                                                )
                                                                AND PPProductPlnItems.AAStatus = 'Alive'
                                                                AND PPProductPlns.AAStatus = 'Alive'
                                                                AND PPWOs.AAStatus = 'Alive'
                                                                AND ARSOs.AAStatus = 'Alive'
                   
                                                                AND ( ICStocks.AAStatus = 'Alive'
                                                                      OR ICStocks.AAStatus IS NULL
                                                                    )
                    
                                                                AND dbo.ICTransferItems.AAStatus = 'Alive'
                                                                AND dbo.ICTransferItems.FK_ICTransferID IN (
                                                                SELECT  ICTransferID
                                                                FROM    ICTransfers
                                                                WHERE   AAStatus = 'Alive' )
                                                                AND ( PPProductPlnItems.FK_PPProductPlnID = {0}
                                                                      OR 0 = {0}
                                                                    )
											

                                                      GROUP BY  ICProductNo ,
                                                                ICStockNo ,
                                                                ICProductName ,
                                                                ICProductLength ,
                                                                ICProductWidth ,
                                                                ICProductHeight ,
                                                                ICProductMaterialCBM ,
                    
                    
                                                                dbo.PPProductPlns.PPProductPlnID ,
                                                                dbo.PPProductPlns.PPProductPlnNo ,
                                                               
                                                                PPProductPlnItems.PPProductPlanItemDesc ,
                                                                PPProductPlnItems.PPProductPlnItemFromDate ,
                                                                PPProductPlnItems.PPProductPlnItemToDate ,
                                                                PPProductPlnItems.PPProductPlnItemLastFinishDate ,
                                                                PPProductPlnItems.PPProductPlnItemQty ,
                                                                PPProductPlnItems.PPProductPlnItemFinishQty ,
                                                                PPProductPlnItems.PPProductPlnItemWOQty ,
                                                                PPProductPlnItems.PPProductPlnItemSchedStatusCombo ,
                                                                PPProductPlnItems.PPProductPlnItemPerfomanceStatusCombo ,
                                                                PPProductPlnItems.FK_ARSOID ,
                                                                ARSOs.ARSONo,
                                                                PPProductPlnItemID      
                                                                            -- Xuat trong ky
                                                      UNION ALL
                                                      SELECT    dbo.ICProducts.ICProductNo ,
                                                                dbo.ICProducts.ICProductName ,
                                                                dbo.PPProductPlnItems.PPProductPlanItemDesc ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemFromDate ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemToDate ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemLastFinishDate ,
                                                                dbo.PPProductPlnItems.FK_ARSOID ,
                                                                dbo.ARSOs.ARSONo ,
                                                                dbo.ICProducts.ICProductLength ,
                                                                dbo.ICProducts.ICProductWidth ,
                                                                dbo.ICProducts.ICProductHeight ,
                                                                dbo.ICProducts.ICProductMaterialCBM AS ICProductVolume ,
                                                                dbo.ICStocks.ICStockNo ,
                                                                0 AS BeginQty ,
                    
                                                                0 AS BeginCBM ,
                                                                0 AS BeginTotalCost ,
                    
                                                                dbo.PPProductPlns.PPProductPlnID ,
                                                                dbo.PPProductPlns.PPProductPlnNo ,
                                                                
                                                                0 AS RcpQty ,
                                                                0 AS RcpCBM ,
                                                                0 AS ShpCBM ,
                                                                SUM(dbo.ICShipmentItems.ICShipmentItemQty) AS ShpQty ,
                                                                SUM(ICShipmentItemQty * ICProducts.ICProductMaterialCBM) AS ShpTotalCost ,
                                                                SUM(ICShipmentItemCostTot) AS RcpTotalCost ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemWOQty AS WOQty ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemFinishQty AS FinishQty ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemQty AS Qty ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemSchedStatusCombo AS PPProductPlnItemSchedStatusCombo ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemPerfomanceStatusCombo AS PPProductPlnItemPerfomanceStatusCombo,
                                                                PPProductPlnItemID,
                                                                0 AS NCRQty
                                                      FROM      dbo.PPProductPlnItems
                                                                INNER JOIN dbo.PPProductPlns ON dbo.PPProductPlnItems.FK_PPProductPlnID = dbo.PPProductPlns.PPProductPlnID
                                                                INNER JOIN dbo.PPWOs ON dbo.PPProductPlns.PPProductPlnID = dbo.PPWOs.FK_PPProductPlnID
                                                                INNER JOIN dbo.ARSOs ON dbo.PPProductPlnItems.FK_ARSOID = dbo.ARSOs.ARSOID
                                                                                        AND dbo.PPWOs.FK_ARSOID = dbo.ARSOs.ARSOID
                                                                INNER JOIN dbo.ICShipmentItems ON dbo.PPWOs.PPWOID = dbo.ICShipmentItems.FK_PPWOID
                                                                INNER JOIN dbo.ICProducts ON dbo.PPProductPlnItems.FK_ICProductID = dbo.ICProducts.ICProductID
                                                                                             AND dbo.ICShipmentItems.FK_ICProductID = dbo.ICProducts.ICProductID
                    
                                                                INNER JOIN dbo.ICStocks ON dbo.ICShipmentItems.FK_ICStockID = dbo.ICStocks.ICStockID
                    
                                                      WHERE     ( ICProducts.AAStatus = 'Alive'
                                                                  OR ICProducts.AAStatus IS NULL
                                                                )
                                                                AND PPProductPlnItems.AAStatus = 'Alive'
                                                                AND PPProductPlns.AAStatus = 'Alive'
                                                                AND PPWOs.AAStatus = 'Alive'
                                                                AND ARSOs.AAStatus = 'Alive'
                   
                                                                AND ( ICStocks.AAStatus = 'Alive'
                                                                      OR ICStocks.AAStatus IS NULL
                                                                    )
                    
                                                                AND dbo.ICShipmentItems.AAStatus = 'Alive'
                                                                AND dbo.ICShipmentItems.FK_PPProductionOrdrID IN (
                                                                SELECT  PPProductionOrdrID
                                                                FROM    PPProductionOrdrs
                                                                WHERE   AAStatus = 'Alive' )
                                                                AND ( PPProductPlnItems.FK_PPProductPlnID = {0}
                                                                      OR 0 = {0}
                                                                    )
											

                                                      GROUP BY  ICProductNo ,
                                                                ICStockNo ,
                                                                ICProductName ,
                                                                ICProductLength ,
                                                                ICProductWidth ,
                                                                ICProductHeight ,
                                                                ICProductMaterialCBM ,
                    
                    
                                                                dbo.PPProductPlns.PPProductPlnID ,
                                                                dbo.PPProductPlns.PPProductPlnNo ,
                                                               
                                                                PPProductPlnItems.PPProductPlanItemDesc ,
                                                                PPProductPlnItems.PPProductPlnItemFromDate ,
                                                                PPProductPlnItems.PPProductPlnItemToDate ,
                                                                PPProductPlnItems.PPProductPlnItemLastFinishDate ,
                                                                PPProductPlnItems.PPProductPlnItemQty ,
                                                                PPProductPlnItems.PPProductPlnItemFinishQty ,
                                                                PPProductPlnItems.PPProductPlnItemWOQty ,
                                                                PPProductPlnItems.PPProductPlnItemSchedStatusCombo ,
                                                                PPProductPlnItems.PPProductPlnItemPerfomanceStatusCombo ,
                                                                PPProductPlnItems.FK_ARSOID ,
                                                                ARSOs.ARSONo,
                                                                PPProductPlnItemID
                                                      UNION ALL
                                                                        -- Transfer Out
                                                      SELECT    dbo.ICProducts.ICProductNo ,
                                                                dbo.ICProducts.ICProductName ,
                                                                dbo.PPProductPlnItems.PPProductPlanItemDesc ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemFromDate ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemToDate ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemLastFinishDate ,
                                                                dbo.PPProductPlnItems.FK_ARSOID ,
                                                                dbo.ARSOs.ARSONo ,
                                                                dbo.ICProducts.ICProductLength ,
                                                                dbo.ICProducts.ICProductWidth ,
                                                                dbo.ICProducts.ICProductHeight ,
                                                                dbo.ICProducts.ICProductMaterialCBM AS ICProductVolume ,
                                                                dbo.ICStocks.ICStockNo ,
                                                                0 AS BeginQty ,
                    
                                                                0 AS BeginCBM ,
                                                                0 AS BeginTotalCost ,
                    
                                                                dbo.PPProductPlns.PPProductPlnID ,
                                                                dbo.PPProductPlns.PPProductPlnNo ,
                                                                
                                                                0 AS RcpQty ,
                                                                0 AS RcpCBM ,
                                                                0 AS RcpTotalCost ,
                                                                SUM(ICTransferItemQty) AS ShpQty ,
                                                                SUM(ICTransferItemQty * ICProductMaterialCBM) AS ShpCBM ,
                                                                SUM(ICTransferItemCostTot) AS ShpTotalCost ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemWOQty AS WOQty ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemFinishQty AS FinishQty ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemQty AS Qty ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemSchedStatusCombo AS PPProductPlnItemSchedStatusCombo ,
                                                                dbo.PPProductPlnItems.PPProductPlnItemPerfomanceStatusCombo AS PPProductPlnItemPerfomanceStatusCombo,
                                                                PPProductPlnItemID,
                                                                0 AS NCRQty
                                                      FROM      dbo.PPProductPlnItems
                                                                INNER JOIN dbo.PPProductPlns ON dbo.PPProductPlnItems.FK_PPProductPlnID = dbo.PPProductPlns.PPProductPlnID
                                                                INNER JOIN dbo.PPWOs ON dbo.PPProductPlns.PPProductPlnID = dbo.PPWOs.FK_PPProductPlnID
                                                                INNER JOIN dbo.ARSOs ON dbo.PPProductPlnItems.FK_ARSOID = dbo.ARSOs.ARSOID
                                                                                        AND dbo.PPWOs.FK_ARSOID = dbo.ARSOs.ARSOID
                                                                INNER JOIN dbo.ICTransferItems ON dbo.PPWOs.PPWOID = dbo.ICTransferItems.FK_PPWOID
                                                                INNER JOIN dbo.ICProducts ON dbo.PPProductPlnItems.FK_ICProductID = dbo.ICProducts.ICProductID
                                                                                             AND dbo.ICTransferItems.FK_ICProductID = dbo.ICProducts.ICProductID
                    
                                                                INNER JOIN dbo.ICStocks ON dbo.ICStocks.ICStockID = ICTransferItems.FK_ICFromStockID
                    
                                                      WHERE     ( ICProducts.AAStatus = 'Alive'
                                                                  OR ICProducts.AAStatus IS NULL
                                                                )
                                                                AND PPProductPlnItems.AAStatus = 'Alive'
                                                                AND PPProductPlns.AAStatus = 'Alive'
                                                                AND PPWOs.AAStatus = 'Alive'
                                                                AND ARSOs.AAStatus = 'Alive'
                   
                                                                AND ( ICStocks.AAStatus = 'Alive'
                                                                      OR ICStocks.AAStatus IS NULL
                                                                    )
                    
                                                                AND dbo.ICTransferItems.AAStatus = 'Alive'
                                                                AND dbo.ICTransferItems.FK_ICTransferID IN (
                                                                SELECT  ICTransferID
                                                                FROM    ICTransfers
                                                                WHERE   AAStatus = 'Alive' )
                                                                AND ( PPProductPlnItems.FK_PPProductPlnID = {0}
                                                                      OR 0 = {0}
                                                                    )
											

                                                      GROUP BY  ICProductNo ,
                                                                ICStockNo ,
                                                                ICProductName ,
                                                                ICProductLength ,
                                                                ICProductWidth ,
                                                                ICProductHeight ,
                                                                ICProductMaterialCBM ,
                    
                    
                                                                dbo.PPProductPlns.PPProductPlnID ,
                                                                dbo.PPProductPlns.PPProductPlnNo ,
                                                               
                                                                PPProductPlnItems.PPProductPlanItemDesc ,
                                                                PPProductPlnItems.PPProductPlnItemFromDate ,
                                                                PPProductPlnItems.PPProductPlnItemToDate ,
                                                                PPProductPlnItems.PPProductPlnItemLastFinishDate ,
                                                                PPProductPlnItems.PPProductPlnItemQty ,
                                                                PPProductPlnItems.PPProductPlnItemFinishQty ,
                                                                PPProductPlnItems.PPProductPlnItemWOQty ,
                                                                PPProductPlnItems.PPProductPlnItemSchedStatusCombo ,
                                                                PPProductPlnItems.PPProductPlnItemPerfomanceStatusCombo ,
                                                                PPProductPlnItems.FK_ARSOID ,
                                                                ARSOs.ARSONo,
                                                                PPProductPlnItemID
                                                    ) AS ABC
                                            GROUP BY ICProductNo ,
                                                    ICProductName ,
                                                    ICProductLength ,
                                                    ICProductWidth ,
                                                    ICProductHeight ,
                                                    ICProductVolume ,
                                                    ICStockNo ,
        
                                                    PPProductPlnID ,
                                                   
                                                    PPProductPlanItemDesc ,
                                                    PPProductPlnItemFromDate ,
                                                    PPProductPlnItemToDate ,
                                                    PPProductPlnItemLastFinishDate ,
                                                    Qty ,
                                                    FinishQty ,
                                                    WOQty ,
                                                    PPProductPlnItemSchedStatusCombo ,
                                                    PPProductPlnItemPerfomanceStatusCombo ,
                                                    FK_ARSOID ,
                                                    ARSONo ,
                                                    PPProductPlnNo,
                                                    PPProductPlnItemID
                                             HAVING SUM(BeginQty) + SUM(RcpQty) - SUM(ShpQty)<>0
                                            ORDER BY ICProductNo ,
                                                    ARSONo ,
                                                    ICStockNo", PPProductPlnID);
            #endregion

            return GetDataSet(strQuery);
        }

        /// <summary>
        /// Viet Nguyen 2014.10.30
        /// Get Qty By ARShpPlanItem
        /// </summary>
        public double GetQtyInProductPlnByARShpPlanItem(int iARShpPlanItemID)
        {
            string strQuery = string.Format(@"Select SUM(PPProductPlnItemQty) from PPProductPlnItems where AAStatus='Alive' AND FK_ARShpPlanItemID={0}", iARShpPlanItemID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                try
                {
                    return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
                }
                catch (System.Exception ex)
                {

                }
            }
            return 0;
        }

        /// <summary>
        /// Viet Nguyen 2014.10.30
        /// Get Qty By ARSOItemID
        /// </summary>
        public double GetQtyInProductPlnByARSOItem(int iARSOItemID)
        {
            string strQuery = string.Format(@"Select SUM(PPProductPlnItemQty) from PPProductPlnItems where AAStatus='Alive' AND FK_ARShpPlanItemID
                                                in (select ARShpPlanItemID from ARShpPlanItems where AAStatus='Alive' AND FK_ARSOItemID={0})", iARSOItemID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                try
                {
                    return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
                }
                catch (System.Exception ex)
                {

                }
            }
            return 0;
        }
    }
	#endregion
}