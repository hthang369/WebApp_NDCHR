using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
    #region PPCostingNormRMs
    //-----------------------------------------------------------
    //Generated By: GMC Studio
    //Class:PPCostingNormRMsController
    //Created Date:Tuesday, September 20, 2016
    //-----------------------------------------------------------

    public class PPCostingNormRMsController : BaseBusinessController
    {
        public PPCostingNormRMsController()
        {
            dal = new DALBaseProvider("PPCostingNormRMs", typeof(PPCostingNormRMsInfo));
        }
        public DataSet GetAllDataMeterial()
        {
            //Lấy ds NVL hoặc bán thành phẩm
            string strQuery = string.Format(@"SELECT  *
                                            FROM    dbo.ICProducts
                                            WHERE   ICProductID IN (
                                                    SELECT  FK_ICProductID
                                                    FROM    dbo.PPCostingNormRMs
                                                    WHERE   AAStatus = 'Alive'
                                                            AND PPCostingNormRMIsMajorMaterial = 0
                                                            AND FK_ICProductID NOT IN (
                                                                                        SELECT  FK_ICProductID
                                                                                        FROM    dbo.PPCostingNorms
                                                                                        WHERE   AAStatus = 'Alive') )
                                    ");
            return GetDataSet(strQuery);
        }
        public DataSet GetAllData_CostingNormActiveAndDateActive(DateTime dt)
        {
            string strQuery = string.Format(@"
                                    SELECT * FROM dbo.PPCostingNormRMs
                                    WHERE FK_PPCostingNormID = (

                                    SELECT TOP 1 PPCostingNormID
                                    FROM    dbo.PPCostingNorms
                                    WHERE   AAStatus = 'Alive'
                                            AND PPCostingNormActiveCheck = 1
                                            AND '{0}' BETWEEN CONVERT(VARCHAR(20), PPCostingNormApplyFromDate, 112)
                                                      AND     CONVERT(VARCHAR(20), PPCostingNormApplyToDate, 112)
                                    ORDER BY PPCostingNormApplyToDate ASC ,
                                            PPCostingNormID DESC 
		                                    )
                                            ",dt.ToString("yyyyMMdd"));
            return GetDataSet(strQuery);
        }

        public DataSet GetAllData_ByProductAndPeriod(int iICProductID, int pCostingNormID)
        {
            string strQuery = string.Format(@"
                                            SELECT  *
                                            FROM    dbo.PPCostingNormRMs
                                            WHERE   FK_PPCostingNormProductID IN (
								                                            SELECT  PPCostingNormProductID
								                                            FROM    dbo.PPCostingNormProducts
								                                            WHERE   FK_PPCostingNormID = ( SELECT   PPCostingNormID
															                                               FROM     dbo.PPCostingNorms
															                                               WHERE    AAStatus = 'Alive'
																		                                            AND PPCostingNormID = '{1}'
															                                             )
										                                            AND PPCostingNormProductActiveCheck = 1
										                                            AND FK_ICProductID = '{0}'
										                                            AND AAStatus = 'Alive' )
                                            ", iICProductID,pCostingNormID);
            return GetDataSet(strQuery);
        }

        public DataSet GetAllProductByIsMajorMaterial(bool pMajorMaterialCheck)
        {
            string strQuery = string.Format(@"
                                            SELECT  FK_ICProductID
                                            FROM    dbo.PPCostingNormRMs
                                            WHERE   FK_PPCostingNormProductID IN (
                                                    SELECT  PPCostingNormProductID
                                                    FROM    dbo.PPCostingNormProducts
                                                    WHERE   FK_PPCostingNormID IN ( SELECT  PPCostingNormID
                                                                                    FROM    dbo.PPCostingNorms
                                                                                    WHERE   AAStatus = 'Alive' )
                                                            AND AAStatus = 'Alive' )
                                                    AND AAStatus = 'Alive'
                                                    AND PPCostingNormRMIsMajorMaterial = '{0}'
                                            ", pMajorMaterialCheck);
            return GetDataSet(strQuery);
        }

        public DataSet GetAllDataByArrayPPCostingNormProductID(string[] arrPPCostingNormProductID)
        {
            string strQuery = string.Format(@"
                                            SELECT  *
                                            FROM    dbo.PPCostingNormRMs
                                            WHERE   FK_PPCostingNormProductID IN ({0})
                                                    AND AAStatus = 'Alive'
                                            ", string.Join(",",arrPPCostingNormProductID)
                                            );
            return GetDataSet(strQuery);
        }

        public DataSet GetAllDataByArrayPPNormID(string[] arrPPNormID)
        {
            string strSubQuery = DALUtil.GenerateColumnsFromTable("PPNormRMs", dal.TableName);
            string strQuery = string.Format(@"{0}
                            DECLARE @sql NVARCHAR(MAX)
                            SET @sql = 'SELECT ' + @column + ' FROM {1} WHERE FK_PPNormID IN({2}) AND AAStatus =  ''Alive'''
                            EXEC sp_executesql @sql", strSubQuery, "PPNormRMs", string.Join(",",arrPPNormID));
            return GetDataSet(strQuery);
        }

        public void UpdateAAStatusByCostingNormProduct(string[] arrPPCostingNormProductID,string pAAStatus)
        {
            string strQuery = string.Format(@"
                                            UPDATE dbo.PPCostingNormRMs
                                            SET AAStatus='{1}'
                                            WHERE FK_PPCostingNormProductID IN ({0})                                                
                                            ",string.Join(",",arrPPCostingNormProductID), pAAStatus);
            GetDataSet(strQuery);
        }
    }
    #endregion
}