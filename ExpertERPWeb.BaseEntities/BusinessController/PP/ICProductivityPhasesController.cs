using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region ICProductivityPhases
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:ICProductivityPhasesController
	//Created Date:12 Tháng Mười Hai 2012
	//-----------------------------------------------------------
	
	public class ICProductivityPhasesController:BaseBusinessController
	{
		public ICProductivityPhasesController()
		{
			dal= new DALBaseProvider("ICProductivityPhases",typeof(ICProductivityPhasesInfo));
		}

        public double GetRateByPhaseCfgAndProduct(object iProductID, int iPhaseCfgID)
        {
            string strQuery = String.Format(@"SELECT ICProductivityPhaseRate FROM ICProductivityPhases WHERE AAStatus='Alive' AND FK_ICProductID={0} AND FK_PPPhaseCfgID={1}", iProductID, iPhaseCfgID);
            DataSet ds = GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            return 0;
        }
        public ICProductivityPhasesInfo GetProductivityByPhaseCfgAndProduct(int iProductID, int iPhaseCfgID)
        {
            string strQuery = String.Format(@"SELECT * FROM ICProductivityPhases WHERE AAStatus='Alive' AND FK_PPPhaseCfgID={1}
                                                      AND FK_ICProductID ={0}", iProductID, iPhaseCfgID);
            DataSet ds = GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return (ICProductivityPhasesInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            return null;
        }
    }
	#endregion
}