using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region PPRoutingOperations

	//-----------------------------------------------------------
	//Generated By: Expert Studio
	//Class:PPRoutingOperationsController
	//Created Date:18 Tháng Sáu 2013
	//-----------------------------------------------------------
	
	public class PPRoutingOperationsController:BaseBusinessController
	{
		public PPRoutingOperationsController()
		{
			dal= new DALBaseProvider("PPRoutingOperations",typeof(PPRoutingOperationsInfo));
		}
        public DataSet GetAllObjectByProductID(int iICProductID, String strNormRevision = "")
        {
            string strQuery = string.Format(@"  SELECT * FROM dbo.PPRoutingOperations
                                                WHERE AAStatus = 'Alive'
                                                AND FK_PPRoutingID IN (
						                                                SELECT TOP 1 FK_PPRoutingID FROM dbo.PPRoutingItems
						                                                WHERE AAStatus = 'Alive'
						                                                AND FK_ICProductID = {0}
						                                                AND FK_PPRoutingID IN (
												                                                SELECT PPRoutingID FROM dbo.PPRoutings
												                                                WHERE AAStatus = 'Alive'
                                                                                                AND PPRoutingNormRevision LIKE '{1}%'
												                                                )
						                                                )"
                                        , iICProductID, strNormRevision);
            return dal.GetDataSet(strQuery);
        }

        #region Lấy RoutingOperation đầu tiên tìm thấy theo công đoạn --Vinh -- 19/08/2013

        public PPRoutingOperationsInfo GetFirstObjByPhaseCfg(int iPhaseCfgID, int iProductID)
        {
            String str = String.Format(@"   SELECT TOP 1 * FROM dbo.PPRoutingOperations
                                            WHERE AAStatus = 'Alive'
                                            AND FK_PPRoutingID IN (SELECT PPRoutingID FROM dbo.PPRoutings WHERE AAStatus = 'Alive')
                                            AND FK_PPPhaseCfgID = {0}
                                            AND FK_PPRoutingID IN (SELECT FK_PPRoutingID FROM dbo.PPRoutingItems WHERE AAStatus = 'Alive' AND FK_ICProductID = {1})", iPhaseCfgID, iProductID);
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return (PPRoutingOperationsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }

        #endregion

        /// <summary>
        /// Viet Nguyen 2013.05.27
        /// Lấy danh sách kho theo công đoạn của các sản phẩm trong KHSX
        /// </summary>
        /// <param name="iProductPlnID"></param>
        /// <returns></returns>
        public DataSet GetAllStockByProductPln(int iProductPlnID)
        {
            //Đệ quy để lấy được KHSX Item theo level.
            //Inner Join RoutingOperation để lấy kho công đoạn
            //Sort By Level.
            string strQuery = string.Format(@"WITH    temp ( PPProductPlnItemID, aLevel,FK_PPRoutingID )
                                              AS ( SELECT   PPProductPlnItemID ,
                                                            1 AS aLevel,FK_PPRoutingID
                                                   FROM     PPProductPlnItems
                                                   WHERE    AAStatus = 'Alive'
                                                            AND FK_PPProductPlnID = {0}
                                                            AND FK_PPParentProductPlnItemID = 0
                                                   UNION ALL
                                                   SELECT   b.PPProductPlnItemID ,
                                                            a.alevel + 1,b.FK_PPRoutingID
                                                   FROM     temp AS a ,
                                                            PPProductPlnItems AS b
                                                   WHERE    a.PPProductPlnItemID = b.FK_PPParentProductPlnItemID
                                                            AND b.AAStatus = 'Alive'
                                                 )
                                                 SELECT DISTINCT FK_ICToStockID,PlnItemByLevel.aLevel,FK_PPPhaseCfgID FROM (SELECT * FROM temp) AS PlnItemByLevel
                                                 INNER JOIN dbo.PPRoutingOperations ON PlnItemByLevel.FK_PPRoutingID = dbo.PPRoutingOperations.FK_PPRoutingID
                                                 ORDER BY PlnItemByLevel.aLevel DESC", iProductPlnID);
            return dal.GetDataSet(strQuery);
        }

        public int GetPrePhaseCfgByRoutingProduct(int iRoutingID, int iProductID)
        {
            string strQuery = string.Format(@"SELECT FK_PPPhaseCfgID FROM PPRoutingOperations WHERE FK_PPRoutingID={0} AND PPRoutingOperationID < (
                                                SELECT TOP 1 PPRoutingOperationID FROM PPRoutingOperations WHERE FK_PPRoutingID={0} AND FK_ICProductID={1})
                                                ORDER BY PPRoutingOperationID DESC", iRoutingID, iProductID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return Convert.ToInt32(ds.Tables[0].Rows[0][0]);
            return 0;
        }
        /// <summary>
        /// NhamNDH add -21/12/2106- Lấy Obj Max ID theo Routing và Product
        /// </summary>
        /// <param name="iRoutingID"></param>
        /// <param name="iProductID"></param>
        /// <returns></returns>
        public object GetObjectByRoutingAndProduct(int iRoutingID, int iProductID)
        {
            string strQuery = string.Format(@"  SELECT  TOP 1 *
                                                FROM dbo.PPRoutingOperations
                                                INNER JOIN dbo.PPRoutings ON PPRoutings.PPRoutingID = PPRoutingOperations.FK_PPRoutingID AND PPRoutings.AAStatus='Alive'
                                                WHERE	PPRoutingOperations.AAStatus='ALive'
		                                                AND FK_PPRoutingID = {0} AND FK_ICProductID = {1}
                                                ORDER BY PPRoutingOperationID DESC"
                                            , iRoutingID, iProductID);

            DataSet ds = GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 )
                return GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            return null;
        }

        #region Lấy RoutingOperation kế tiếp theo RoutingOperation --Vinh -- 15/07/2014

        public PPRoutingOperationsInfo GetFirstObjNextByRoutingANDRoutingOperation(int iPPRoutingID, int iPPRoutingOperationID)
        {
            String str = String.Format(@"   SELECT TOP 1 * FROM dbo.PPRoutingOperations
                                            WHERE AAStatus = 'Alive'
                                            AND FK_PPRoutingID = {0}
                                            AND PPRoutingOperationID > {1}
                                            ORDER BY PPRoutingOperationID ASC", iPPRoutingID, iPPRoutingOperationID);
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return (PPRoutingOperationsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }

        #endregion

        #region Lấy tổng thời gian làm cho quy trình trong tất cả các công đoạn

        public double LayTongThoiGianLamViecTrongQuiTrinh(int iPPRoutingID)
        {
            String str = String.Format(@"SELECT SUM(RoutingOperation.PPRoutingOperationQueueTimeAfter) FROM dbo.PPRoutingOperations RoutingOperation
                                        INNER JOIN dbo.PPRoutings Routing ON Routing.PPRoutingID = RoutingOperation.FK_PPRoutingID
                                        WHERE Routing.AAStatus = 'Alive' AND RoutingOperation.AAStatus = 'Alive'
                                        AND Routing.PPRoutingID = {0}", iPPRoutingID);
             DataSet ds = dal.GetDataSet(str);
             if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
             {
                 return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
             }

            return 0;
        }

        #endregion

        public int GetFinishStockByRoutingID(int iRoutingID)
        {
            string strQuery = string.Format(@"Select top 1 * from PPRoutingOperations where AAStatus='Alive' AND FK_PPRoutingID={0}", iRoutingID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                PPRoutingOperationsInfo RoutingOperation = (PPRoutingOperationsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                return RoutingOperation.FK_ICToStockID;
            }
            return 0;
        }

        #region Lấy tất cả PPRoutingOperations theo Khách hàng và sản phẩm --Vinh

        public DataSet GetAllDataByCustomerANDProduct(int iARCustomerID, int iICProductID)
        {
            String str = String.Format(@"   SELECT * FROM dbo.PPRoutingOperations
                                            WHERE AAStatus = 'Alive'
                                            AND FK_PPRoutingID IN (
							                                            SELECT PPRoutingID FROM dbo.PPRoutings
							                                            WHERE AAStatus = 'Alive'
							                                            AND FK_ARCustomerID = {0}
						                                            )
                                            AND FK_ICProductID = {1}
                                        ", iARCustomerID, iICProductID);

            return dal.GetDataSet(str);
        }

        #endregion

        #region Lấy tất cả PPRoutingOperations theo Routing --Vinh

        public DataSet GetAllDataByPPRoutingID(int iPPRoutingID)
        {
            String str = String.Format(@"   SELECT * FROM dbo.PPRoutingOperations
                                            WHERE AAStatus = 'Alive'
                                            AND FK_PPRoutingID IN (
							                                            SELECT PPRoutingID FROM dbo.PPRoutings
							                                            WHERE AAStatus = 'Alive'
							                                            AND PPRoutingID = {0}
						                                            )
                                            ORDER BY PPRoutingOperationSortOrder ASC
                                        ", iPPRoutingID);

            return dal.GetDataSet(str);
        }        
        #endregion
        public PPRoutingOperationsInfo GetFirstObjectByRoutingID(int iRoutingID)
        {
            string strQuery = string.Format(@"
                                                SELECT PPRoutingOperations.*
                                                FROM dbo.PPRoutingOperations
                                                INNER JOIN dbo.PPRoutings ON PPRoutings.PPRoutingID = PPRoutingOperations.FK_PPRoutingID
								                                                AND PPRoutingOperations.AAStatus = 'Alive'
                                                WHERE PPRoutingOperations.AAStatus = 'Alive'
		                                                AND PPRoutingOperations.FK_PPRoutingID = {0}
                                                ORDER BY PPRoutingOperations.PPRoutingOperationSortOrder ASC
                                            ", iRoutingID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return (PPRoutingOperationsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }

            return null;
        }
        public PPRoutingOperationsInfo GetLastObjectByRoutingID(int iRoutingID, int iPPPhaseCfgID)
        {
            string strQuery = string.Format(@"
                                                SELECT PPRoutingOperations.*
                                                FROM dbo.PPRoutingOperations
                                                INNER JOIN dbo.PPRoutings ON PPRoutings.PPRoutingID = PPRoutingOperations.FK_PPRoutingID
								                                                AND PPRoutingOperations.AAStatus = 'Alive'
                                                WHERE PPRoutingOperations.AAStatus = 'Alive'
		                                                AND PPRoutingOperations.FK_PPRoutingID = {0}
                                                        AND (PPRoutingOperations.FK_PPPhaseCfgID = {1} OR 0 = {1})
                                                ORDER BY PPRoutingOperations.PPRoutingOperationSortOrder ASC
                                            ", iRoutingID, iPPPhaseCfgID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return (PPRoutingOperationsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }

            return null;
        }
        public PPRoutingOperationsInfo GetNextObjectByRoutingIDAndPhase(int iRoutingID, int iPPPhaseCfgID)
        {
            string strQuery = string.Format(@"
                                                SELECT PPRoutingOperations.*
                                                FROM dbo.PPRoutingOperations
                                                INNER JOIN dbo.PPRoutings ON PPRoutings.PPRoutingID = PPRoutingOperations.FK_PPRoutingID
								                                                AND PPRoutingOperations.AAStatus = 'Alive'
                                                WHERE PPRoutingOperations.AAStatus = 'Alive'
                                                        AND PPRoutingOperations.FK_PPRoutingID = {0}
		                                                AND PPRoutingOperations.PPRoutingOperationSortOrder > (SELECT PPRoutingOperations.PPRoutingOperationSortOrder
																                                                FROM dbo.PPRoutingOperations
																                                                INNER JOIN dbo.PPRoutings ON PPRoutings.PPRoutingID = PPRoutingOperations.FK_PPRoutingID
																								                                                AND PPRoutingOperations.AAStatus = 'Alive'
																                                                WHERE PPRoutingOperations.AAStatus = 'Alive'
																		                                                AND PPRoutingOperations.FK_PPRoutingID = {0}
																		                                                AND (PPRoutingOperations.FK_PPPhaseCfgID = {1}))
                                                ORDER BY PPRoutingOperations.PPRoutingOperationSortOrder ASC
                                            ", iRoutingID, iPPPhaseCfgID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return (PPRoutingOperationsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }

            return null;
        }
    }

	#endregion
}