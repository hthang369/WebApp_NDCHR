using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region PPProductionOrdrs
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:PPProductionOrdrsController
	//Created Date:Saturday, November 17, 2012
	//-----------------------------------------------------------
	
	public class PPProductionOrdrsController:BaseBusinessController
	{
		public PPProductionOrdrsController()
		{
			dal= new DALBaseProvider("PPProductionOrdrs",typeof(PPProductionOrdrsInfo));
		}
        public PPProductionOrdrsInfo GetLastObject()
        {
            string strQuery = string.Format(@"Select * from PPProductionOrdrs where AAStatus='Alive'
                                            Order by PPProductionOrdrID Desc");
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (PPProductionOrdrsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            return null;
        }

        public DataSet GetAllProductionOrdrByPhase(int iPhaseCfgID, DateTime dtFrom, DateTime dtTo)
        {
            String strDateCond = DALUtil.GenerateBeetween("PPProductionOrdrDate", dtFrom, dtTo);

            string strQuery = string.Format(@"Select * from PPProductionOrdrs where AAStatus='Alive'
                                            AND {0}
                                            AND FK_PPPhaseCfgID = {1}
                                            ", strDateCond, iPhaseCfgID);

            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAllProductionOrdrByDate(DateTime dtFrom, DateTime dtTo)
        {
            String strDateCond = DALUtil.GenerateBeetween("PPProductionOrdrDate", dtFrom, dtTo);

            string strQuery = string.Format(@"Select * from PPProductionOrdrs where AAStatus='Alive'
                                            AND {0}
                                            ", strDateCond);

            return dal.GetDataSet(strQuery);
        }

        public PPProductionOrdrsInfo GetLastObjectByDateAndType(DateTime dte, string strProductionOrdrType)
        {
            string strDate = DALUtil.GennerateCondition("PPProductionOrdrDate", CompareType.Equal, dte);
            string strQuery = string.Format(@"Select top 1 * from PPProductionOrdrs where AAStatus='Alive'
                                            AND {0} AND PPProductionOrdrTypeCombo ='{1}'
                                            Order by PPProductionOrdrID Desc", strDate, strProductionOrdrType);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (PPProductionOrdrsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            return null;
        }
        /// <summary>
        /// Created by Hoang.Nguyen
        /// Created date: 2013.01.30
        /// Get Object by date and Phase
        /// </summary>
        /// <param name="date"></param>
        /// <param name="iPhaseID"></param>
        /// <returns></returns>
        public PPProductionOrdrsInfo GetObjectByDateAndPhase(DateTime date, int iPhaseID)
        {
            string strDate = DALUtil.GennerateCondition("PPProductionOrdrDate", CompareType.Equal, date);
            string strQuery = string.Format(@"Select top 1 * from PPProductionOrdrs where AAStatus='Alive'
                                            AND {0} AND FK_PPPhaseCfgID ='{1}'
                                            Order by PPProductionOrdrID Desc", strDate, iPhaseID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (PPProductionOrdrsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            return null;
        }

        public DataSet GetAllProductionOrdrShipRMFromStock(int iStockID, int iYear, int iPeriod)
        {
            String strQuery = String.Format(@"
                                            SELECT DISTINCT PPProductionOrdrs.*
                                            FROM PPProductionOrdrs, dbo.ICShipmentItems
                                            WHERE PPProductionOrdrs.AAStatus = 'Alive'
                                            AND ICShipmentItems.AAStatus = 'Alive'
                                            AND ICShipmentItems.FK_PPProductionOrdrID = PPProductionOrdrs.PPProductionOrdrID
                                            AND ICShipmentItems.FK_ICStockID = {0}
                                            AND Month(PPProductionOrdrs.PPProductionOrdrDate) = {1}
                                            AND Year(PPProductionOrdrs.PPProductionOrdrDate) = {2}", iStockID, iPeriod, iYear);

            return GetDataSet(strQuery);
        }

        public DataSet GetAllProductionOrdrRcpToStock(int iStockID, int iYear, int iPeriod)
        {
            String strQuery = String.Format(@"
                                            SELECT DISTINCT PPProductionOrdrs.*
                                            FROM PPProductionOrdrs, dbo.ICReceiptItems
                                            WHERE PPProductionOrdrs.AAStatus = 'Alive'
                                            AND ICReceiptItems.AAStatus = 'Alive'
                                            AND ICReceiptItems.FK_PPProductionOrdrID = PPProductionOrdrs.PPProductionOrdrID
                                            AND ICReceiptItems.FK_ICStockID = {0}
                                            AND Month(PPProductionOrdrs.PPProductionOrdrDate) = {1}
                                            AND Year(PPProductionOrdrs.PPProductionOrdrDate) = {2}", iStockID, iPeriod, iYear);

            return GetDataSet(strQuery);
        }

        public DataSet GetAllProductionOrdrInPeriod(int iPeriod, int iYear)
        {
            string strQuery = String.Format(@"SELECT * FROM PPProductionOrdrs
                                                WHERE AAStatus = 'Alive'
                                                AND MONTH(PPProductionOrdrDate) = {0}
                                                AND YEAR(PPProductionOrdrDate) = {1}
                                                ORDER BY PPProductionOrdrDate", iPeriod, iYear);

            return GetDataSet(strQuery);
        }

        public DataSet GetAllProductionOrdrWithCostInfor(int iPeriod, int iYear)
        {
            String strQuery = String.Format(@"SELECT 
                                                0 AS ViewProductionOrdrID,
                                                PPProductionOrdrID AS FK_PPProductionOrdrID,
                                                FK_PPPhaseCfgID AS FK_PPPhaseCfgID, 
                                                PPProductionOrdrDate AS ViewProductionOrdrDate,
                                                ViewProductionOrdrShipCostTot,
                                                ViewProductionOrdrRcpPrice,
                                                ViewProductionOrdrRcpCostTot,
                                                ViewProductionOrdrRcpPrice - ViewProductionOrdrShipCostTot AS ViewProductionOrdrPriceDiffAmt,
                                                ViewProductionOrdrRcpCostTot - ViewProductionOrdrShipCostTot AS ViewProductionOrdrCostDiffAmt
                                                FROM
                                                (
                                                    SELECT 
                                                    dbo.PPProductionOrdrs.PPProductionOrdrID,
                                                    dbo.PPProductionOrdrs.PPProductionOrdrDate,
                                                    dbo.PPProductionOrdrs.FK_PPPhaseCfgID,
                                                    (SELECT SUM(ICShipmentItems.ICShipmentItemCostTot)
	                                                    FROM dbo.ICShipmentItems	
	                                                    WHERE FK_PPProductionOrdrID = PPProductionOrdrID
	                                                    AND AAStatus = 'Alive' ) AS ViewProductionOrdrShipCostTot,
                                                    (SELECT Count(*)
	                                                    FROM dbo.ICShipmentItems
	                                                    WHERE FK_PPProductionOrdrID = PPProductionOrdrID
	                                                    AND AAStatus = 'Alive' ) AS ShipCount,
                                                    (SELECT SUM(ICReceiptItems.ICReceiptItemPrice)
	                                                    FROM dbo.ICReceiptItems	
	                                                    WHERE FK_PPProductionOrdrID = PPProductionOrdrID
	                                                    AND AAStatus = 'Alive' ) AS ViewProductionOrdrRcpPrice,
                                                    (SELECT SUM(ICReceiptItems.ICReceiptItemCostTot)
	                                                    FROM dbo.ICReceiptItems	
	                                                    WHERE FK_PPProductionOrdrID = PPProductionOrdrID
	                                                    AND AAStatus = 'Alive' ) AS ViewProductionOrdrRcpCostTot,
                                                    (SELECT Count(*)
	                                                    FROM dbo.ICReceiptItems	
	                                                    WHERE FK_PPProductionOrdrID = PPProductionOrdrID
	                                                    AND AAStatus = 'Alive' ) AS RcpCount
                                                    FROM dbo.PPProductionOrdrs
                                                    WHERE PPProductionOrdrs.AAStatus = 'Alive'
                                                    AND AAStatus = 'Alive'
                                                    AND Month(PPProductionOrdrs.PPProductionOrdrDate) = {0}
                                                    AND Year(PPProductionOrdrs.PPProductionOrdrDate) = {1}
                                                ) AS Temp
                                            ", iPeriod, iYear);

            return GetDataSet(strQuery);
        }
        public DataSet GetAllProductionOrdrShipRMFromStockNotConvertProduct(int iStockID, int iYear, int iPeriod)
        {
            String strQuery = String.Format(@"
                                            SELECT DISTINCT PPProductionOrdrs.*
                                            FROM PPProductionOrdrs, dbo.ICShipmentItems
                                            WHERE PPProductionOrdrs.AAStatus = 'Alive'
                                            AND ICShipmentItems.AAStatus = 'Alive'
                                            AND ICShipmentItems.FK_PPProductionOrdrID = PPProductionOrdrs.PPProductionOrdrID
                                            AND ICShipmentItems.FK_ICStockID = {0}
                                            AND PPProductionOrdrTypeCombo <> 'ConvertProduct'
                                            AND Month(PPProductionOrdrs.PPProductionOrdrDate) = {1}
                                            AND Year(PPProductionOrdrs.PPProductionOrdrDate) = {2}", iStockID, iPeriod, iYear);

            return GetDataSet(strQuery);
        }
        public DataSet GetAllProductionOrdrConvertProduct(int iStockID, int iYear, int iPeriod)
        {
            String strQuery = String.Format(@"
                                            SELECT DISTINCT PPProductionOrdrs.PPProductionOrdrID
                                            FROM PPProductionOrdrs, dbo.ICShipmentItems
                                            WHERE PPProductionOrdrs.AAStatus = 'Alive'
                                            AND ICShipmentItems.AAStatus = 'Alive'
                                            AND ICShipmentItems.FK_PPProductionOrdrID = PPProductionOrdrs.PPProductionOrdrID
                                            AND ICShipmentItems.FK_ICStockID = {0}
                                            AND PPProductionOrdrTypeCombo = 'ConvertProduct'
                                            AND Month(PPProductionOrdrs.PPProductionOrdrDate) = {1}
                                            AND Year(PPProductionOrdrs.PPProductionOrdrDate) = {2}", iStockID, iPeriod, iYear);

            return GetDataSet(strQuery);
        }
        public DataSet LayTatCaPhieuSaiGiaVon(int iStockID, int iYear, int iPeriod)
        {
            String strQuery = String.Format(@"  SELECT * FROM dbo.PPProductionOrdrs
                                                WHERE AAStatus='Alive'
                                                AND YEAR(PPProductionOrdrDate) = {2}
                                                AND MONTH(PPProductionOrdrDate) = {1}
                                                --AND PPProductionOrdrTypeCombo = 'ConvertProduct'
                                                AND PPProductionOrdrID IN (SELECT FK_PPProductionOrdrID FROM dbo.ICShipmentItems WHERE AAStatus = 'Alive' AND FK_PPProductionOrdrID = PPProductionOrdrID AND FK_ICStockID = {0})
                                                AND (SELECT SUM(ICReceiptItemPrice) FROM dbo.ICReceiptItems WHERE AAStatus = 'Alive' AND FK_PPProductionOrdrID = PPProductionOrdrID) <> (SELECT SUM(ICShipmentItemCostTot) FROM dbo.ICShipmentItems WHERE AAStatus = 'Alive' AND FK_PPProductionOrdrID = PPProductionOrdrID)
                                                ", iStockID, iPeriod, iYear);

            return GetDataSet(strQuery);
        }

        #region Giá Thành M?i --Vinh
        public DataSet GetAllProductionOrdrInPeriodNotInCostCenterActive(int iYear, int iPeriod)
        {
            string strQuery = String.Format(@"SELECT  dbo.PPProductionOrdrs.*
                                                FROM    dbo.PPProductionOrdrs
                                                        INNER JOIN dbo.ICShipmentItems ON ( ICShipmentItems.FK_PPProductionOrdrID = PPProductionOrdrs.PPProductionOrdrID
                                                                                            AND ICShipmentItems.AAStatus = PPProductionOrdrs.AAStatus
                                                                                            AND PPProductionOrdrs.AAStatus = 'Alive'
                                                                                            AND YEAR(PPProductionOrdrDate) = {0}
                                                                                            AND MONTH(PPProductionOrdrDate) = {1}
                                                                                            AND ICShipmentItems.FK_PPCostCenterID NOT IN (
																							                                                SELECT  FK_PPCostCenterID
																							                                                FROM    dbo.PPProductionCostCenterActives
																							                                                WHERE   PPYear = {0}
																									                                                AND PPPeriod = {1} )
                                                                                          )
                                                "
                                            , iYear, iPeriod);
            
            return GetDataSet(strQuery);
        }
        #endregion
        // NhamNDH add -28/11/2016- Move Phiếu sản xuất từ CHF
        public DataSet GetAllProductionOrdrNotComplete()
        {
            string strQuery = string.Format(@"SELECT  *
                                            FROM    dbo.PPProductionOrdrs
                                            WHERE   AAStatus = 'Alive'
                                                    AND PPProductionOrdrTypeCombo = 'ProductionOrdr'
                                                    AND ( PPProductionOrdrID IN (
                                                          SELECT    PPProductionOrdrEstFGs.FK_PPProductionOrdrID
                                                          FROM      dbo.PPProductionOrdrEstFGs
                                                          WHERE     PPProductionOrdrEstFGs.AAStatus = 'Alive'
                                                                    AND PPProductionOrdrEstFGs.PPProductionOrdrEstFGRQty > 0 )
                                                          OR PPProductionOrdrID IN (
                                                          SELECT    PPProductionOrdrEstRMs.FK_PPProductionOrdrID
                                                          FROM      dbo.PPProductionOrdrEstRMs
                                                          WHERE     PPProductionOrdrEstRMs.AAStatus = 'Alive'
                                                                    AND PPProductionOrdrEstRMs.PPProductionOrdrEstRMRQty > 0 )
                                                          OR PPProductionOrdrID IN (
                                                          SELECT    ICROs.FK_PPProductionOrdrID
                                                          FROM      dbo.ICROs
                                                                    INNER JOIN dbo.ICROItems ON ICROItems.FK_ICROID = ICROs.ICROID
                                                                                                AND ICROItems.AAStatus = ICROs.AAStatus
                                                                                                AND ICROItems.AAStatus = 'Alive'
                                                                                                AND ICROItems.ICROItemRQty > 0 )
                                                        )");

            return GetDataSet(strQuery);
        }
        //

        public DataSet GetAllDataByShipmentItem(int iICShipmentItemID)
        {
            string strQuery = string.Format(@"SELECT  dbo.PPProductionOrdrs.*
                                                FROM    dbo.ICShipments
                                                        INNER JOIN dbo.ICShipmentItems ON ICShipmentItems.FK_ICShipmentID = ICShipments.ICShipmentID
                                                                                          AND dbo.ICShipments.AAStatus = 'Alive'
                                                                                          AND dbo.ICShipmentItems.AAStatus = 'Alive'
										                                                  AND dbo.ICShipmentItems.ICShipmentItemID = {0}
                                                        INNER JOIN dbo.ICShipmentItemROItems ON ICShipmentItemROItems.FK_ICShipmentItemID = ICShipmentItems.ICShipmentItemID
                                                                                                AND dbo.ICShipmentItemROItems.AAStatus = 'Alive'
                                                        INNER JOIN dbo.ICROItems ON ICROItems.ICROItemID = ICShipmentItemROItems.FK_ICROItemID
                                                                                    AND dbo.ICROItems.AAStatus = 'Alive'
                                                        INNER JOIN dbo.ICROs ON dbo.ICROs.AAStatus = 'Alive'
                                                        INNER JOIN dbo.PPProductionOrdrEstRMs ON dbo.PPProductionOrdrEstRMs.PPProductionOrdrEstRMID = dbo.ICROItems.FK_PPProductionOrdrEstRMID
                                                                                                 AND dbo.PPProductionOrdrEstRMs.AAStatus = 'Alive'
                                                        INNER JOIN dbo.PPProductionOrdrs ON PPProductionOrdrs.PPProductionOrdrID = ICROItems.FK_PPProductionOrdrID
                                                                                            AND dbo.PPProductionOrdrs.AAStatus = 'Alive'
										                                                ", iICShipmentItemID);

            return GetDataSet(strQuery);
        }

        public DataSet GetAllDataByReceipt(int iICReceiptID)
        {
            string strQuery = string.Format(@"SELECT 
                                        dbo.PPProductionOrdrs.*
                                FROM    dbo.ICReceipts
                                        INNER JOIN dbo.ICReceiptItems ON ICReceiptItems.FK_ICReceiptID = ICReceipts.ICReceiptID
                                                                         AND dbo.ICReceipts.AAStatus = 'Alive'
                                                                         AND dbo.ICReceiptItems.AAStatus = 'Alive'
										                                 AND dbo.ICReceipts.ICReceiptID ={0}
                                        INNER JOIN dbo.ICReceiptItemPurchaseOrderItems ON ICReceiptItemPurchaseOrderItems.FK_ICReceiptItemID = ICReceiptItems.ICReceiptItemID
                                                                                          AND dbo.ICReceiptItemPurchaseOrderItems.AAStatus = 'Alive'
                                        INNER JOIN dbo.APPOItems ON APPOItems.APPOItemID = ICReceiptItemPurchaseOrderItems.FK_APPOItemID
                                                                    AND dbo.APPOItems.AAStatus = 'Alive'
                                        INNER JOIN dbo.APPOs ON APPOs.APPOID = APPOItems.FK_APPOID
                                                                AND dbo.APPOs.AAStatus = 'Alive'
                                        INNER JOIN dbo.APPOItemProductionOrdrEstFGs ON APPOItemProductionOrdrEstFGs.FK_APPOItemID = APPOItems.APPOItemID
                                                                                       AND dbo.APPOItemProductionOrdrEstFGs.AAStatus = 'Alive'
                                        INNER JOIN dbo.PPProductionOrdrEstFGs ON PPProductionOrdrEstFGs.PPProductionOrdrEstFGID = APPOItemProductionOrdrEstFGs.FK_PPProductionOrdrEstFGID
                                                                                 AND dbo.PPProductionOrdrEstFGs.AAStatus = 'Alive'
                                        INNER JOIN dbo.PPProductionOrdrs ON PPProductionOrdrs.PPProductionOrdrID = PPProductionOrdrEstFGs.FK_PPProductionOrdrID
                                                                            AND dbo.PPProductionOrdrs.AAStatus = 'Alive'
                                UNION
                                ALL
                                SELECT 
                                        dbo.PPProductionOrdrs.*
                                FROM    dbo.ICReceipts
                                        INNER JOIN dbo.ICReceiptItems ON ICReceiptItems.FK_ICReceiptID = ICReceipts.ICReceiptID
                                                                         AND dbo.ICReceipts.AAStatus = 'Alive'
                                                                         AND dbo.ICReceiptItems.AAStatus = 'Alive'
										                                 AND dbo.ICReceipts.ICReceiptID={0}
                                        INNER JOIN dbo.PPProductionOrdrs ON PPProductionOrdrs.PPProductionOrdrID = ICReceiptItems.FK_PPProductionOrdrID
                                                                            AND dbo.PPProductionOrdrs.AAStatus = 'Alive'", iICReceiptID);

            return GetDataSet(strQuery);

        }
        public PPProductionOrdrsInfo GetObjecOpenBalanceByDate(DateTime dte)
        {
            string strQuery = string.Format(@"SELECT
                                                PPProductionOrdrs.*
                                            FROM dbo.PPProductionOrdrs
                                            WHERE 
                                            CONVERT(VARCHAR(10), PPProductionOrdrs.PPProductionOrdrEstEndDate, 112) >= '{0}'
                                            AND PPProductionOrdrs.AAStatus = 'Alive'
                                            AND PPProductionOrdrs.PPProductionOrdrTypeCombo = 'POOB'", dte.ToString("yyyyMMdd"));
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return (PPProductionOrdrsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            return null;
        }
    }
	#endregion
}