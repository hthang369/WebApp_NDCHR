using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
    #region PPCostCenters
    //-----------------------------------------------------------
    //Generated By: GMC Studio
    //Class:PPCostCentersController
    //Created Date:14 Tháng Mười Một 2014
    //-----------------------------------------------------------

    public class PPCostCentersController : BaseBusinessController
    {
        public PPCostCentersController()
        {
            dal = new DALBaseProvider("PPCostCenters", typeof(PPCostCentersInfo));
        }

        public DataSet GetAllDataByAllocateMth(String strPPCostCenterAllocateMthCombo)
        {
            String str = String.Format(@"SELECT * FROM dbo.PPCostCenters
                                        WHERE AAStatus = 'Alive'
                                        AND PPCostCenterAllocateMthCombo = '{0}'"
                                        , strPPCostCenterAllocateMthCombo);
            return dal.GetDataSet(str);
        }

        public DataSet GetAllChildByKey(string spKey = "", bool bGetDummy = false)
        {
            if (spKey.Length > 0)
                spKey = string.Format(@"
                            AND ({0})", spKey);
            String strQuery = string.Empty;
            if (bGetDummy)
                strQuery += String.Format(@"SELECT Top 1 * FROM dbo.PPCostCenters WHERE AAStatus = 'Dummy'
UNION ALL
");
            strQuery += String.Format(@"SELECT * FROM dbo.PPCostCenters
                                        WHERE AAStatus = 'Alive' {0}
                                        AND PPCostCenterID NOT IN (
                                                                        SELECT DISTINCT FK_PPCostCenterParentID 
                                                                        FROM dbo.PPCostCenterChilds
                                                                        WHERE AAStatus = 'Alive'
                                                                    )"
                                        , spKey);

            return dal.GetDataSet(strQuery);
        }

        public DataSet LayDanhSachTapPhiNgoaiTruChuoiTapPhiTruyenVao(String strKey)
        {
            String str = String.Format(@"SELECT * FROM dbo.PPCostCenters
                                            WHERE AAStatus = 'Alive'
                                            AND PPCostCenterID NOT IN (
                                            {0}
                                            )"
                                        , strKey);
            return dal.GetDataSet(str);
        }
        public DataSet GetAllData()
        {
            String str = String.Format(@"SELECT * FROM dbo.PPCostCenters
                                        WHERE AAStatus = 'Alive'
                                        ORDER by PPCostCenterID DESC");
            return dal.GetDataSet(str);
        }
        public DataSet GetAllDataByYearAndPeriod()
        {
            String str = String.Format(@"SELECT * FROM dbo.PPCostCenters
                                        WHERE AAStatus = 'Alive'
                                        ORDER by PPCostCenterID DESC");
            return dal.GetDataSet(str);
        }
        public DataSet GetAllDataASC()
        {
            String str = String.Format(@"SELECT * FROM dbo.PPCostCenters
                                        WHERE AAStatus = 'Alive'
                                        ORDER by PPCostCenterID ASC");
            return dal.GetDataSet(str);
        }
        public DataSet GetAllDataByParentCostCenter(int piPPCostCenterID)
        {
            String str = String.Format(@"
SELECT 
    PPCostCenterChildID
    ,CAST(1 AS bit) as AASelected
    ,FK_PPCostCenterID
    ,PPCostCenterChildPct
FROM dbo.PPCostCenterChilds a
WHERE FK_PPCostCenterParentID = {0}
UNION
SELECT 
    0
    ,0
    ,PPCostCenterID as FK_PPCostCenterID
    ,0
FROM dbo.PPCostCenters a
WHERE AAStatus = 'Alive'
    AND PPCostCenterAllocateMthCombo = 'Direct'
"
                , piPPCostCenterID);
            return dal.GetDataSet(str);
        }
        public DataSet GetAllDataByTypeInDirect()
        {
            String strQuery = String.Format(@"
                                            SELECT  *
                                            FROM    dbo.PPCostCenters
                                            WHERE   AAStatus = 'Alive'
                                            and PPCostCenterAllocateMthCombo='InDirect'                                          
                                            ");
            return GetDataSet(strQuery);
        }
        public DataSet GetAllDataByTypeInDirectAndNotInChild()
        {
            String strQuery = String.Format(@"
                                            SELECT * FROM dbo.PPCostCenters
                                            WHERE PPCostCenterID NOT IN (
                                                                            SELECT FK_PPCostCenterID FROM dbo.PPCostCenterChilds
								                                            WHERE AAStatus='Alive' )
                                            AND AAStatus='Alive'
                                            AND PPCostCenterAllocateMthCombo='InDirect'                                         
                                            ");
            return GetDataSet(strQuery);
        }

        public DataSet  GetCostCenterParent(int iPPCostCenterChildID)
        {
            string strQuery = string.Format(@"
                                            SELECT  *
                                            FROM    dbo.PPCostCenters
                                            WHERE   PPCostCenterID IN ( SELECT  FK_PPCostCenterParentID
                                                                        FROM    dbo.PPCostCenterChilds
                                                                        WHERE   FK_PPCostCenterID = '{0}'
                                                                                AND AAStatus = 'Alive' )
                                                    AND AAStatus = 'Alive'
                                            ", iPPCostCenterChildID);            
            return GetDataSet(strQuery); ;
        }
        
        public string GetTypeCostCenter(int iPPCostCenterID)
        {
            string strQuery = string.Format(@"
                                            SELECT  PPCostCenterAllocateMthCombo
                                            FROM    dbo.PPCostCenters
                                            WHERE   PPCostCenterID = '{0}'

            ", iPPCostCenterID);
            DataSet ds = GetDataSet(strQuery);
            string TypeCostCenter = null;
            if(ds!=null||ds.Tables[0].Rows.Count>0)
            {
                TypeCostCenter=(string)ds.Tables[0].Rows[0][0];
                return TypeCostCenter;
            }
            return TypeCostCenter;
        }
        
    }
    #endregion
}