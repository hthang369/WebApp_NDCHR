using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region PPWOEstFGItems
	//-----------------------------------------------------------
	//Generated By: Expert Studio
	//Class:PPWOEstFGItemsController
	//Created Date:Wednesday, April 20, 2011
	//----------------------------------------------------------	
	
	public class PPWOEstFGItemsController:BaseBusinessController
	{
		public PPWOEstFGItemsController()
		{
			dal= new DALBaseProvider("PPWOEstFGItems",typeof(PPWOEstFGItemsInfo));
		}

        public double GetSumQtyOfProductForProductPlan(int iProductID, int iProductPlnID)
        {
            String strQuery = String.Format(@"SELECT SUM(PPWOEstFGItemQty) FROM PPWOEstFGItems WHERE FK_ICProductID = {0} AND FK_PPWOID IN (SELECT PPWOID FROM PPWOs WHERE AAStatus = 'ALive' AND FK_PPProductPlnID = {1})", iProductID, iProductPlnID);

            DataSet ds = GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }

            return 0;
        }
        public double GetSumRQtyByProductIDAndProductPln(int iProductID,int iProductPlnID)
        {
            string strQuery = string.Format(@"select SUM(PPWOEstFGItemRQty-PPWOEstFGItemCQty)
                                                        from PPWOEstFGItems inner join PPWOs on PPWOs.PPWOID=PPWOEstFGItems.FK_PPWOID
                                                        where PPWOs.AAStatus='Alive' AND (PPWOEstFGItemRQty-PPWOEstFGItemCQty)>0
                                                        AND PPWOEstFGItems.FK_ICProductID={0} AND PPWOs.FK_PPProductPlnID={1}"
                                                        , iProductID, iProductPlnID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            return 0;
        }

        public double GetSumRQtyByProductIDAndARShpPlanID(int iProductID, int iARShpPlanID)
        {
            string strQuery = string.Format(@"SELECT  SUM(PPWOEstFGItemRQty - PPWOEstFGItemCQty)
                                            FROM    PPWOEstFGItems
                                                    INNER JOIN PPWOs ON ( PPWOs.PPWOID = PPWOEstFGItems.FK_PPWOID )
                                                    INNER JOIN dbo.PPProductPlns ON ( PPProductPlns.PPProductPlnID = PPWOs.FK_PPProductPlnID
                                                                                      AND PPProductPlns.AAStatus = PPWOs.AAStatus
                                                                                      AND PPProductPlns.AAStatus = 'Alive'
                                                                                      AND FK_ARShpPlanID = {1}
                                                                                    )
                                            WHERE   PPWOs.AAStatus = 'Alive'
                                                    AND ( PPWOEstFGItemRQty - PPWOEstFGItemCQty ) > 0
                                                    AND PPWOEstFGItems.FK_ICProductID = {0}"
                                                        , iProductID, iARShpPlanID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            return 0;
        }
        public DataSet GetAllDataExistRQtyByProductIDAndProductPln(int iProductID, int iProductPlnID)
        {
            string strQuery = string.Format(@"select *
                                                        from PPWOEstFGItems inner join PPWOs on PPWOs.PPWOID=PPWOEstFGItems.FK_PPWOID
                                                        where PPWOs.AAStatus='Alive' AND (PPWOEstFGItemRQty-PPWOEstFGItemCQty)>0
                                                        AND PPWOEstFGItems.FK_ICProductID={0} AND PPWOs.FK_PPProductPlnID={1}"
                                                        , iProductID, iProductPlnID);
            return dal.GetDataSet(strQuery);
        }
        public double GetSumRQtyInNormByProductIDAndProductPln(int iProductID, int iProductPlnID)
        {
            string strQuery = string.Format(@"select SUM((PPWOEstFGItemRQty-PPWOEstFGItemCQty)*PPNormRMQty)
                                                    from 
                                                    PPWOEstFGItems 
                                                    inner join PPWOs on PPWOs.PPWOID=PPWOEstFGItems.FK_PPWOID
                                                    inner join PPNorms on PPNorms.FK_ICProductID=PPWOEstFGItems.FK_ICProductID
                                                    inner join PPNormRMs on PPNormRMs.FK_PPNormID=PPNorms.PPNormID
                                                    where PPWOs.AAStatus='Alive' AND (PPWOEstFGItemRQty-PPWOEstFGItemCQty)>0
                                                    AND PPNorms.AAStatus='Alive'
                                                    AND PPNormRMs.FK_ICProductID={0} AND PPWOs.FK_PPProductPlnID={1}
                                                    "
                                                        , iProductID, iProductPlnID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            return 0;
        }
        public double GetSumRQtyInNormByProductID(int iProductID)
        {
            string strQuery = string.Format(@"select SUM((PPWOEstFGItemRQty-PPWOEstFGItemCQty)*PPNormRMQty)
                                                    from 
                                                    PPWOEstFGItems 
                                                    inner join PPWOs on PPWOs.PPWOID=PPWOEstFGItems.FK_PPWOID
                                                    inner join PPNorms on PPNorms.FK_ICProductID=PPWOEstFGItems.FK_ICProductID
                                                    inner join PPNormRMs on PPNormRMs.FK_PPNormID=PPNorms.PPNormID
                                                    where PPWOs.AAStatus='Alive' AND (PPWOEstFGItemRQty-PPWOEstFGItemCQty)>0
                                                    AND PPNorms.AAStatus='Alive'
                                                    AND PPNormRMs.FK_ICProductID={0}
                                                    "
                                                        , iProductID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            return 0;
        }

        public DataSet GetAllDataInNormByProductID(int iProductID)
        {
            string strQuery = string.Format(@"select *
                                                    from 
                                                    PPWOEstFGItems 
                                                    inner join PPWOs on PPWOs.PPWOID=PPWOEstFGItems.FK_PPWOID
                                                    inner join PPNorms on PPNorms.FK_ICProductID=PPWOEstFGItems.FK_ICProductID
                                                    inner join PPNormRMs on PPNormRMs.FK_PPNormID=PPNorms.PPNormID
                                                    where PPWOs.AAStatus='Alive' AND (PPWOEstFGItemRQty-PPWOEstFGItemCQty)>0
                                                    AND PPNorms.AAStatus='Alive'
                                                    AND PPNormRMs.FK_ICProductID={0}
                                                    ", iProductID);
            return dal.GetDataSet(strQuery);
            
        }
        public DataSet GetAllDataByWOOrderByPriority(int iPPWOID)
        {
            string strQuery = string.Format(@"select * from PPWOEstFGItems where FK_PPWOID in (select PPWOID from PPWOs where AAStatus='Alive' 
                                                AND (PPWOID={0} or {0}=0))
                                        Order by PPWOEstFGPriority", iPPWOID);
            return dal.GetDataSet(strQuery);                                           
        }

        /// <summary>
        /// Viet Nguyen 2013.01.09
        /// Get All WOEstItem By ProductPlan
        /// </summary>
        public DataSet GetAllDataByProductPln(int iProductPlnID)
        {
            string strQuery = string.Format(@"select *
                                                    from 
                                                    PPWOEstFGItems 
                                                    inner join PPWOs on PPWOs.PPWOID=PPWOEstFGItems.FK_PPWOID
                                                    where PPWOs.AAStatus='Alive' AND
                                                    PPWOs.FK_PPProductPlnID={0}
                                                    "
                                                    , iProductPlnID);
            return dal.GetDataSet(strQuery);
        }

        /// <summary>
        /// Viet Nguyen 2013.01.09
        /// Get SUM Qty By Product SemiProduct FGProduct In ProductPln
        /// </summary>
        public double GetSumQtyOfProductForProductPlan(int iProductID, int iProductPlnID,int iSemiProductID,int iFGProductID,int iARSOID)
        {
            String strQuery = String.Format(@"SELECT SUM(PPWOEstFGItemQty) FROM PPWOEstFGItems WHERE FK_ICProductID = {0} 
                                                            and FK_ICSemiProductID={2} and FK_ICFGProductID={3}
                                                            AND FK_PPWOID IN (SELECT PPWOID FROM PPWOs WHERE AAStatus = 'ALive' 
                                                                            AND FK_PPProductPlnID = {1} AND FK_ARSOID={4})"
                                                , iProductID, iProductPlnID, iSemiProductID, iFGProductID,iARSOID);

            DataSet ds = GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }

            return 0;
        }

        /// <summary>
        /// Viet Nguyen 2013.01.09
        /// Get SUM RQty By Product SemiProduct FGProduct In ProductPln
        /// </summary>
        public double GetSumRQtyOfProductForProductPlan(int iProductID, int iProductPlnID, int iSemiProductID, int iFGProductID,int iARSOID)
        {
            String strQuery = String.Format(@"SELECT SUM(PPWOEstFGItemRQty) FROM PPWOEstFGItems WHERE FK_ICProductID = {0} 
                                                            and FK_ICSemiProductID={2} and FK_ICFGProductID={3}
                                                            AND FK_PPWOID IN (SELECT PPWOID FROM PPWOs WHERE AAStatus = 'ALive' 
                                                                            AND FK_PPProductPlnID = {1} AND FK_ARSOID={4})"
                                                , iProductID, iProductPlnID, iSemiProductID, iFGProductID,iARSOID);

            DataSet ds = GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }

            return 0;
        }

        /// <summary>
        /// Viet Nguyen 2013.10.25
        /// Get SUM RQty-CQty By Product SemiProduct FGProduct In ProductPln
        /// </summary>
        public double GetSumRQty_CQtyOfProductForProductPlan(int iProductID, int iProductPlnID, int iSemiProductID, int iFGProductID, int iARSOID)
        {
            String strQuery = String.Format(@"SELECT SUM(PPWOEstFGItemRQty-PPWOEstFGItemCQty) FROM PPWOEstFGItems WHERE FK_ICProductID = {0} 
                                                            and FK_ICSemiProductID={2} and FK_ICFGProductID={3}
                                                            AND FK_PPWOID IN (SELECT PPWOID FROM PPWOs WHERE AAStatus = 'ALive' 
                                                                            AND FK_PPProductPlnID = {1} AND FK_ARSOID={4})"
                                                , iProductID, iProductPlnID, iSemiProductID, iFGProductID, iARSOID);

            DataSet ds = GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }

            return 0;
        }

        /// <summary>
        /// Viet Nguyen 2013.01.09
        /// Get Last Finish Date In WOItem For ProductPln
        /// </summary>
        public Nullable<DateTime> GetLastDateForProductPln(int iProductID, int iProductPlnID, int iSemiProductID, int iFGProductID,int iARSOID)
        {
            String strQuery = String.Format(@"select top 1 PPWOEstFGItemLastFinishDate from PPWOEstFGItems where
                                                 FK_ICProductID = {0} and FK_ICSemiProductID={2} and FK_ICFGProductID={3}
		                                         AND FK_PPWOID IN (SELECT PPWOID FROM PPWOs WHERE AAStatus= 'Alive' AND FK_PPProductPlnID = {1} AND FK_ARSOID={4})
                                                      Order By PPWOEstFGItemLastFinishDate Desc", iProductID, iProductPlnID, iSemiProductID, iFGProductID,iARSOID);

            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDateTime(ds.Tables[0].Rows[0][0]);
            }

            return null;
        }

        /// <summary>
        /// Viet Nguyen 2013.01.10 
        /// Get All EstFG By Product & WO
        /// </summary>
        public DataSet GetAllDataByProductAndWO(int iProductID, int iWOID)
        {
            string strQuery = string.Format(@"Select * from PPWOEstFGItems where FK_ICProductID={0}
                                                        AND FK_PPWOID in (Select PPWOID from PPWOs where AAStatus='Alive' AND PPWOID={1})"
                                            , iProductID, iWOID);
            return dal.GetDataSet(strQuery);
        }
        //NhamNDH -13/12/2016-
        public DataSet GetAllDataByProductAndWOAndARShpPlanSO(int iARShpPlanItemID, int iProductID, int iWOID)
        {
            string strQuery = string.Format(@"  SELECT PPWOEstFGItems.* 
                                                FROM PPWOEstFGItems 
                                                INNER JOIN dbo.PPWOs ON	PPWOs.PPWOID = PPWOEstFGItems.FK_PPWOID AND	PPWOs.AAStatus='Alive'
                                                WHERE PPWOEstFGItems.FK_ICProductID = {0}
	                                                  AND PPWOEstFGItems.FK_ARShpPlanItemID = {1}
	                                                  AND PPWOEstFGItems.FK_PPWOID = {2}"
                                            , iProductID, iARShpPlanItemID, iWOID);
            return dal.GetDataSet(strQuery);
        }

        public DataSet GetAllDataByProductPlnANDProductPlnType(int iProductPlnID, string strProductPlnType)
        {
            string strQuery = string.Format(@"select PPWOs.FK_ARSOID as FK_ICProductStandard1CutID,PPWOEstFGItems.* from PPWOEstFGItems 
                                                inner join PPWOs on PPWOEstFGItems.FK_PPWOID=PPWOs.PPWOID
                                                inner join PPProductPlnItems 
                                                on	PPWOEstFGItems.FK_ICProductID=PPProductPlnItems.FK_ICProductID 
	                                                AND PPWOEstFGItems.FK_ICSemiProductID=PPProductPlnItems.FK_ICSemiProductID
	                                                AND PPWOEstFGItems.FK_ICFGProductID=PPProductPlnItems.FK_ICFGProductID
                                                    AND PPWOs.FK_ARSOID=PPProductPlnItems.FK_ARSOID	 
                                                where PPWOs.FK_PPProductPlnID={0} AND PPProductPlnItems.FK_PPProductPlnID={0}
                                                AND PPProductPlnItems.PPProductPlnItemTypeCombo='{1}'
                                                order by PPWOEstFGItems.FK_ICFGProductID,PPWOEstFGItems.FK_ICSemiProductID,PPWOEstFGItems.FK_ICProductID"
                                                , iProductPlnID, strProductPlnType);
            return dal.GetDataSet(strQuery);
        }

        /// <summary>
        /// Viet Nguyen 2013.01.14 
        /// Get WOEstItem By WO and RQty>0
        /// </summary>
        public DataSet GetAllDataByWOOrderAndExistRQty(int iPPWOID)
        {
            string strQuery = string.Format(@"select * from PPWOEstFGItems where (PPWOEstFGItemRQty-PPWOEstFGItemCQty)>0 AND
                                            FK_PPWOID in (select PPWOID from PPWOs where AAStatus='Alive' 
                                                AND PPWOID={0})
                                        ", iPPWOID);
            return dal.GetDataSet(strQuery);
        }

        /// <summary>
        /// Viet Nguyen 2013.01.24
        /// Get Qty In WO By SO & ProductID
        /// </summary>
        public double GetQtyInFGWOByProductAndSOID(int iProductID, int iARSOID)
        {
            string strQuery = string.Format(@"Select SUM(PPWOEstFGItemQty) from PPWOEstFGItems where FK_ICProductID={0} AND
                                                  FK_PPWOID in (Select PPWOID from PPWOs where AAStatus='Alive'  AND FK_ARSOID={1})", iProductID, iARSOID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                try
                {
                    return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
                }
                catch (System.Exception ex)
                {

                }
            }
            return 0;
        }

        /// <summary>
        /// Viet Nguyen 2013.01.09
        /// Get SUM Rcp In WOItem By Product And SO
        /// </summary>
        public double GetSumRcpQtyByProductAndSO(int iProductID,int iARSOID)
        {
            String strQuery = String.Format(@"SELECT SUM(PPWOEstFGItemQty - PPWOEstFGItemRQty) FROM PPWOEstFGItems WHERE FK_ICProductID = {0} 
                                                            AND FK_PPWOID IN (SELECT PPWOID FROM PPWOs WHERE AAStatus = 'ALive' 
                                                                            AND FK_ARSOID = {1})"
                                                , iProductID, iARSOID);

            DataSet ds = GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }

            return 0;
        }

        public DataSet GetData_TheoDoiLenhSanXuat(int iStockType, int iWO)
        {
            #region truy van
            String strQuery = String.Format(@"SELECT 
                                ICProductNo ,
                                ICProductName,
                                ICProductLength,
                                ICProductWidth,
                                ICProductHeight ,
                                ICProductVolume,
                                ICStockNo,
                                ICStockTypeID, 
                                FK_PPWOID
                                ,SUM(BeginQty)as BeginQty
                                ,Round(SUM( BeginCBM),6) as BeginCBM
                                ,Round(SUM(BeginTotalCost),6) as BeginTotalCost
                                ,SUM (RcpQty) as RcpQty
                                ,Round(SUM (RcpCBM),6) as RcpCBM
                                ,Round(SUM (RcpTotalCost),6) as RcpTotalCost
                                ,SUM (ShpQty) as ShpQty
                                ,Round(SUM (ShpCBM),6) as ShpCBM
                                ,Round(SUM (ShpTotalCost),6) as ShpTotalCost
                                ,SUM(BeginQty)+SUM (RcpQty)-SUM (ShpQty) as EndQty
                                ,Round(SUM(BeginCBM),6)+Round(SUM (RcpCBM),6)-Round(SUM (ShpCBM),6) as EndCBM
                                ,Round(SUM(BeginTotalCost),6)+Round(SUM (RcpTotalCost),6)-Round(SUM (ShpTotalCost),6) as EndTotalCost,
                                Qty,
                                RQty
                                FROM
                                (	--Receipt           
			                            select	ICProducts.ICProductNo,
					                            ICProducts.ICProductName,
					                            ICProducts.ICProductLength,
					                            ICProducts.ICProductWidth,
					                            ICProducts.ICProductHeight,
					                            ICProducts.ICProductMaterialCBM as ICProductVolume,
					                            ICStockNo,
					                            0 as BeginQty,
					                            ICProductTypeNo,
					                            0 as BeginCBM, 
					                            0 as BeginTotalCost, 
					                            ICStockTypeID, 
					                            dbo.ICReceiptItems.FK_PPWOID,
					                            SUM(ICReceiptItemQty) as RcpQty,
					                            sum(ICReceiptItemQty*ICProductMaterialCBM) as RcpCBM,
					                            sum(ICReceiptItemCostTot) as RcpTotalCost,
					                            0 as ShpQty, 
					                            0 as ShpCBM, 
					                            0 as ShpTotalCost,
                                                PPWOEstFGItems.PPWOEstFGItemQty AS Qty,
					                            PPWOEstFGItems.PPWOEstFGItemRQty AS RQty
					                             
			                            from PPWOEstFGItems 
											LEFT JOIN ICProducts ON ICProducts.ICProductID = PPWOEstFGItems.FK_ICProductID
				                            LEFT join ICReceiptItems ON ICReceiptItems.FK_ICProductID = ICProducts.ICProductID 
				                            LEFT join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
				                            LEFT join ICStocks on ICStocks.ICStockID=ICReceiptItems.FK_ICStockID 
				                            LEFT join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
			                            where 
				                            (ICProducts.AAStatus='Alive' OR ICProducts.AAStatus IS NULL)
				                            AND (ICProductTypes.AAStatus='Alive' OR ICProductTypes.AAStatus IS NULL)
				                            AND (ICStocks.AAStatus='Alive' OR ICStocks.AAStatus IS NULL)
				                            AND (ICStockTypes.AAStatus='Alive' OR ICStockTypes.AAStatus IS NULL)
				                            AND (dbo.ICReceiptItems.FK_PPWOID = {0} OR 0={0})
                                            AND (PPWOEstFGItems.FK_PPWOID={0} OR 0={0})
				                            AND (ICStockTypes.ICStockTypeID={1} OR 0={1})
				                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP')
                                            AND ICReceiptItems.AAStatus='Alive' 
				                             AND ( ICReceiptItems.FK_ICReceiptID IN (SELECT ICReceiptID FROM ICReceipts WHERE AAStatus='Alive')
													OR ICReceiptItems.FK_PPProductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus='Alive'))
				                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProducts.ICProductMaterialCBM,ICProductTypeNo, ICStockTypeID, dbo.ICReceiptItems.FK_PPWOID,PPWOEstFGItems.PPWOEstFGItemQty,PPWOEstFGItems.PPWOEstFGItemRQty
                                   Union All
		                            --Transfer In
			                            select ICProducts.ICProductNo,
					                            ICProducts.ICProductName,
					                            ICProducts.ICProductLength,
					                            ICProducts.ICProductWidth,
					                            ICProducts.ICProductHeight,
					                            ICProducts.ICProductMaterialCBM as ICProductVolume,
					                            ICStockNo,
					                            0 as BeginQty,
					                            ICProductTypeNo,
					                            0 as BeginCBM, 
					                            0 as BeginTotalCost, 
					                            ICStockTypeID, 
					                            dbo.ICTransferItems.FK_PPWOID,
					                            SUM(ICTransferItemQty) as RcpQty,
					                            sum(ICTransferItemQty*ICProductMaterialCBM) as RcpCBM,
					                            sum(ICTransferItemCostTot) as RcpTotalCost,
					                            0 as ShpQty, 
					                            0 as ShpCBM, 
					                            0 as ShpTotalCost,
                                                PPWOEstFGItems.PPWOEstFGItemQty AS Qty,
					                            PPWOEstFGItems.PPWOEstFGItemRQty AS RQty
					                             
                                            from PPWOEstFGItems 
											LEFT JOIN ICProducts ON ICProducts.ICProductID = PPWOEstFGItems.FK_ICProductID
				                            LEFT join ICTransferItems ON ICTransferItems.FK_ICProductID = ICProducts.ICProductID 
				                            LEFT join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
				                            LEFT join ICStocks on ICStocks.ICStockID=ICTransferItems.FK_ICToStockID 
				                            LEFT join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
			                            where 
				                            (ICProducts.AAStatus='Alive' OR ICProducts.AAStatus IS NULL)
				                            AND (ICProductTypes.AAStatus='Alive' OR ICProductTypes.AAStatus IS NULL)
				                            AND (ICStocks.AAStatus='Alive' OR ICStocks.AAStatus IS NULL)
				                            AND (ICStockTypes.AAStatus='Alive' OR ICStockTypes.AAStatus IS NULL)
				                            AND (dbo.ICTransferItems.FK_PPWOID = {0} OR 0={0})
                                            AND (PPWOEstFGItems.FK_PPWOID={0} OR 0={0})
				                            AND (ICStockTypes.ICStockTypeID={1} OR 0={1})
				                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP')
                                            AND ICTransferItems.AAStatus='Alive' 
				                            AND ICTransferItems.FK_ICTransferID IN (SELECT ICTransferID FROM ICTransfers WHERE AAStatus='Alive')
				                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProducts.ICProductMaterialCBM,ICProductTypeNo, ICStockTypeID, dbo.ICTransferItems.FK_PPWOID,PPWOEstFGItems.PPWOEstFGItemQty,PPWOEstFGItems.PPWOEstFGItemRQty
                                -- Xuat trong ky
                                  Union All
			                            select ICProducts.ICProductNo,
					                            ICProducts.ICProductName,
					                            ICProducts.ICProductLength,
					                            ICProducts.ICProductWidth,
					                            ICProducts.ICProductHeight,
					                            ICProducts.ICProductMaterialCBM as ICProductVolume,
					                            ICStockNo,
					                            0 as BeginQty,
					                            ICProductTypeNo,
					                            0 as BeginCBM, 
					                            0 as BeginTotalCost, 
					                            ICStockTypeID, 
					                            dbo.ICShipmentItems.FK_PPWOID,
					                            0 as RcpQty,
					                            0 as RcpCBM,
					                            0 as RcpTotalCost,
					                            SUM(ICShipmentItemQty) as ShpQty, 
					                            sum(ICShipmentItemQty*ICProductMaterialCBM) as ShpCBM, 
					                            sum(ICShipmentItemCostTot) as ShpTotalCost,
                                                PPWOEstFGItems.PPWOEstFGItemQty AS Qty,
					                            PPWOEstFGItems.PPWOEstFGItemRQty AS RQty
					                             
                                            from PPWOEstFGItems 
											LEFT JOIN ICProducts ON ICProducts.ICProductID = PPWOEstFGItems.FK_ICProductID
				                            LEFT join ICShipmentItems ON ICShipmentItems.FK_ICProductID = ICProducts.ICProductID 
				                            LEFT join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
				                            LEFT join ICStocks on ICStocks.ICStockID=ICShipmentItems.FK_ICStockID
				                            LEFT join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
			                            where 
				                            (ICProducts.AAStatus='Alive' OR ICProducts.AAStatus IS NULL)
				                            AND (ICProductTypes.AAStatus='Alive' OR ICProductTypes.AAStatus IS NULL)
				                            AND (ICStocks.AAStatus='Alive' OR ICStocks.AAStatus IS NULL)
				                            AND (ICStockTypes.AAStatus='Alive' OR ICStockTypes.AAStatus IS NULL)
				                            AND (dbo.ICShipmentItems.FK_PPWOID = {0} OR 0={0})
                                            AND (PPWOEstFGItems.FK_PPWOID={0} OR 0={0})
				                            AND (ICStockTypes.ICStockTypeID={1} OR 0={1})
				                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP')
                                            AND ICShipmentItems.AAStatus='Alive' 
				                            AND ( ICShipmentItems.FK_ICShipmentID IN (SELECT ICShipmentID FROM ICShipments WHERE AAStatus='Alive')
													OR ICShipmentItems.FK_PPProductionOrdrID IN (SELECT PPProductionOrdrID FROM PPProductionOrdrs WHERE AAStatus='Alive'))
				                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProducts.ICProductMaterialCBM,ICProductTypeNo, ICStockTypeID, dbo.ICShipmentItems.FK_PPWOID,PPWOEstFGItems.PPWOEstFGItemQty,PPWOEstFGItems.PPWOEstFGItemRQty
                              Union All
                            -- Transfer Out
			                            select ICProducts.ICProductNo,
					                            ICProducts.ICProductName,
					                            ICProducts.ICProductLength,
					                            ICProducts.ICProductWidth,
					                            ICProducts.ICProductHeight,
					                            ICProducts.ICProductMaterialCBM as ICProductVolume,
					                            ICStockNo,
					                            0 as BeginQty,
					                            ICProductTypeNo,
					                            0 as BeginCBM, 
					                            0 as BeginTotalCost, 
					                            ICStockTypeID, 
					                            dbo.ICTransferItems.FK_PPWOID,
					                            0 as RcpQty,
					                            0 as RcpCBM,
					                            0 as RcpTotalCost,
					                            SUM(ICTransferItemQty) as ShpQty, 
					                            sum(ICTransferItemQty*ICProductMaterialCBM) as ShpCBM, 
					                            sum(ICTransferItemCostTot) as ShpTotalCost,
                                                PPWOEstFGItems.PPWOEstFGItemQty AS Qty,
					                            PPWOEstFGItems.PPWOEstFGItemRQty AS RQty
					                             
                                            from PPWOEstFGItems 
											LEFT JOIN ICProducts ON ICProducts.ICProductID = PPWOEstFGItems.FK_ICProductID
				                            LEFT join ICTransferItems ON ICTransferItems.FK_ICProductID = ICProducts.ICProductID 
				                            LEFT join ICProductTypes on ICProductTypes.ICProductTypeID=ICProducts.FK_ICProductTypeID
				                            LEFT join ICStocks on ICStocks.ICStockID=ICTransferItems.FK_ICFromStockID
				                            LEFT join ICStockTypes on ICStocks.FK_ICStockTypeID=ICStockTypes.ICStockTypeID
			                            where 
				                            (ICProducts.AAStatus='Alive' OR ICProducts.AAStatus IS NULL)
				                            AND (ICProductTypes.AAStatus='Alive' OR ICProductTypes.AAStatus IS NULL)
				                            AND (ICStocks.AAStatus='Alive' OR ICStocks.AAStatus IS NULL)
				                            AND (ICStockTypes.AAStatus='Alive' OR ICStockTypes.AAStatus IS NULL)
				                            AND (dbo.ICTransferItems.FK_PPWOID = {0} OR {0}=2)
                                            AND (PPWOEstFGItems.FK_PPWOID={0} OR 0={0})
				                            AND (ICStockTypes.ICStockTypeID={1} OR 0={1})
				                            AND (ICProductTypeNo='TP' OR ICProductTypeNo='BTPCT' OR ICProductTypeNo='BTP')
                                            AND ICTransferItems.AAStatus='Alive' 
				                            AND ICTransferItems.FK_ICTransferID IN (SELECT ICTransferID FROM ICTransfers WHERE AAStatus='Alive')
				                            Group by ICProducts.ICProductNo,ICStockNo,ICProducts.ICProductName,ICProducts.ICProductLength,ICProducts.ICProductWidth,ICProducts.ICProductHeight,ICProducts.ICProductMaterialCBM,ICProductTypeNo, ICStockTypeID, dbo.ICTransferItems.FK_PPWOID,PPWOEstFGItems.PPWOEstFGItemQty,PPWOEstFGItems.PPWOEstFGItemRQty
			                             ) as ABC
                                    GROUP BY ICProductNo ,
				                            ICProductName,
				                            ICProductLength,
				                            ICProductWidth,
				                            ICProductHeight ,
				                            ICProductVolume,
				                            ICStockNo,
				                            ICStockTypeID,
				                            FK_PPWOID,Qty,RQty
		                            HAVING SUM(BeginQty)<>0 or SUM(RcpQty)<>0 or Sum(ShpQty)<>0
                                    ORDER BY ICProductNo,ICStockNo", iWO, iStockType);

            #endregion
            return GetDataSet(strQuery);

        }

        #region Lấy tất cả sản phẩm trong lệnh sản xuất có RQty > 0 mà theo KHSX hay theo Lệnh SX  và loại sản phẩm --Vinh --13/04/2013

        public DataSet LaySanPhamTrongLenhSanXuatChuaHoanThanh(int iProductPlnID, int iWOID)
        {
            String str = String.Format(@"   SELECT WOEstFG.* FROM dbo.PPWOEstFGItems WOEstFG
                                            INNER JOIN dbo.PPWOs WO ON WOEstFG.FK_PPWOID = WO.PPWOID
                                            INNER JOIN dbo.PPProductPlns ProPln ON WO.FK_PPProductPlnID = ProPln.PPProductPlnID
                                            INNER JOIN dbo.PPProductPlnItems ProPlnItem ON (ProPln.PPProductPlnID = ProPlnItem.FK_PPProductPlnID AND ProPlnItem.FK_ICFGProductID = WOEstFG.FK_ICFGProductID AND ProPlnItem.FK_ICSemiProductID = WOEstFG.FK_ICSemiProductID AND ProPlnItem.FK_ICProductID = WOEstFG.FK_ICProductID)
                                            WHERE WO.AAStatus='Alive' AND ProPln.AAStatus='Alive' AND ProPlnItem.AAStatus='Alive'
                                            AND WOEstFG.PPWOEstFGItemRQty > 0
                                            AND (WO.PPWOID = {0} OR {0} = 0)
                                            AND (ProPln.PPProductPlnID = {1} OR {1} = 0)", iWOID, iProductPlnID);

            return dal.GetDataSet(str);
        }

        #endregion

        #region Lấy số lượng sản phẩm WO cần làm trong khoảng thời gian
        
        public double GetSUMWOEstFGRQtyByProductFGAndDateInRange(int iICProductID, DateTime fromDate, DateTime ToDate)
        {
            string strQueryDateWO = DALUtil.GenerateBeetween("PPWODate", fromDate, ToDate);
            String strQuery = String.Format(@"SELECT SUM(WOEstFGItem.PPWOEstFGItemRQty) FROM dbo.PPWOEstFGItems WOEstFGItem
                                            INNER JOIN dbo.PPWOs WO ON WO.PPWOID = WOEstFGItem.FK_PPWOID
                                            WHERE WO.AAStatus = 'Alive'
                                            AND WOEstFGItem.PPWOEstFGItemRQty > 0
                                            AND WOEstFGItem.FK_ICProductID = {0}
                                            AND {1}
                                                ", iICProductID, strQueryDateWO);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            return 0;
        }

        #endregion

        /// <summary>
        /// Viet Nguyen 2013.01.09
        /// Get SUM Qty By ProductPlnItemID
        /// </summary>
        public double GetSumFieldQtyByProductPlanItemID(int iPPProductPlnItemID,string strFieldQty)
        {
            String strQuery = String.Format(@"SELECT SUM({1}) FROM PPWOEstFGItems WHERE FK_PPProductPlnItemID = {0} 
                                                            AND FK_PPWOID IN (SELECT PPWOID FROM PPWOs WHERE AAStatus = 'ALive' 
                                                                            )"
                                                , iPPProductPlnItemID, strFieldQty);

            DataSet ds = GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }

            return 0;
        }

        /// <summary>
        /// Viet Nguyen 2013.01.09
        /// Get Last Finish Date In WOItem For ProductPln
        /// </summary>
        public Nullable<DateTime> GetLastFinishDateForProductPln(int iPPProductPlnItemID)
        {
            String strQuery = String.Format(@"select top 1 PPWOEstFGItemLastFinishDate from PPWOEstFGItems where
                                                 FK_PPProductPlnItemID = {0} 
		                                         AND FK_PPWOID IN (SELECT PPWOID FROM PPWOs WHERE AAStatus= 'Alive')
                                                      Order By PPWOEstFGItemLastFinishDate Desc", iPPProductPlnItemID);

            DataSet ds = dal.GetDataSet(strQuery);

            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != null && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDateTime(ds.Tables[0].Rows[0][0]);
            }

            return null;
        }

        /// <summary>
        /// Viet Nguyen 2013.01.24
        /// Get Qty In WO By ARShpPlanItemID
        /// </summary>
        public double GetQtyInFGWOByARShpPlanItemID(int iARShpPlanItemID)
        {
            string strQuery = string.Format(@"Select SUM(PPWOEstFGItemQty) from PPWOEstFGItems where 
                                                  FK_PPWOID in (Select PPWOID from PPWOs where AAStatus='Alive')
                                                 AND FK_PPProductPlnItemID in (Select PPProductPlnItemID from PPProductPlnItems where AAStatus='Alive' AND FK_ARShpPlanItemID={0})
                                                ", iARShpPlanItemID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                try
                {
                    return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
                }
                catch (System.Exception ex)
                {

                }
            }
            return 0;
        }

        /// <summary>
        /// Viet Nguyen 2013.01.24
        /// Get Qty In WO By ARSOItemID
        /// </summary>
        public double GetQtyInFGWOByARSOItemID(int iARSOItemID)
        {
            string strQuery = string.Format(@"Select SUM(PPWOEstFGItemQty) from PPWOEstFGItems where 
                                                  FK_PPWOID in (Select PPWOID from PPWOs where AAStatus='Alive')
                                                 AND FK_PPProductPlnItemID in (Select PPProductPlnItemID from PPProductPlnItems where AAStatus='Alive' 
                                                        AND FK_ARShpPlanItemID in (select ARShpPlanItemID From ARShpPlanItems where AAStatus='Alive' AND FK_ARSOItemID={0}))
                                                ", iARSOItemID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                try
                {
                    return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
                }
                catch (System.Exception ex)
                {

                }
            }
            return 0;
        }
        #region Get Data By Product SO EstEndDate

        /// <summary>
        /// Viet Nguyen 2014.08.04
        /// Lấy tổng số lượng còn lại theo sản phẩm, đơn hàng và thời gian dự kiến hoàn thành
        /// </summary>
        /// <param name="ProductID"></param>
        /// <param name="fromDate"></param>
        /// <param name="ToDate"></param>
        /// <returns></returns>
        public double GetSUMOrdrRQtyByProductSOAndEstEndDateInRange(int ProductID, int iARSOID, DateTime fromDate, DateTime ToDate)
        {
            String strQuery = GenerateQueryByProductSOAndEstEndDateInRange(ProductID, iARSOID, fromDate, ToDate, "Sum(PPWOEstFGItemRQty-PPWOEstFGItemCQty)");
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            return 0;
        }

        /// <summary>
        /// Viet Nguyen 2014.08.04
        /// Lấy Item còn tổng số lượng còn lại theo sản phẩm, đơn hàng và thời gian dự kiến hoàn thành
        /// </summary>
        /// <param name="ProductID"></param>
        /// <param name="fromDate"></param>
        /// <param name="ToDate"></param>
        /// <returns></returns>
        public DataSet GetAllDataByProductSOAndEstEndDateInRange(int ProductID, int iARSOID, DateTime fromDate, DateTime ToDate)
        {
            String strQuery = GenerateQueryByProductSOAndEstEndDateInRange(ProductID, iARSOID, fromDate, ToDate, "*");
            return dal.GetDataSet(strQuery);
        }

        private string GenerateQueryByProductSOAndEstEndDateInRange(int ProductID, int iARSOID, DateTime fromDate, DateTime ToDate, string strSelect)
        {
            string strQueryDateWO = DALUtil.GenerateBeetween("PPWODate", fromDate, ToDate);
            String strQuery = String.Format(@"SELECT {3} FROM dbo.PPWOEstFGItems WOEstFGItem
                                            INNER JOIN dbo.PPWOs WO ON WO.PPWOID = WOEstFGItem.FK_PPWOID
                                            WHERE WO.AAStatus = 'Alive'
                                            AND (WOEstFGItem.PPWOEstFGItemRQty - PPWOEstFGItemCQty) > 0
                                            AND WOEstFGItem.FK_ICProductID = {0}
                                            AND {1}
                                            AND (FK_ARSOID={2} or {2}=0)
                                                ", ProductID, strQueryDateWO, iARSOID, strSelect);
            return strQuery;
        }

        #endregion

        // NhamNDH add -25/11/2016- Move lệnh sản xuất từ CHF
        public DataSet GetAllDataByMPSANDProduct(int iPPMPSID, int iICProductID)
        {
            string strQuery = string.Format(@"SELECT * FROM dbo.PPWOEstFGItems INNER JOIN dbo.PPWOs
                                            ON (PPWOs.PPWOID = PPWOEstFGItems.FK_PPWOID
                                            AND PPWOs.AAStatus = 'Alive' )                                           
                                            WHERE PPWOs.FK_PPMPSID = {0} AND PPWOEstFGItems.FK_ICProductID = {1}", iPPMPSID, iICProductID);
            return GetDataSet(strQuery);
        }
        //
        public DataSet  GetSumQtyWO()
        {
            string strQuery = string.Format(@"  SELECT total.FK_ICProductID,
		                                                SUM(PPWOEstFGItemQty) AS PPWOEstFGItemQty
                                                FROM
                                                (
	                                                SELECT
		                                                PPWOEstFGItems.FK_ICProductID,
		                                                SUM(PPWOEstFGItems.PPWOEstFGItemRQty) AS PPWOEstFGItemQty
	                                                FROM dbo.PPWOEstFGItems
		                                                INNER JOIN dbo.PPWOs ON PPWOs.PPWOID = PPWOEstFGItems.FK_PPWOID
								                                                AND dbo.PPWOs.AAStatus = 'Alive'
	                                                WHERE
		                                                PPWOEstFGItems.PPWOEstFGItemRQty > 0
	                                                GROUP BY PPWOEstFGItems.FK_ICProductID
                                                UNION ALL
	                                                SELECT
		                                                PPProductionOrdrEstFGs.FK_ICProductID,
		                                                SUM(PPProductionOrdrEstFGs.PPProductionOrdrEstFGRQty) * (-1) AS PPWOEstFGItemQty
	                                                FROM PPProductionOrdrEstFGs
		                                                INNER JOIN dbo.PPProductionOrdrs ON PPProductionOrdrs.PPProductionOrdrID = PPProductionOrdrEstFGs.FK_PPProductionOrdrID 
										                                                AND PPProductionOrdrs.AAStatus = 'Alive'
	                                                WHERE 
		                                                PPProductionOrdrEstFGs.AAStatus = 'Alive'			
		                                                AND PPProductionOrdrEstFGs.PPProductionOrdrEstFGRQty > 0
	                                                GROUP BY PPProductionOrdrEstFGs.FK_ICProductID) AS total
                                                GROUP BY total.FK_ICProductID");

            return GetDataSet(strQuery);

        }
        //NhamNDH add -06/12/2016- lấy công việc sản xuất theo WOID và PhaseCfg
        public DataSet GetDataByPPWOIDAndPPPhaseCfgID(int pPWOID,int pPPhaseCfgID)
        {
            string strPPPhaseCfg = string.Format(@"  AND PPWOEstFGItems.FK_PPPhaseCfgID = {0}", pPPhaseCfgID);
            string strOderBy = "  ORDER BY PPWOEstFGItems.PPWOEstFGItemPlanDate ASC";
            string strQuery = string.Format(@"  SELECT PPWOEstFGItems.*
                                                FROM dbo.PPWOEstFGItems
                                                INNER JOIN	dbo.PPWOs ON PPWOs.PPWOID = PPWOEstFGItems.FK_PPWOID AND PPWOs.AAStatus='Alive'
                                                WHERE PPWOEstFGItems.FK_PPWOID = {0}"
                                            , pPWOID);
            if (pPPhaseCfgID != 0)
            {
                strQuery += strPPPhaseCfg;
                strQuery += strOderBy;
            }
            else strQuery += strOderBy;
            return dal.GetDataSet(strQuery);
        }
        //NhamNDH add -08/12/2016- lấy công việc sản xuất theo WOID, WorkCenterID và PhaseCfgID
        public DataSet GetDataByPPWOIDAndPPPhaseCfgIDAndPPWorkCenterID(int pPWOID, int pPWorkCenterID, int pPPhaseCfgID)
        {
            string strQuery = string.Format(@"      SELECT PPWOEstFGItems.*
                                                    FROM dbo.PPWOEstFGItems
                                                        INNER JOIN dbo.PPWOs
                                                            ON PPWOs.PPWOID = PPWOEstFGItems.FK_PPWOID
                                                                AND PPWOs.AAStatus = 'Alive'	                                                    
                                                            WHERE     PPWOEstFGItems.FK_PPWOID = {0}
                                                                    AND (PPWOEstFGItems.FK_PPPhaseCfgID = {1}
                                                                    OR 0 = {1})
                                                                    AND (PPWOEstFGItems.FK_PPWorkCenterID = {2}
                                                                    OR 0 = {2})
                                                            ORDER BY  PPWOEstFGItems.PPWOEstFGItemPlanDate ASC", pPWOID, pPPhaseCfgID, pPWorkCenterID);

            return dal.GetDataSet(strQuery);
        }
        //

        // NhamNDH -06/2017- Tổng hợp các lệnh sản xuát theo Tuần/năm
        public DataSet GetListDataWOAllWeek(int iYear = 0, int iWeek = 0)
        {
            string strQuery = string.Format(@"  SELECT WOItem.FK_PPWOID,WOItem.FK_ICProductID
		                                                ,WOItem.FK_PPPhaseCfgID,WOItem.FK_ICUOMID
		                                                ,WOItem.FK_PPWorkCenterID,WOItem.FK_ARSOID
		                                                ,SUM(ISNULL(WOItem.PPWOEstFGItemQty,0)) AS PPWOEstFGItemQty
		                                                ,WOItem.PPWOEstFGItemWeek
                                                        ,WOItem.PPWOEstFGItemYear
                                                FROM dbo.PPWOs WO
                                                INNER JOIN dbo.PPWOEstFGItems WOItem ON WOItem.FK_PPWOID = WO.PPWOID
                                                WHERE WO.AAStatus ='Alive' 
                                                        AND (WOItem.PPWOEstFGItemWeek = {0} OR({0}=0 AND WOItem.PPWOEstFGItemWeek > 0))
                                                        AND (WOItem.PPWOEstFGItemYear = {1} OR {1}=0)
                                                GROUP BY WOItem.FK_PPWOID,WOItem.FK_ICProductID
		                                                ,WOItem.FK_PPPhaseCfgID,WOItem.FK_ICUOMID
		                                                ,WOItem.FK_PPWorkCenterID,WOItem.FK_ARSOID
		                                                ,WOItem.PPWOEstFGItemWeek
                                                        ,WOItem.PPWOEstFGItemYear
                                                ORDER BY WOItem.FK_PPWOID,WOItem.PPWOEstFGItemWeek,WOItem.PPWOEstFGItemYear
                                            ", iWeek,iYear);
            return dal.GetDataSet(strQuery);
        }
        // NhamNDH -06/2017- Tổng hợp kế hoạch lên lịch sản xuất của Lệnh sản xuất
        public DataSet GetDataWOCalendar(int iWOID, int iPhaseCfgID, int iWeek)
        {
            string strQuery = string.Format(@"  IF OBJECT_ID('tempdb..#WO') IS NOT NULL
                                                    DROP TABLE #WO;
                                                SELECT WOItem.FK_PPWOID,
                                                        WOItem.FK_ARSOID,
														WOItem.FK_ARSOItemID,
                                                        WOItem.FK_ICProductID,
                                                        WOItem.FK_ICUOMID,
                                                        WOItem.FK_PPPhaseCfgID,
                                                        WOItem.FK_PPWorkCenterID,
                                                        WOItem.PPWOEstFGItemLotNo AS ViewProductionCalendarLotNo,
                                                        WOItem.PPWOEstFGItemPlanDate AS ViewProductionCalendarPlanDate,
                                                        WOItem.FK_PPRoutingID,
                                                        WOItem.PPWOEstFGItemWeek AS ViewProductionCalendarWeek,
                                                        WOItem.PPWOEstFGItemYear AS ViewProductionCalendarYear,
                                                        SUM(ISNULL(WOItem.PPWOEstFGItemQty, 0)) AS ViewProductionCalendarWOQty
                                                INTO #WO
                                                FROM dbo.PPWOs WO
                                                    INNER JOIN dbo.PPWOEstFGItems WOItem
                                                        ON WOItem.FK_PPWOID = WO.PPWOID
                                                WHERE WO.AAStatus = 'Alive'
                                                        AND (
                                                                (
                                                                    WOItem.FK_PPWOID = {0}
                                                                    OR 0 = {0}
                                                                )
                                                                AND (
                                                                        WOItem.PPWOEstFGItemWeek = {2}
                                                                        OR {2} = 0
                                                                    )
                                                            )
                                                        AND (
                                                                WOItem.FK_PPPhaseCfgID = {1}
                                                                OR {1} = 0
                                                            )
                                                GROUP BY WOItem.FK_PPWOID,
                                                            WOItem.FK_ARSOID,
															WOItem.FK_ARSOItemID,
                                                            WOItem.FK_ICProductID,
                                                            WOItem.FK_ICUOMID,
                                                            WOItem.FK_PPPhaseCfgID,
                                                            WOItem.FK_PPWorkCenterID,
                                                            WOItem.PPWOEstFGItemLotNo,
                                                            WOItem.PPWOEstFGItemPlanDate,
                                                            WOItem.FK_PPRoutingID,
                                                            WOItem.PPWOEstFGItemWeek,
                                                            WOItem.PPWOEstFGItemYear;

                                                SELECT #WO.*,
                                                        SUM(ISNULL(WOCalendar.PPProductionCalendarQty, 0)) AS ViewProductionCalendarQty,
                                                        (#WO.ViewProductionCalendarWOQty - SUM(ISNULL(WOCalendar.PPProductionCalendarQty, 0))) AS ViewProductionCalendarRQty
                                                FROM #WO
                                                    LEFT JOIN dbo.PPProductionCalendars WOCalendar
                                                        ON WOCalendar.FK_ARSOID = #WO.FK_ARSOID
														   AND WOCalendar.FK_ARSOItemID = #WO.FK_ARSOItemID
                                                           AND WOCalendar.FK_ICProductID = #WO.FK_ICProductID
                                                           AND WOCalendar.FK_PPPhaseCfgID = #WO.FK_PPPhaseCfgID
                                                           AND WOCalendar.FK_PPRoutingID = #WO.FK_PPRoutingID
                                                           AND WOCalendar.FK_PPWOID = #WO.FK_PPWOID
                                                           AND WOCalendar.FK_PPWorkCenterID = #WO.FK_PPWorkCenterID
                                                           --AND WOCalendar.PPProductionCalendarWeek = #WO.ViewProductionCalendarWeek
                                                           --AND WOCalendar.PPProductionCalendarYear = #WO.ViewProductionCalendarYear
                                                           AND WOCalendar.AAStatus = 'Alive'
                                                GROUP BY #WO.FK_PPWOID,
                                                         #WO.FK_ARSOID,
														 #WO.FK_ARSOItemID,
                                                         #WO.FK_ICProductID,
                                                         #WO.FK_ICUOMID,
                                                         #WO.FK_PPPhaseCfgID,
                                                         #WO.FK_PPWorkCenterID,
                                                         #WO.ViewProductionCalendarLotNo,
                                                         #WO.ViewProductionCalendarPlanDate,
                                                         #WO.FK_PPRoutingID,
                                                         #WO.ViewProductionCalendarWeek,
                                                         #WO.ViewProductionCalendarYear,
                                                         #WO.ViewProductionCalendarWOQty;
                                                IF OBJECT_ID('tempdb..#WO') IS NOT NULL
                                                    DROP TABLE #WO;
                                            ", iWOID, iPhaseCfgID, iWeek);
            return dal.GetDataSet(strQuery);
        }        
    }
	#endregion
}