using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region PPProductionCostCenters
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:PPProductionCostCentersController
	//Created Date:20 Tháng Mười Một 2014
	//-----------------------------------------------------------
	
	public class PPProductionCostCentersController:BaseBusinessController
	{
		public PPProductionCostCentersController()
		{
			dal= new DALBaseProvider("PPProductionCostCenters",typeof(PPProductionCostCentersInfo));
		}

        public void DeleteAllDataByYearANDPeriod(int iYear, int iPeriod)
        {
            String str = String.Format(@"   DELETE dbo.PPProductionCostCenters
                                            WHERE PPYear = {0}
                                            AND PPPeriod = {1}"
                                            , iYear, iPeriod);
            dal.GetDataSet(str);
        }

        public DataSet GetAllDataByYearANDPeriod(int iYear, int iPeriod)
        {
            String str = String.Format(@"   SELECT * FROM dbo.PPProductionCostCenters
                                            WHERE PPYear = {0}
                                            AND PPPeriod = {1}"
                                            , iYear, iPeriod);
            return dal.GetDataSet(str);
        }

        public PPProductionCostCentersInfo GetDataByYearANDPeriodByPPCostCenter(int iYear, int iPeriod, int iPPCostCenterID)
        {
            String str = String.Format(@"   SELECT * FROM dbo.PPProductionCostCenters
                                            WHERE PPYear = {0}
                                            AND PPPeriod = {1}
                                            AND FK_PPCostCenterID = {2}"
                                            , iYear, iPeriod, iPPCostCenterID);
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return (PPProductionCostCentersInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }
               
        public Boolean CheckDataInYearANDPeriod(int iYear, int iPeriod)
        {
            DataSet ds = GetAllDataByYearANDPeriod(iYear, iPeriod);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0) return true;
            return false;
        }

        public DataSet GetAllChildByKey(int iYear, int iPeriod, string spKey = "", bool bGetDummy = false)
        {
            if (spKey.Length > 0)
                spKey = string.Format(@"
                            AND ({0})", spKey);
            String strQuery = string.Empty;
            if (bGetDummy)
                strQuery += String.Format(@"SELECT Top 1 * FROM dbo.PPProductionCostCenters WHERE AAStatus = 'Dummy'
UNION ALL
");
            strQuery += String.Format(@"SELECT a.* FROM dbo.PPProductionCostCenters a
                                        WHERE a.PPYear = {0} AND a.PPPeriod = {1} {2}
                                        AND PPProductionCostCenterID NOT IN (
                                                                                SELECT DISTINCT b.FK_PPProductionCostCenterParentID 
                                                                                FROM dbo.PPProductionCostCenterChilds b
                                                                                WHERE b.PPYear = a.PPYear
											                                          AND b.PPPeriod = a.PPPeriod
                                                                            )
                                        ", iYear, iPeriod, spKey);

            return dal.GetDataSet(strQuery);
        }
	}
	#endregion
}