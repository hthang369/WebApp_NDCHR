using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region PPWorkingEnvs
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:PPWorkingEnvsController
	//Created Date:30 Tháng Tám 2013
	//-----------------------------------------------------------
	
	public class PPWorkingEnvsController:BaseBusinessController
	{
		public PPWorkingEnvsController()
		{
			dal= new DALBaseProvider("PPWorkingEnvs",typeof(PPWorkingEnvsInfo));
		}

        /// <summary>
        /// Viet Nguyen 2013.08.31
        /// Get EfficiencyPct By Date (PPWorkingEnvDate<=dteDate)
        /// </summary>
        public double GetWorkingEfficiencyPctByDate(DateTime dteDate)
        {
            string strQueryDate = DALUtil.GennerateCondition("PPWorkingEnvDate", CompareType.LessEqualThan, dteDate);
            string strQuery = string.Format(@"Select Top 1 * from PPWorkingEnvs where AAStatus='Alive' AND {0} Order by PPWorkingEnvDate Desc", strQueryDate);
            DataSet ds = dal.GetDataSet(strQuery);
            if(ds!=null&&ds.Tables.Count>0&&ds.Tables[0].Rows.Count>0)
            {
                PPWorkingEnvsInfo WorkingEnv = (PPWorkingEnvsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                return WorkingEnv.PPWorkingEnvScore * new PPEnvScoresController().GetEfficiencyPctByScore(WorkingEnv.PPWorkingEnvScore);
            }
            return 0;
        }

        /// <summary>
        /// Viet Nguyen 2013.08.31
        /// Get WorkingEnv By Date (PPWorkingEnvDate<=dteDate)
        /// </summary>
        public PPWorkingEnvsInfo GetWorkingEnvByDate(DateTime dteDate)
        {
            string strQueryDate = DALUtil.GennerateCondition("PPWorkingEnvDate", CompareType.LessEqualThan, dteDate);
            string strQuery = string.Format(@"Select Top 1 * from PPWorkingEnvs where AAStatus='Alive' AND {0} Order by PPWorkingEnvDate Desc", strQueryDate);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                PPWorkingEnvsInfo WorkingEnv = (PPWorkingEnvsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
                return WorkingEnv;
            }
            return null;
        }
	}
	#endregion
}