using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region FAAssetDeprItems

	//-----------------------------------------------------------
	//Generated By: Expert Studio
	//Class:FAAssetDeprItemsController
	//Created Date:Tuesday, April 05, 2011
	//-----------------------------------------------------------
	
	public class FAAssetDeprItemsController:BaseBusinessController
	{
		public FAAssetDeprItemsController()
		{
			dal= new DALBaseProvider("FAAssetDeprItems",typeof(FAAssetDeprItemsInfo));
		}

        public double GetTolAmtAssetDeprItemByLOCarPeriodAndYear(int LOCarID, int Period, int Year)
        {
            String query = String.Format("Select Sum(FAAssetDeprItemAmt) From FAAssetDeprItems Where AAStatus = 'Alive' And FK_LOCarID = {0} And FK_FAAssetDeprID In (Select FAAssetDeprID From FAAssetDeprs Where AAStatus = 'Alive' And FAPeriod = {1} And FAYear = {2})", LOCarID, Period, Year);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return (double)ds.Tables[0].Rows[0][0];

            return 0;
        }

        public double GetTolAmtAssetDeprItemByPeriodAndYearAndCostCenter(int Period, int Year, int CostCenterID)
        {
            String query = String.Format("Select Sum(FAAssetDeprItemAmt) From FAAssetDeprItems Where AAStatus = 'Alive' And FK_GLCostCenterID = {2} And FK_FAAssetDeprID In (Select FAAssetDeprID From FAAssetDeprs Where AAStatus = 'Alive' And FAPeriod = {0} And FAYear = {1})", Period, Year, CostCenterID);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return (double)ds.Tables[0].Rows[0][0];

            return 0;
        }

        public DataSet GetAllObjectByLOCarPeriodAndYear(int LOCarID, int Period, int Year)
        {
            String query = String.Format("Select * From FAAssetDeprItems Where AAStatus = 'Alive' And FK_LOCarID = {0} And FK_FAAssetDeprID In (Select FAAssetDeprID From FAAssetDeprs Where AAStatus = 'Alive' And FAPeriod = {1} And FAYear = {2})", LOCarID, Period, Year);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return ds;

            return null;
        }

        public double GetTolAmtAssetDeprItemByCostCenterPeriodAndYear(int CostCenterID, int Period, int Year)
        {
            String query = String.Format("Select Sum(FAAssetDeprItemAmt) From FAAssetDeprItems Where AAStatus = 'Alive' And FK_GLCostCenterID = {0} And FK_FAAssetDeprID In (Select FAAssetDeprID From FAAssetDeprs Where AAStatus = 'Alive' And FAPeriod = {1} And FAYear = {2})", CostCenterID, Period, Year);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return (double)ds.Tables[0].Rows[0][0];

            return 0;
        }

        public DataSet GetAllObjectByCostCenterPeriodAndYearGroupByCar(int CostCenterID, int Period, int Year)
        {
            String query = String.Format("Select * From FAAssetDeprItems Where AAStatus = 'Alive' And FK_LOCarID <> 0 And FK_GLCostCenterID = {0} And FK_FAAssetDeprID In (Select FAAssetDeprID From FAAssetDeprs Where AAStatus = 'Alive' And FAPeriod = {1} And FAYear = {2})", CostCenterID, Period, Year);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return ds;

            return null;
        }

        public DataSet GetAllObjectByCarCostCenterPeriodAndYearGroupByCar(int LOCarID, int CostCenterID, int Period, int Year)
        {
            String query = String.Format("Select * From FAAssetDeprItems Where AAStatus = 'Alive' And FK_LOCarID = {0} And FK_GLCostCenterID = {1} And FK_FAAssetDeprID In (Select FAAssetDeprID From FAAssetDeprs Where AAStatus = 'Alive' And FAPeriod = {2} And FAYear = {3})", LOCarID, CostCenterID, Period, Year);
            DataSet ds = dal.GetDataSet(query);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                return ds;

            return null;
        }

        #region Get Amt And Life By FAAssets --Vinh --26/11/2012
        public double GetAmtByFAAset(int iAssetID)
        { 
            return GetAmtByFAAset(iAssetID,DateTime.MaxValue);
        }
        public double GetAmtByFAAset(int iAssetID,DateTime dtTo)
        {
            return GetSumColAmtByAsset(iAssetID, dtTo, "FAAssetDeprItemAmt");
        }
        public double GetLifeByFAAset(int iAssetID)
        {
            return GetLifeByFAAset(iAssetID, DateTime.MaxValue);
        }
        public double GetLifeByFAAset(int iAssetID, DateTime dtTo)
        {
            String str = String.Format(@"SELECT COUNT(*) 
FROM FAAssetDeprItems a
INNER JOIN FAAssetDeprs b ON a.AAStatus='Alive' AND b.AAStatus='Alive' AND a.FK_FAAssetDeprID = b.FAAssetDeprID 
    AND FK_FAAssetID={0}
", iAssetID);
            if (dtTo < DateTime.MaxValue & dtTo > DateTime.MinValue)
            {
                str += string.Format(@" AND FAAssetDeprDate <= '{0}'", dtTo.ToString("yyyyMMdd"));
            }
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return double.Parse(ds.Tables[0].Rows[0][0].ToString());
            }
            return 0;
        }
        public double GetSumColAmtByAsset(int iAssetID, DateTime dtTo, string sColAmt)
        {
            String str = String.Format(@"SELECT SUM({1}) 
FROM FAAssetDeprItems a 
INNER JOIN FAAssetDeprs b ON a.AAStatus='Alive' AND b.AAStatus='Alive' AND a.FK_FAAssetDeprID = b.FAAssetDeprID
    AND a.FK_FAAssetID={0}
", iAssetID, sColAmt);
            if (dtTo < DateTime.MaxValue & dtTo > DateTime.MinValue)
            {
                str += string.Format(@" AND FAAssetDeprDate <= '{0}'", dtTo.ToString("yyyyMMdd"));
            }
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return double.Parse(ds.Tables[0].Rows[0][0].ToString());
            }
            return 0;
        }
        #endregion

        public DataSet GetDataARinvoiceByDate()
        {
            string strQuery = string.Format(@"SELECT  ICProductNo ,
        ICProductName ,
        ICProductStkUOM ,
        ARInvoiceDate ,
        ARInvoiceItems.ARInvoiceItemQty ,
        ARInvoiceItems.ARInvoiceItemPrice ,
        ARInvoiceItems.ARInvoiceItemUnitPrice ,
        ARInvoiceItems.ARInvoiceItemStkUOM
FROM    dbo.ARInvoices ARInvoices
        INNER JOIN dbo.ARInvoiceItems ARInvoiceItems ON ARInvoiceItems.FK_ARInvoiceID = ARInvoices.ARInvoiceID
        INNER JOIN dbo.ICProducts ON dbo.ICProducts.ICProductID = ARInvoiceItems.FK_ICProductID
WHERE   ARInvoiceItems.AAStatus='Alive'
        AND ARInvoices.AAStatus ='Alive'
        AND ICProducts.AAStatus ='Alive'"); 
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return ds;
            }

            return null;
        }
        public double GetDeprFAmtByFAAset(int iAssetID)
        {
            return GetDeprFAmtByFAAset(iAssetID, DateTime.MaxValue);
        }
        public double GetDeprFAmtByFAAset(int iAssetID, DateTime dtTo)
        {
            String str = String.Format(@"SELECT SUM(FAAssetDeprItemFAmt) 
FROM FAAssetDeprItems a
INNER JOIN FAAssetDeprs b ON a.AAStatus='Alive' AND b.AAStatus='Alive' AND a.FK_FAAssetDeprID = b.FAAssetDeprID 
    AND FK_FAAssetID={0}
", iAssetID);
            if (dtTo < DateTime.MaxValue & dtTo > DateTime.MinValue)
            {
                str += string.Format(@" AND FAAssetDeprDate <= '{0}'", dtTo.ToString("yyyyMMdd"));
            }
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return double.Parse(ds.Tables[0].Rows[0][0].ToString());
            }
            return 0;
        }

        #region GetData For ExportExcel AssetDepr -- Châu--14/08/2014
        // lấy giá trị nâng cấp TSCD đầu kỳ
        public double FAAssetBeginUpgradeItemPrice(int Year, int Period, int FAAssetID)
        {
            String strquery = "";
            strquery = string.Format(@" SELECT  ISNULL(SUM(FAAssetUpgradeItems.FAAssetUpgradeItemPrice), 0)
                                            FROM    dbo.FAAssetUpgradeItems FAAssetUpgradeItems
                                                    INNER JOIN dbo.FAAssetUpgrades FAAssetUpgrades ON FAAssetUpgradeItems.FK_FAAssetUpgradeID = FAAssetUpgrades.FAAssetUpgradeID
                                                                                                      AND FAAssetUpgradeItems.AAStatus = 'Alive'
                                                                                                      AND FAAssetUpgrades.AAStatus = 'Alive'
                                                                                                      AND FAAssetUpgradeItems.FK_FAAssetID = {2}
                                                                                                      AND ( 
                                                                                                            (
                                                                                                              MONTH(FAAssetUpgradeDate) + YEAR(FAAssetUpgradeDate) * 12  <  {0} * 12 + {1}  
                                                                                                              AND {1}>0
                                                                                                            )
                                                                                                            OR 
                                                                                                            (
                                                                                                              YEAR(FAAssetUpgradeDate)  <  {0} 
                                                                                                              AND {1}=0
                                                                                                            )
                                                                                                          )"
                                               , Year, Period, FAAssetID);

            DataSet ds = dal.GetDataSet(strquery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return (double)ds.Tables[0].Rows[0][0];

            return 0;
        }
        public double FAAssetBeginUpgradeItemFPrice(int Year, int Period, int FAAssetID)
        {
            String strquery = "";
            strquery = string.Format(@" SELECT  ISNULL(SUM(FAAssetUpgradeItems.FAAssetUpgradeItemFPrice), 0)
                                            FROM    dbo.FAAssetUpgradeItems FAAssetUpgradeItems
                                                    INNER JOIN dbo.FAAssetUpgrades FAAssetUpgrades ON FAAssetUpgradeItems.FK_FAAssetUpgradeID = FAAssetUpgrades.FAAssetUpgradeID
                                                                                                      AND FAAssetUpgradeItems.AAStatus = 'Alive'
                                                                                                      AND FAAssetUpgrades.AAStatus = 'Alive'
                                                                                                      AND FAAssetUpgradeItems.FK_FAAssetID = {2}
                                                                                                       AND ( 
                                                                                                            (
                                                                                                              MONTH(FAAssetUpgradeDate) + YEAR(FAAssetUpgradeDate) * 12  <  {0} * 12 + {1}  AND {1}>0
                                                                                                            )
                                                                                                            OR 
                                                                                                            (
                                                                                                              YEAR(FAAssetUpgradeDate)  <  {0} AND {1}=0
                                                                                                            )
                                                                                                          )"
                                           , Year, Period, FAAssetID);
           
            DataSet ds = dal.GetDataSet(strquery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return (double)ds.Tables[0].Rows[0][0];

            return 0;
        }

        // lấy giá trị nâng cấp TSCD trong kỳ
        public double FAAssetInUpgradeItemPrice(int Year, int Period, int FAAssetID)
        {
            String strquery = "";
            if (Period == 0)
            {
                strquery = string.Format(@" SELECT  ISNULL(SUM(FAAssetUpgradeItems.FAAssetUpgradeItemPrice), 0)
                                            FROM    dbo.FAAssetUpgradeItems FAAssetUpgradeItems
                                                    INNER JOIN dbo.FAAssetUpgrades FAAssetUpgrades ON FAAssetUpgradeItems.FK_FAAssetUpgradeID = FAAssetUpgrades.FAAssetUpgradeID
                                                                                                      AND FAAssetUpgradeItems.AAStatus = 'Alive'
                                                                                                      AND FAAssetUpgrades.AAStatus = 'Alive'
                                                                                                      AND FAAssetUpgradeItems.FK_FAAssetID = {2}
                                                                                                      AND ( MONTH(FAAssetUpgradeDate)
                                                                                                          + YEAR(FAAssetUpgradeDate)
                                                                                                          * 12 ) >= ( {0}
                                                                                                          * 12 + {1} )
                                                                                                      AND ( MONTH(FAAssetUpgradeDate)
                                                                                                          + YEAR(FAAssetUpgradeDate)
                                                                                                          * 12 ) <= ( {0}
                                                                                                          * 12 + 12 )"
                                                   , Year, Period, FAAssetID);
            }
            else
            {
                strquery = string.Format(@" SELECT  ISNULL(SUM(FAAssetUpgradeItems.FAAssetUpgradeItemPrice), 0)
                                            FROM    dbo.FAAssetUpgradeItems FAAssetUpgradeItems
                                                    INNER JOIN dbo.FAAssetUpgrades FAAssetUpgrades ON FAAssetUpgradeItems.FK_FAAssetUpgradeID = FAAssetUpgrades.FAAssetUpgradeID
                                                                                                      AND FAAssetUpgradeItems.AAStatus = 'Alive'
                                                                                                      AND FAAssetUpgrades.AAStatus = 'Alive'
                                                                                                      AND FAAssetUpgradeItems.FK_FAAssetID = {2}
                                                                                                      AND MONTH(FAAssetUpgradeDate) = {1}
                                                                                                      AND YEAR(FAAssetUpgradeDate) = {0}"
                                                     , Year, Period, FAAssetID);

            }
           
            DataSet ds = dal.GetDataSet(strquery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return (double)ds.Tables[0].Rows[0][0];

            return 0;
        }
        public double FAAssetInUpgradeItemFPrice(int Year, int Period, int FAAssetID)
        {
            String strquery = "";
            if (Period == 0)
            {
                strquery = string.Format(@" SELECT  ISNULL(SUM(FAAssetUpgradeItems.FAAssetUpgradeItemFPrice), 0)
                                            FROM    dbo.FAAssetUpgradeItems FAAssetUpgradeItems
                                                    INNER JOIN dbo.FAAssetUpgrades FAAssetUpgrades ON FAAssetUpgradeItems.FK_FAAssetUpgradeID = FAAssetUpgrades.FAAssetUpgradeID
                                                                                                      AND FAAssetUpgradeItems.AAStatus = 'Alive'
                                                                                                      AND FAAssetUpgrades.AAStatus = 'Alive'
                                                                                                      AND FAAssetUpgradeItems.FK_FAAssetID = {2}
                                                                                                      AND ( MONTH(FAAssetUpgradeDate)
                                                                                                          + YEAR(FAAssetUpgradeDate)
                                                                                                          * 12 ) >= ( {0}
                                                                                                          * 12 + {1} )
                                                                                                      AND ( MONTH(FAAssetUpgradeDate)
                                                                                                          + YEAR(FAAssetUpgradeDate)
                                                                                                          * 12 ) <= ( {0}
                                                                                                          * 12 + 12 )"
                                                   , Year, Period, FAAssetID);
            }
            else
            {
                strquery = string.Format(@" SELECT  ISNULL(SUM(FAAssetUpgradeItems.FAAssetUpgradeItemFPrice), 0)
                                            FROM    dbo.FAAssetUpgradeItems FAAssetUpgradeItems
                                                    INNER JOIN dbo.FAAssetUpgrades FAAssetUpgrades ON FAAssetUpgradeItems.FK_FAAssetUpgradeID = FAAssetUpgrades.FAAssetUpgradeID
                                                                                                      AND FAAssetUpgradeItems.AAStatus = 'Alive'
                                                                                                      AND FAAssetUpgrades.AAStatus = 'Alive'
                                                                                                      AND FAAssetUpgradeItems.FK_FAAssetID = {2}
                                                                                                      AND MONTH(FAAssetUpgradeDate) = {1}
                                                                                                      AND YEAR(FAAssetUpgradeDate) = {0}"
                                                     , Year, Period, FAAssetID);

            }
            DataSet ds = dal.GetDataSet(strquery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return (double)ds.Tables[0].Rows[0][0];

            return 0;
        }
      
        // lấy Giá trị giảm còn lại trước tháng hiện tại làm sàn làm khấu hao đầu kỳ
        public double GetDatasetDecreaseItemNetBookAmtFirstMonth(int iYear, int iMonth, int AssetID)
        {
            String strQuery = "";
            if (iMonth > 0)
            {
                strQuery = String.Format(@"  SELECT SUM(FAAssetDecreaseItemNetBookAmt) 
                                                FROM dbo.FAAssetDecreaseItems
                                                WHERE AAStatus = 'Alive'
                                                    AND FK_FAAssetID ={2}
                                                    AND FK_FAAssetDecreaseID 
	                                                    IN	(
		                                                    SELECT FAAssetDecreaseID 
		                                                    FROM 
			                                                    dbo.FAAssetDecreases 
		                                                    WHERE 
			                                                    AAStatus = 'Alive' 
			                                                    AND YEAR(FAAssetDecreaseDate)* 12 + MONTH(FAAssetDecreaseDate) < {0}*12+{1}
	                                                    )", iYear, iMonth, AssetID);
            }
            else
            {
                strQuery = String.Format(@"  SELECT SUM(FAAssetDecreaseItemNetBookAmt) 
                                                FROM dbo.FAAssetDecreaseItems
                                                WHERE AAStatus = 'Alive'
                                                    AND FK_FAAssetID = {1}
                                                    AND FK_FAAssetDecreaseID 
	                                                    IN	(
		                                                    SELECT FAAssetDecreaseID 
		                                                    FROM 
			                                                    dbo.FAAssetDecreases 
		                                                    WHERE 
			                                                    AAStatus = 'Alive' 
			                                                    AND YEAR(FAAssetDecreaseDate)< {0}
	                                                    )", iYear, AssetID);
            }
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return 0;
        }
        public double GetDatasetDecreaseItemNetBookFAmtFirstMonth(int iYear, int iMonth, int AssetID)
        {
            String strQuery = "";
            if (iMonth > 0)
            {
                strQuery = String.Format(@"  SELECT SUM(FAAssetDecreaseItemNetBookFAmt) 
                                                FROM dbo.FAAssetDecreaseItems
                                                WHERE AAStatus = 'Alive'
                                                    AND FK_FAAssetID ={2}
                                                    AND FK_FAAssetDecreaseID 
	                                                    IN	(
		                                                    SELECT FAAssetDecreaseID 
		                                                    FROM 
			                                                    dbo.FAAssetDecreases 
		                                                    WHERE 
			                                                    AAStatus = 'Alive' 
			                                                    AND YEAR(FAAssetDecreaseDate)* 12 + MONTH(FAAssetDecreaseDate) < {0}*12+{1}
	                                                    )", iYear, iMonth, AssetID);
            }
            else
            {
                strQuery = String.Format(@"  SELECT SUM(FAAssetDecreaseItemNetBookFAmt) 
                                                FROM dbo.FAAssetDecreaseItems
                                                WHERE AAStatus = 'Alive'
                                                    AND FK_FAAssetID = {1}
                                                    AND FK_FAAssetDecreaseID 
	                                                    IN	(
		                                                    SELECT FAAssetDecreaseID 
		                                                    FROM 
			                                                    dbo.FAAssetDecreases 
		                                                    WHERE 
			                                                    AAStatus = 'Alive' 
			                                                    AND YEAR(FAAssetDecreaseDate)< {0}
	                                                    )", iYear, AssetID);
            }
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return 0;
        }

        // lấy tổng giá trị giảm khấu hao lũy kế đầu kỳ
        public double GetDatasetBeginDecreaseItemAccumDeprAmt(int iYear, int iMonth, int AssetID)
        {
            String strQuery = "";
                strQuery = String.Format(@"  SELECT SUM(FAAssetDecreaseItemAccumDeprAmt) 
                                                FROM dbo.FAAssetDecreaseItems
                                                WHERE AAStatus = 'Alive'
                                                    AND FK_FAAssetID ={2}
                                                    AND FK_FAAssetDecreaseID 
	                                                    IN	(
		                                                    SELECT FAAssetDecreaseID 
		                                                    FROM 
			                                                    dbo.FAAssetDecreases 
		                                                    WHERE 
			                                                    AAStatus = 'Alive' 
			                                                    AND (
                                                                        (
                                                                            YEAR(FAAssetDecreaseDate)* 12 + MONTH(FAAssetDecreaseDate) < {0}*12+{1} 
                                                                            AND {1} > 0 
                                                                        )
                                                                        OR
                                                                        (
                                                                            YEAR(FAAssetDecreaseDate) < {0} 
                                                                            AND {1} = 0 
                                                                        )
                                                                    )
	                                                         )", iYear, iMonth, AssetID);
            
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return 0;
        }
        public double GetDatasetBeginDecreaseItemAccumDeprFAmt(int iYear, int iMonth, int AssetID)
        {
            String strQuery = "";
                strQuery = String.Format(@"  SELECT SUM(FAAssetDecreaseItemAccumDeprFAmt) 
                                                FROM dbo.FAAssetDecreaseItems
                                                WHERE AAStatus = 'Alive'
                                                    AND FK_FAAssetID ={2}
                                                    AND FK_FAAssetDecreaseID 
	                                                    IN	(
		                                                    SELECT FAAssetDecreaseID 
		                                                    FROM 
			                                                    dbo.FAAssetDecreases 
		                                                    WHERE 
			                                                    AAStatus = 'Alive' 
			                                                    AND (
                                                                        (
                                                                            YEAR(FAAssetDecreaseDate)* 12 + MONTH(FAAssetDecreaseDate) < {0}*12+{1} 
                                                                            AND {1} > 0 
                                                                        )
                                                                        OR
                                                                        (
                                                                            YEAR(FAAssetDecreaseDate) < {0} 
                                                                            AND {1} = 0 
                                                                        )
                                                                    )
	                                                        )", iYear, iMonth, AssetID);
            
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return 0;
        }

        // lấy giá trị thanh lý giá trị TSCD trong từng kỳ nếu có
        public double GetValueDecreaseItemInMonthByAsset(int iYear, int iMonth, int iAssetID)
        {
            String strQuery = String.Format(@"SELECT TOP 1 FAAssetDecreaseItemRAmt
                                                    FROM dbo.FAAssetDecreaseItems
                                                    WHERE AAStatus = 'Alive'
                                                    AND FK_FAAssetID 
	                                                    IN (
		                                                    SELECT FAAssetID 
		                                                    FROM 
			                                                    dbo.FAAssets 
		                                                    WHERE 
			                                                    AAStatus = 'Alive'
			                                                    AND	FAAssetID = {2}
	                                                    )
                                                    AND FK_FAAssetDecreaseID 
	                                                    IN	(
		                                                    SELECT FAAssetDecreaseID 
		                                                    FROM 
			                                                    dbo.FAAssetDecreases 
		                                                    WHERE 
			                                                    AAStatus = 'Alive' 
			                                                    AND YEAR(FAAssetDecreaseDate)={0} 
			                                                    AND MONTH(FAAssetDecreaseDate)={1}
	                                                    )", iYear, iMonth, iAssetID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return 0;
        }
        public double GetFValueDecreaseItemInMonthByAsset(int iYear, int iMonth, int iAssetID)
        {
            String strQuery = String.Format(@"SELECT TOP 1 FAAssetDecreaseItemRFAmt
                                                    FROM dbo.FAAssetDecreaseItems
                                                    WHERE AAStatus = 'Alive'
                                                    AND FK_FAAssetID 
	                                                    IN (
		                                                    SELECT FAAssetID 
		                                                    FROM 
			                                                    dbo.FAAssets 
		                                                    WHERE 
			                                                    AAStatus = 'Alive'
			                                                    AND	FAAssetID = {2}
	                                                    )
                                                    AND FK_FAAssetDecreaseID 
	                                                    IN	(
		                                                    SELECT FAAssetDecreaseID 
		                                                    FROM 
			                                                    dbo.FAAssetDecreases 
		                                                    WHERE 
			                                                    AAStatus = 'Alive' 
			                                                    AND YEAR(FAAssetDecreaseDate)={0} 
			                                                    AND MONTH(FAAssetDecreaseDate)={1}
	                                                    )", iYear, iMonth, iAssetID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return 0;
        }
        // lấy ds giá trị thanh lý giá trị TSCD trong từng kỳ nếu có
        public DataSet GetDecreaseItemInMonthByAsset(int iYear, int iMonth, int iAsset)
        {
            String strQuery = String.Format(@"SELECT *
                                                    FROM dbo.FAAssetDecreaseItems
                                                    WHERE AAStatus = 'Alive'
                                                    AND FK_FAAssetID 
	                                                    IN (
		                                                    SELECT FAAssetID 
		                                                    FROM 
			                                                    dbo.FAAssets 
		                                                    WHERE 
			                                                    AAStatus = 'Alive' AND FAAssetID = {2}
	                                                    )
                                                    AND FK_FAAssetDecreaseID 
	                                                    IN	(
		                                                    SELECT FAAssetDecreaseID 
		                                                    FROM 
			                                                    dbo.FAAssetDecreases 
		                                                    WHERE 
			                                                    AAStatus = 'Alive' 
			                                                    AND YEAR(FAAssetDecreaseDate)={0} 
                                                                AND (MONTH(FAAssetDecreaseDate)={1} OR {1}=0)
	                                                    )", iYear, iMonth, iAsset);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return ds;
            }
            return null;
        }
        // Lấy tổng tháng khấu hao tính tới thời điểm thời gián đưa vào
        public double GetSumMonthDeprItemAmtFirstMonth(int iYear, int iMonth, int AssetID)
        {
            String strQuery = "";
            if (iMonth > 0)
            {
                strQuery = String.Format(@"  SELECT COUNT(FAAssetDeprItemAmt) 
                                                FROM dbo.FAAssetDeprItems
                                                WHERE AAStatus = 'Alive'
                                                AND FAAssetDeprYear * 12 +FAAssetDeprPeriod <= {0}*12 + {1}
                                                AND FK_FAAssetID = {2}
                                                AND FK_FAAssetDeprID IN (SELECT FAAssetDeprID FROM FAAssetDeprs WHERE AAStatus = 'Alive')", iYear, iMonth, AssetID);
            }
            else
            {
                strQuery = String.Format(@"  SELECT COUNT(FAAssetDeprItemAmt) 
                                                FROM dbo.FAAssetDeprItems
                                                WHERE AAStatus = 'Alive'
                                                AND FAAssetDeprYear <= {0}
                                                AND FK_FAAssetID = {1}
                                                AND FK_FAAssetDeprID IN (SELECT FAAssetDeprID FROM FAAssetDeprs WHERE AAStatus = 'Alive')", iYear, AssetID);
            }
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return 0;
        }

        // lấy khấu hao tài sản trước thời điểm thời gian đưa vào làm khấu hao đầu kỳ
        public double GetDatasetDeprItemAmtFirstMonth(int iYear, int iMonth, int AssetID)
        {
            String strQuery = "";
            if (iMonth > 0)
            {
                strQuery = String.Format(@"  SELECT SUM(FAAssetDeprItemAmt) 
                                                FROM dbo.FAAssetDeprItems
                                                WHERE AAStatus = 'Alive'
                                                AND FAAssetDeprYear * 12 +FAAssetDeprPeriod < {0}*12 + {1}
                                                AND FK_FAAssetID = {2}
                                                AND FK_FAAssetDeprID IN (SELECT FAAssetDeprID FROM FAAssetDeprs WHERE AAStatus = 'Alive')", iYear, iMonth, AssetID);
            }
            else
            {
                strQuery = String.Format(@"  SELECT SUM(FAAssetDeprItemAmt) 
                                                FROM dbo.FAAssetDeprItems
                                                WHERE AAStatus = 'Alive'
                                                AND FAAssetDeprYear < {0}
                                                AND FK_FAAssetID = {1}
                                                AND FK_FAAssetDeprID IN (SELECT FAAssetDeprID FROM FAAssetDeprs WHERE AAStatus = 'Alive')", iYear, AssetID);
            }
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return 0;
        }
        public double GetDatasetDeprItemFAmtFirstMonth(int iYear, int iMonth, int AssetID)
        {
            String strQuery = "";
            if (iMonth > 0)
            {
                strQuery = String.Format(@"  SELECT SUM(FAAssetDeprItemFAmt) 
                                                FROM dbo.FAAssetDeprItems
                                                WHERE AAStatus = 'Alive'
                                                AND FAAssetDeprYear * 12 +FAAssetDeprPeriod < {0}*12 + {1}
                                                AND FK_FAAssetID = {2}
                                                AND FK_FAAssetDeprID IN (SELECT FAAssetDeprID FROM FAAssetDeprs WHERE AAStatus = 'Alive')", iYear, iMonth, AssetID);
            }
            else
            {
                strQuery = String.Format(@"  SELECT SUM(FAAssetDeprItemFAmt) 
                                                FROM dbo.FAAssetDeprItems
                                                WHERE AAStatus = 'Alive'
                                                AND FAAssetDeprYear < {0}
                                                AND FK_FAAssetID = {1}
                                                AND FK_FAAssetDeprID IN (SELECT FAAssetDeprID FROM FAAssetDeprs WHERE AAStatus = 'Alive')", iYear, AssetID);
            }
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
            {
                return Convert.ToDouble(ds.Tables[0].Rows[0][0]);
            }
            return 0;
        }
        // lấy khấu khao tài sản cố định (Khấu hao trong Kỳ)
        public DataSet GetDatasetDepr(int iYear, int iMonth)
        {
            String strQuery = String.Format(@" SELECT * FROM dbo.FAAssetDeprItems
                                                WHERE AAStatus = 'Alive'
                                                AND FAAssetDeprYear = {0} AND (FAAssetDeprPeriod = {1} OR 0 = {1})
                                                AND FK_FAAssetDeprID IN (SELECT FAAssetDeprID FROM FAAssetDeprs WHERE AAStatus = 'Alive')", iYear, iMonth);
            return dal.GetDataSet(strQuery);
        }
       
        //(LINHCLH - 25.02.2014 - Lay thong tin chuyen TSCD sang CCDC trong thang
        public DataSet GetAsset2EquipmentInMonthByAssetID(int iYear, int iMonth, int iAsset)
        {
            String strQuery = String.Format(@"SELECT *
                                                FROM GLEquipmentAllocates 
                                                WHERE AAStatus = 'Alive' AND FK_FAAssetID > 0
	                                                AND GLEquipmentAllocateYear = {0}
                                                    AND GLEquipmentAllocatePeriod = {1}
	                                                AND FK_FAAssetID = {2}", iYear, iMonth, iAsset);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return ds;
            }
            return null;
        }
        #endregion

        public double GetLastDeprAmt(int iAssetID)
        {
            String strQuery = String.Format(@"SELECT TOP 1 a.FAAssetDeprItemAmt
FROM dbo.FAAssetDeprItems a
INNER JOIN FAAssetDeprs b ON a.FK_FAAssetDeprID = b.FAAssetDeprID 
AND a.AAStatus = 'Alive'
AND b.AAStatus = 'Alive'
AND FK_FAAssetID = {0}
ORDER BY FAAssetDeprDate DESC
", iAssetID);
            DataSet ds = dal.GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows[0][0] != DBNull.Value)
                return (double)ds.Tables[0].Rows[0][0];

            return 0;
        }

        // Lấy giá trị đã khấu hao trong 1 tháng của TSCD V.Hung 09/07/2015
        public double LayGiaTriKhauHaoThang(int iFAAssetID, int iPeriod, int iYear)
        {
            string strQuery = string.Format(@"SELECT TOP 1 a.FAAssetDeprItemAmt
                                            FROM dbo.FAAssetDeprItems a
                                            INNER JOIN FAAssetDeprs b ON a.FK_FAAssetDeprID = b.FAAssetDeprID 
                                                        AND a.AAStatus = 'Alive'
                                                        AND b.AAStatus = 'Alive'
                                                        AND a.FK_FAAssetID ={0}
                                                        AND b.FAPeriod={1}
                                                        AND b.FAYear={2}", iFAAssetID, iPeriod, iYear);
            DataSet ds = GetDataSet(strQuery);
            double dbKhauHaoThang = 0;
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                dbKhauHaoThang = Convert.ToDouble(ds.Tables[0].Rows[0][0].ToString());
            }
            return dbKhauHaoThang;
        }

        // V.Hung add 18/07/2015 Lấy khấu hao cuối cùng của TSCD
        public FAAssetDeprItemsInfo GetLastObjectByAsset(int iFAAssetID)
        {
            string strQuery = string.Format(@"SELECT TOP 1 dbo.FAAssetDeprItems.*
                                    FROM    dbo.FAAssetDeprItems
                                            INNER JOIN dbo.FAAssetDeprs ON dbo.FAAssetDeprItems.FK_FAAssetDeprID = dbo.FAAssetDeprs.FAAssetDeprID
                                                                           AND dbo.FAAssetDeprItems.AAStatus = 'Alive'
                                                                           AND dbo.FAAssetDeprs.AAStatus = 'Alive'
                                                                           AND dbo.FAAssetDeprItems.FK_FAAssetID = {0}
                                    ORDER BY dbo.FAAssetDeprs.FAAssetDeprDate DESC",iFAAssetID);
            DataSet ds = GetDataSet(strQuery);
            FAAssetDeprItemsInfo objFAAssetDeprItemInfo = null;
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                objFAAssetDeprItemInfo = (FAAssetDeprItemsInfo)GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return objFAAssetDeprItemInfo;
        }

        // V.Hung add 18/07/2015 Lấy danh sách khấu hao của TSCD sau ngày khau hao
        public DataSet GetAllDataByAssetAfterDateDepr(int iFAAssetID, DateTime dtDateDepr)
        {
            string strQuery = string.Format(@"SELECT  dbo.FAAssetDeprItems.*
                        FROM    dbo.FAAssetDeprItems
                                INNER JOIN dbo.FAAssetDeprs ON dbo.FAAssetDeprItems.FK_FAAssetDeprID = dbo.FAAssetDeprs.FAAssetDeprID
                                                               AND dbo.FAAssetDeprItems.AAStatus = 'Alive'
                                                               AND dbo.FAAssetDeprs.AAStatus = 'Alive'
                                                               AND dbo.FAAssetDeprItems.FK_FAAssetID ={0}
                                                               AND CONVERT(NVARCHAR(10), dbo.FAAssetDeprs.FAAssetDeprDate, 112) > CONVERT(NVARCHAR(10), '{1}', 112)",iFAAssetID,dtDateDepr.ToString("yyyyMMdd"));
            return GetDataSet(strQuery);
        }

        public double LayGiaTriKhauHaoTrongNam(int iFAAssetID, int iYear)
        {
            double dbKhauHao = 0;
            string strQuery = string.Format(@"SELECT  SUM(dbo.FAAssetDeprItems.FAAssetDeprItemAmt)
                            FROM    dbo.FAAssetDeprItems
                                    INNER JOIN dbo.FAAssetDeprs ON dbo.FAAssetDeprItems.FK_FAAssetDeprID = dbo.FAAssetDeprs.FAAssetDeprID
                                                                   AND dbo.FAAssetDeprItems.AAStatus = 'Alive'
                                                                   AND dbo.FAAssetDeprs.AAStatus = 'Alive'
                                                                   AND FK_FAAssetID = {0}
                                                                   AND dbo.FAAssetDeprs.FAYear = {1} ", iFAAssetID, iYear);
            DataSet ds = GetDataSet(strQuery);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                if(ds.Tables[0].Rows[0][0]!=DBNull.Value)
                    dbKhauHao=Convert.ToDouble(ds.Tables[0].Rows[0][0].ToString());
            }
            return dbKhauHao;
        }

        public DataSet GetAllDataByAsset(int iFAAssetID)
        {
            string strQuery = string.Format(@"SELECT  dbo.FAAssetDeprItems.*
                                            FROM    dbo.FAAssetDeprItems
                                                    INNER JOIN dbo.FAAssetDeprs ON dbo.FAAssetDeprItems.FK_FAAssetDeprID = dbo.FAAssetDeprs.FAAssetDeprID
                                                    AND dbo.FAAssetDeprs.AAStatus = 'Alive'
                                                    AND dbo.FAAssetDeprItems.AAStatus = 'Alive'
                                                    AND FK_FAAssetID = {0}", iFAAssetID);
            return GetDataSet(strQuery);
        }

        //Thang add - 16/11/2015 lấy danh sách tài sản đã khấu hao theo tháng hoặc năm
        public DataSet GetAllDataQueryAssetDepr(int iPeriod = 0, int iYear = 0, bool ViewDetail = false)
        {
            string strPeriod = "", strYear = "", strViewDetail = "", strViewCols = "";
            if (iPeriod > 0) strPeriod = string.Format(" AND FAAssetDeprPeriod = {0}", iPeriod);
            if (iYear > 0) strYear = string.Format(" AND FAAssetDeprYear = {0}", iYear);
            if (ViewDetail)
            {
                strViewDetail = " LEFT JOIN FAAssetDepartments as c ON b.FAAssetID = c.FK_FAAssetID AND c.AAStatus = 'Alive'";
                strViewCols = @",GLTOF01Combo,GLTOF02Combo,GLTOF03Combo,GLTOF04Combo,GLTOF05Combo,
                                GLTOF06Combo,GLTOF07Combo,GLTOF08Combo,GLTOF09Combo,GLTOF10Combo";
            }
            string strQuery = string.Format(@"SELECT FK_FAAssetDeprID,a.FK_FAAssetID,b.FK_FAAssetCriteriaID,
                                                    a.FAAssetDeprAmt as ViewQueryDeprAmt,
                                                    (a.FAAssetDeprAmt / CASE WHEN FAAssetDeprItemExcRate = 0 THEN 1 ELSE FAAssetDeprItemExcRate END) as ViewQueryDeprFAmt,
                                                    FAAssetDeprItemAmt as ViewQueryItemAmt,
                                                    FAAssetDeprItemFAmt as ViewQueryItemFAmt,
                                                    FAAssetCurrentNetBookAmt as ViewQueryCurrentNetBookAmt,
                                                    (FAAssetCurrentNetBookAmt / CASE WHEN FAAssetDeprItemExcRate = 0 THEN 1 ELSE FAAssetDeprItemExcRate END) as ViewQueryCurrentNetBookFAmt,
                                                    FAAssetCurrentAccumDeprAmt as ViewQueryCurrentAccumDeprAmt,
                                                    (FAAssetCurrentNetBookAmt / CASE WHEN FAAssetDeprItemExcRate = 0 THEN 1 ELSE FAAssetDeprItemExcRate END) as ViewQueryCurrentNetBookFAmt,
                                                    a.FAAssetNetBookAmt as ViewQueryNetBookAmt,
                                                    (a.FAAssetNetBookAmt / CASE WHEN FAAssetDeprItemExcRate = 0 THEN 1 ELSE FAAssetDeprItemExcRate END) as ViewQueryNetBookFAmt,
                                                    a.FAAssetAccumDeprAmt as ViewQueryAccumDeprAmt,
                                                    (a.FAAssetAccumDeprAmt / CASE WHEN FAAssetDeprItemExcRate = 0 THEN 1 ELSE FAAssetDeprItemExcRate END) as ViewQueryAccumDeprFAmt {2}
                                            FROM FAAssetDeprItems as a JOIN FAAssets as b ON a.FK_FAAssetID = b.FAAssetID {3}
                                            WHERE a.AAStatus = 'Alive' AND b.AAStatus = 'Alive' {0} {1}
                                            ORDER BY FAAssetDeprPeriod, FAAssetDeprYear", strPeriod, strYear, strViewCols, strViewDetail);
            return GetDataSet(strQuery);
        }
    }

	#endregion
}