using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region ACCostSimulationFactors
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:ACCostSimulationFactorsController
	//Created Date:21 Tháng Bảy 2014
	//-----------------------------------------------------------
	
	public class ACCostSimulationFactorsController:BaseBusinessController
	{
		public ACCostSimulationFactorsController()
		{
			dal= new DALBaseProvider("ACCostSimulationFactors",typeof(ACCostSimulationFactorsInfo));
		}
        public DataSet LayYeuToChiPhiConCungNhat()
        { 
            String str=String.Format(@"SELECT * FROM    dbo.ACCostSimulationFactors
                                       WHERE AAStatus = 'Alive'
                                       AND ACCostSimulationFactorID NOT IN (
                                                                               SELECT  FK_ACCostSimulationFactorParentID
                                                                               FROM    dbo.ACCostSimulationFactors
                                                                               WHERE   AAStatus = 'Alive' 
                                                                            )");
            return GetDataSet(str);
        }

        public ACCostSimulationFactorsInfo GetParentByACCostSimulationFactorID(int iACCostSimulationFactorID)
        {
            String str = String.Format(@"   SELECT * FROM dbo.ACCostSimulationFactors
                                            WHERE AAStatus = 'Alive'
                                            AND ACCostSimulationFactorID IN (
									                                            SELECT FK_ACCostSimulationFactorParentID FROM dbo.ACCostSimulationFactors
									                                            WHERE AAStatus = 'Alive'
									                                            AND ACCostSimulationFactorID = {0}
								                                            )", iACCostSimulationFactorID);
            DataSet dsACCostSimulationFactors = dal.GetDataSet(str);
            if(dsACCostSimulationFactors!=null && dsACCostSimulationFactors.Tables.Count > 0 && dsACCostSimulationFactors.Tables[0].Rows.Count > 0)
            {
                return (ACCostSimulationFactorsInfo)dal.GetObjectFromDataRow(dsACCostSimulationFactors.Tables[0].Rows[0]);
            }
            return null;
        }       
        public DataTable GetAllDataTreeGroup()
        {
            string strQuery = @"if object_ID('tempdb..#CostSimulationFactors') is not null drop table #CostSimulationFactors
select ACCostSimulationFactorID,ACCostSimulationFactorNo,ACCostSimulationFactorName,ACCostSimulationFactorDesc,FK_ACCostSimulationFactorParentID
into #CostSimulationFactors
from ACCostSimulationFactors where AAStatus = 'Alive'

;with CostSimulationFactor(ACCostSimulationFactorID,ACCostSimulationFactorNo,ACCostSimulationFactorNoDisplay,ACCostSimulationFactorName,ACCostSimulationFactorDesc,iLevel,iSort)
as(
	SELECT ACCostSimulationFactorID,ACCostSimulationFactorNo,
            CAST(ACCostSimulationFactorNo AS NVARCHAR) ACCostSimulationFactorNoDisplay,
			CAST(ACCostSimulationFactorName AS NVARCHAR) ACCostSimulationFactorName,
			CAST(ACCostSimulationFactorDesc AS NVARCHAR) ACCostSimulationFactorDesc,0,
			CAST(ACCostSimulationFactorNo AS NVARCHAR)
	FROM #CostSimulationFactors
	WHERE FK_ACCostSimulationFactorParentID = 0
	UNION ALL
	SELECT a.ACCostSimulationFactorID,a.ACCostSimulationFactorNo,
            CAST(REPLICATE('- ', iLevel + 1) + a.ACCostSimulationFactorNo AS NVARCHAR),
			CAST(REPLICATE('- ', iLevel + 1) + a.ACCostSimulationFactorName AS NVARCHAR),
			CAST(REPLICATE('- ', iLevel + 1) + a.ACCostSimulationFactorDesc AS NVARCHAR),
			b.iLevel + 1,CAST(b.iSort + CAST(a.ACCostSimulationFactorNo AS NVARCHAR) AS NVARCHAR)
	FROM #CostSimulationFactors a
	JOIN CostSimulationFactor b ON a.FK_ACCostSimulationFactorParentID = b.ACCostSimulationFactorID
)
select * from CostSimulationFactor order by iSort";
            return this.GetDataTableByDataSet(GetDataSet(strQuery));
        }
	}
	#endregion
}