using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region ACCostSimulationMethodItemParams
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:ACCostSimulationMethodItemParamsController
	//Created Date:22 Tháng Mười 2014
	//-----------------------------------------------------------
	
	public class ACCostSimulationMethodItemParamsController:BaseBusinessController
	{
		public ACCostSimulationMethodItemParamsController()
		{
			dal= new DALBaseProvider("ACCostSimulationMethodItemParams",typeof(ACCostSimulationMethodItemParamsInfo));
		}

        public ACCostSimulationMethodItemParamsInfo GetDataByParamTypeANDParamValue(int iACCostSimulationMethodItemID, String strParamType, String strParamValue)
        {
            String str = String.Format(@"SELECT * FROM dbo.ACCostSimulationMethodItemParams
                                        WHERE AAStatus = 'Alive'
                                        AND FK_ACCostSimulationMethodItemID = {0}
                                        AND ACCostSimulationMethodItemParamTypeCombo = '{1}'
                                        AND ACCostSimulationMethodItemParamNo = '{2}'"
                                        , iACCostSimulationMethodItemID, strParamType, strParamValue);
            DataSet ds = dal.GetDataSet(str);
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return (ACCostSimulationMethodItemParamsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }

        public DataSet GetAllDataByCostMethodItem(int iACCostSimulationMethodItemID)
        {
            String str = String.Format(@"SELECT * FROM dbo.ACCostSimulationMethodItemParams
                                            WHERE AAStatus = 'Alive'
                                            AND FK_ACCostSimulationMethodItemID = {0}
                                            ORDER BY ACCostSimulationMethodItemParamOrder ASC",
                                            iACCostSimulationMethodItemID);
            return dal.GetDataSet(str);
        }
        public double GetDataByTypeAndNo(string strTypeCombo, string strProductMethodNo, int iACCostSimulationMethodID)
        {
            string strQuery = string.Format(@"
                                            SELECT  ACCostSimulationMethodProductValue
                                            FROM    ACCostSimulationMethodProducts
                                            WHERE   ACCostSimulationMethodProductNo LIKE N'{0}'
                                                    AND ACCostSimulationMethodProductTypeCombo LIKE '{1}'
                                                    AND FK_ACCostSimulationMethodID = '{2}'
                                                    AND AAStatus = 'Alive';
                                            ", strProductMethodNo, strTypeCombo, iACCostSimulationMethodID);
            DataSet ds = GetDataSet(strQuery);
            double dProductValue = 0;
            if (ds != null && ds.Tables[0].Rows.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                object oProductValue = ds.Tables[0].Rows[0][0];
                if (!string.IsNullOrEmpty(Convert.ToString(oProductValue)))
                    dProductValue = Convert.ToDouble(oProductValue);
            }
            return dProductValue;
        }
    }
	#endregion
}