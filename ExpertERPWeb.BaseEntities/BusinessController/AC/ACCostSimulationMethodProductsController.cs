using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using ExpertWebLib;
namespace ExpertERP.BusinessEntities
{
	#region ACCostSimulationMethodProducts
	//-----------------------------------------------------------
	//Generated By: GMC Studio
	//Class:ACCostSimulationMethodProductsController
	//Created Date:22 Tháng Mười 2014
	//-----------------------------------------------------------
	
	public class ACCostSimulationMethodProductsController:BaseBusinessController
	{
		public ACCostSimulationMethodProductsController()
		{
			dal= new DALBaseProvider("ACCostSimulationMethodProducts",typeof(ACCostSimulationMethodProductsInfo));
		}

        public ACCostSimulationMethodProductsInfo GetDataByMethodANDNo(int iACCostSimulationMethodID, String strACCostSimulationMethodProductNo)
        {
            String str = String.Format(@"SELECT * FROM dbo.ACCostSimulationMethodProducts
                                            WHERE AAStatus = 'Alive'
                                            AND FK_ACCostSimulationMethodID = {0}
                                            AND ACCostSimulationMethodProductNo = '{1}'"
                                            , iACCostSimulationMethodID, strACCostSimulationMethodProductNo);
            DataSet ds = dal.GetDataSet(str);
            if(ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                return (ACCostSimulationMethodProductsInfo)dal.GetObjectFromDataRow(ds.Tables[0].Rows[0]);
            }
            return null;
        }
        public DataSet GetAllDataByComboTypeAndMethodID(string strType, int iACCostSimulationMethodID)
        {
            string strQuery = string.Format(@"
                                            SELECT * FROM dbo.ACCostSimulationMethodProducts
                                            WHERE AAStatus = 'Alive'
                                            AND FK_ACCostSimulationMethodID = {1}
                                            AND ACCostSimulationMethodProductTypeCombo = '{0}'
                                            ", strType, iACCostSimulationMethodID);
            return GetDataSet(strQuery);
        }
        public DataTable GetAllDataByMethodItemAndNo(int iCostSimulationMethodItemID, string strProductNo)
        {
            string strQuery = string.Format(@"SELECT * FROM ACCostSimulationMethodProducts a
                                                JOIN ACCostSimulationMethods b ON a.FK_ACCostSimulationMethodID = b.ACCostSimulationMethodID
                                                    AND a.AAStatus = 'Alive' AND b.AAStatus = 'Alive'
                                                JOIN ACCostSimulationMethodItems c ON c.FK_ACCostSimulationMethodID = b.ACCostSimulationMethodID
                                                    AND c.AAStatus = 'Alive'
												WHERE c.ACCostSimulationMethodItemID = {0} AND ACCostSimulationMethodProductNo = N'{1}'", iCostSimulationMethodItemID, strProductNo);
            return this.GetDataTableByDataSet(GetDataSet(strQuery));
        }
        public DataTable GetAllDataByCostFactorAndMethodID(int iCostSimulationMethodID)
        {
            string strQuery = string.Format(@"SELECT d.* FROM ACCostSimulationMethods a
                                                JOIN ACCostSimulationMethodItems b ON b.FK_ACCostSimulationMethodID = a.ACCostSimulationMethodID
                                                    AND a.AAStatus = 'Alive' AND b.AAStatus = 'Alive'
                                                JOIN ACCostSimulationMethodItemParams c ON b.ACCostSimulationMethodItemID = c.FK_ACCostSimulationMethodItemID
                                                    AND c.AAStatus = 'Alive'
                                                JOIN ACCostSimulationMethodProducts d ON d.FK_ACCostSimulationMethodID = a.ACCostSimulationMethodID
													AND d.AAStatus = 'Alive' AND ACCostSimulationMethodItemParamNo = ACCostSimulationMethodProductNo
                                                 WHERE ACCostSimulationMethodID = {0} AND ACCostSimulationMethodItemParamTypeCombo IN('CostFactor','CostFactorType','CostFactorCatalog')", iCostSimulationMethodID);
            return this.GetDataTableByDataSet(GetDataSet(strQuery));
        }

        public DataSet GetAllObjectByMethodItemTypeComboAndColumName(int iMethodItemID,string strTypeCombo,string strColName)
        {
            string strQuery = string.Format(@"
                                             SELECT  a.*
                                                    FROM    ACCostSimulationMethodProducts a
                                                            INNER JOIN dbo.ACCostSimulationMethodItems c ON a.FK_ACCostSimulationMethodID = c.FK_ACCostSimulationMethodID
                                                                                                          AND c.FK_ACCostSimulationMethodID = a.FK_ACCostSimulationMethodID
                                                                                                          AND c.ACCostSimulationMethodItemID = {0}
                                                    WHERE   a.ACCostSimulationMethodProductTypeCombo = '{1}'
                                                            AND a.ACCostSimulationMethodProductColName = '{2}'
                                            ", iMethodItemID, strTypeCombo,strColName);
            return GetDataSet(strQuery);
        }
    }
	#endregion
}